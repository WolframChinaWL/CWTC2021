(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1872088,      36787]
NotebookOptionsPosition[   1837918,      36201]
NotebookOutlinePosition[   1851240,      36397]
CellTagsIndexPosition[   1851114,      36391]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"6bc47d14-5ee7-4781-896b-86b6ea6fe52d"],

Cell[TextData[StyleBox["\:5e73\:9762\:51e0\:4f55\:4e92\:52a8\:7b80\:4ecb",
 FontSize->48,
 FontWeight->"Bold",
 FontTracking->"Plain",
 FontColor->RGBColor[1, 0.5, 0]]], "Title",
 CellChangeTimes->{{3.8300081374220133`*^9, 
  3.830008165165242*^9}},ExpressionUUID->"97251482-0371-4406-9e1d-\
8fb2a7c0d817"],

Cell[TextData[StyleBox["Wolfram|Alpha \:5f00\:53d1\:ff1a \:5f20\:6653\:51e1\n\
xiaofanz@wolfram.com",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.830008175565856*^9, 3.830008227792648*^9}, {
  3.830272474391006*^9, 
  3.830272479396557*^9}},ExpressionUUID->"fe5a8ee3-d413-46cf-a8d8-\
f596426e64e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"f5522fee-0d1c-4829-ad1b-2686924772fb"],

Cell[CellGroupData[{

Cell["\:7b80\:4ecb\:ff1aGeometricScene\:3001RandomInstance \:548c \
FindGeometricConjectures ", "Section",
 CellChangeTimes->{{3.8300084940201178`*^9, 3.8300085246439233`*^9}, {
  3.8300088451386995`*^9, 3.830008865189001*^9}, {3.830015075992573*^9, 
  3.830015131924653*^9}},ExpressionUUID->"01f3a72b-49ee-4fec-aed0-\
6b232e463aa2"],

Cell[TextData[{
 "\:6211\:4eec\:5c06\:5e73\:9762\:51e0\:4f55\:7528\:4e00\:79cd\:4eba\:673a\
\:5747\:53ef\:7406\:89e3\:7684Wolfram\:8bed\:8a00\:529f\:80fd\:ff0c\:6dfb\
\:52a0\:7b26\:53f7\:3001\:53d8\:91cf\:4ee5\:53ca\:5047\:8bbe\:ff0c\:4ee5\:62bd\
\:8c61\:7684\:3001\:7b26\:53f7\:5316\:7684\:5f62\:5f0f\:8868\:8fbe\:51fa\:6765\
\:3002\n",
 "\n",
 StyleBox["GeometricScene",
  FontFamily->"Consolas",
  FontWeight->"Normal",
  Background->RGBColor[0.87, 0.94, 1]],
 "\:ff1a\:5e73\:9762\:51e0\:4f55\:7684\:8868\:8fbe\:ff08\:5b9a\:4e49\:3001\
\:63cf\:8ff0\:ff09\n\n",
 StyleBox["RandomInstance",
  FontFamily->"Consolas",
  FontWeight->"Normal",
  Background->RGBColor[0.87, 0.94, 1]],
 "\:ff1a\:5177\:8c61\:5316\:7b26\:5408 ",
 StyleBox["GeometricScene",
  FontFamily->"Consolas",
  FontWeight->"Normal",
  Background->RGBColor[0.87, 0.94, 1]],
 " \:8868\:8fbe\:7684\:573a\:666f\:ff0c\:7ed9\:51fa\:7b26\:5408\:6761\:4ef6\
\:7684\:56fe\:50cf\:548c\:5750\:6807\n\n",
 StyleBox["FindGeometricConjectures",
  FontFamily->"Consolas",
  FontWeight->"Normal",
  Background->RGBColor[0.87, 0.94, 1]],
 "\:ff1a\:8fd0\:7528 ",
 StyleBox["RandomInstance",
  FontFamily->"Consolas",
  FontWeight->"Normal",
  Background->RGBColor[0.87, 0.94, 1]],
 "\:7ed9\:51fa\:7684\:5750\:6807\:ff0c\:7ed9\:51fa\:5173\:4e8e\:539f\:573a\
\:666f\:7684\:731c\:60f3\:7ed3\:8bba"
}], "Text",
 CellChangeTimes->{
  3.8269726695053616`*^9, {3.826972789774702*^9, 3.82697282563809*^9}, {
   3.8269728587072124`*^9, 3.826972973560809*^9}, {3.8269730353647437`*^9, 
   3.8269730653946133`*^9}, {3.8274904972707577`*^9, 3.827490497942745*^9}, {
   3.830008591474828*^9, 3.8300086084682713`*^9}, {3.830008652002879*^9, 
   3.830008832508527*^9}, {3.8300088893894215`*^9, 3.83000889269528*^9}, {
   3.8300090135533843`*^9, 3.8300090663538494`*^9}, {3.8300091006840324`*^9, 
   3.8300091307101717`*^9}, {3.8300091638832493`*^9, 
   3.8300091670480394`*^9}, {3.8302823974307933`*^9, 3.830282416583379*^9}},
 FontSize->18,ExpressionUUID->"7b064130-5a2d-469d-ac6b-76d716fe3ba2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ca2b41e0-c425-46b4-b45c-5e6a1b3bde34"],

Cell[CellGroupData[{

Cell["\:5b9e\:4f8b\:ff1a\:585e\:74e6\:5b9a\:7406\:ff08Ceva\[CloseCurlyQuote]s \
Theorem\:ff09", "Section",
 CellChangeTimes->{{3.8300131137943697`*^9, 3.83001311971361*^9}, {
  3.830013236673933*^9, 3.8300132490146217`*^9}, {3.830013633934849*^9, 
  3.83001364937634*^9}},ExpressionUUID->"cfa23d12-4e96-424c-bd1d-\
392d3b4ca03b"],

Cell[CellGroupData[{

Cell["\<\
\:5728\[EmptyUpTriangle]ABC\:5185\:4efb\:53d6\:4e00\:70b9O\:ff0c\:5ef6\:957f\
AO\:3001BO\:3001CO\:5206\:522b\:4ea4\:5bf9\:8fb9\:4e8eD\:3001E\:3001F\:ff0c\
\:5219 (BD/DC)\[Times](CE/EA)\[Times](AF/FB)=1\
\>", "Subsubsection",
 CellChangeTimes->{{3.8300132799318247`*^9, 3.8300132990399923`*^9}, 
   3.830014305417138*^9, 3.8300145572939253`*^9, {3.8302726395563707`*^9, 
   3.8302726425330124`*^9}},ExpressionUUID->"94dc52dd-9510-4a4f-b45f-\
326c8f6806ea"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
4p7Q99aHLfU06b7UiNf4nnqbYUrc+xV9b3265uw7zZwjF1KP9s572Fsg7j1E
7rd/JfU0nBlXTy8zTIl7y8h9xHLp7Dt7jqa5kMYPtWs9zDAl7q2j7y2upVld
T58+Zc2/gfcZpsS9fPS9xWZ7UvZ8+OKLL26fPHly+/zzz99bF/K8KON5hilx
7yrsh3fOrnG79m0P0NZ09vuc5kWmb2+99dZdriRn30PnhtrXtK+tr2/fa6S8
WRr7PNX4TeOe/Zn9rHXkPvph97L2+7LfVU6Ms7WdfYw9T+3jba1in1+So7SP
tfhmX2vaz6BYMNK1422GKXFvG/refLFr13KKaYxL9+6mb/a+NMbZ59a6/tO1
ztL+fs3v552nGabEvTrI/R5Le3GKcfacsms37XGbvumeUzHRPv+IfKOeX5fW
d/bv8V7zVoOXGabEvbroe6tPMc6eM9ofS6/Zubc0xtl9pn1+y31r7YuQF7s/
w7TV74S4tw/63q5zTb7BPsZi4bV7cUdSTdRIe3tzWs8wJe7tR3WwXvZyvZnL
N1zai5vmG7Q35jXGXaL78ZHnZbWcYUrc2x+53/v5Bu3F5eQbFBMD7/8PvS/c
aoYpce84I+Q+pntxnvMNnui5P+L6r8U55cS942mPp8f7s5T24kryDarh9ZJv
8EavjZf2RqLWTB05w5S4105PfW/R8w3eXOrx0nyFiGvio2aY2s+QuNecq763
WvmGlv+GaOznanFwWmcd8XXkiBmmFvfSOd7EvTZa5T5Ka3+n+Qb7fK4X1Lb3
DFPini979b0t1f6Sb4BXaa137euOuOeT1vrX/L6ne3HkG9CrvWaYEvd8W+t7
015cbr5Be3HkG9CLPWaYEvf6YL/3m5sb8g0YUu0ZpsQ9n+byDY8fPy7KN7AX
h2hqzTAl7rV17ayRt99++/azzz57thdHjMMoaswwncY9WzdErQdvba72Nyff
oL048g3AL7bOMCXu7ePa2ebkG4A8W2aYEve2U+2uh9nmwEiunWFK3CtTo7+B
vTignmtq/Ih78yLMNgdGUTrDlLhXb9YIMQ5op2SG6Whxr8VZql70+JiBErkz
TCPHPU9nqbZiv1/t/Z7O9wBpb1uU3zWQ0mzfpRq/CHGvp7NUHZitebLrhPOP
EMmlGaa9xT3yDdtdmvWn93m+BoBcSzNM7c9638lZ3GO2+b70e79wlg1nAKN7
czNMFfd0T9gq7o18lmpryWvJkrX3A65NZ5i2iHucpeqPzjhfOufj/HpC/EO3
0hq/77//fre4x1mq/dE9wVINwPmemPtfdCmdYfruu+9ujnucpRqLcl1L62q9
/+hzkICtbD325MmTu+v3xRdfzI575BvGkazNH9C9sX0Mv0v0xK7XV199dTGf
y1mqOO8zLO79ae+C/Qj0Rvctzz333N19L2epYsrW96eZe1udPW9rfmIfepPW
L0/fyDfA2L2AXgvtmtD1YNeOvV2oBQTcsuuafAMAAAAAAADgj+UhlLuwvWnt
Sdv+tP09NVgAIlO/UVqTsNajCQARaP03U5NCDzqA0KwG+VyX9Yxmt5z7MwAg
HPUjad647fepTpU+JACRqR9JPbY2T8Dinpc5zACwF82RSvO8FhMtBtKPBCAq
zdmdzpnU37P3ByCqubqXBLlfAGEtzeFVXKT2D0BUyezRZ6zu2e6Hyf0CiMhi
3Pkc8rs3zZC39aDmsjG7CgAAAAAAAAAAAAAAAJ78F9+IRE4=
    "], {{0, 147.}, {192., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{319.99999999999955`, Automatic},
  ImageSizeRaw->{192., 147.},
  PlotRange->{{0, 192.}, {0, 147.}}]], "Input",ExpressionUUID->"1473f5c8-e699-\
4851-bcec-4f026b5519ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scene1", "=", 
  RowBox[{"RandomInstance", "[", "\[IndentingNewLine]", "\t\t", 
   RowBox[{
    RowBox[{"GeometricScene", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "o"}], 
       "}"}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"Triangle", "[", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{"b", ",", "d", ",", "c"}], "}"}], "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{"a", ",", "e", ",", "c"}], "}"}], "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{"a", ",", "f", ",", "b"}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"GeometricAssertion", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{"a", ",", "d"}], "}"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{"b", ",", "e"}], "}"}], "]"}], ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{"c", ",", "f"}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Concurrent\>\"", ",", "o"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "\t\t", "}"}], ",", "\[IndentingNewLine]", 
      "\t\t", 
      RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Divide", "[", 
          RowBox[{
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"b", ",", "d"}], "]"}], ",", 
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"d", ",", "c"}], "]"}]}], "]"}], "*", 
         RowBox[{"Divide", "[", 
          RowBox[{
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"c", ",", "e"}], "]"}], ",", 
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"e", ",", "a"}], "]"}]}], "]"}], "*", 
         RowBox[{"Divide", "[", 
          RowBox[{
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"a", ",", "f"}], "]"}], ",", 
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"f", ",", "b"}], "]"}]}], "]"}]}], "\[Equal]", "1"}], 
       "\[IndentingNewLine]", "\t\t", "}"}]}], "\[IndentingNewLine]", "\t\t", 
     "]"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"RandomSeeding", "\[Rule]", "5"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8300133274922924`*^9, 3.830013400800726*^9}, {
  3.8300143078225126`*^9, 3.83001444951064*^9}, {3.830014581631469*^9, 
  3.830014775338875*^9}, {3.830282713368953*^9, 3.8302827145936127`*^9}, {
  3.830351857623906*^9, 3.8303519097248297`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"01ae3313-e219-49ce-a0b0-e7dc6c203ee3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ = 
    1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = {$CellContext`a, \
$CellContext`b, $CellContext`c, $CellContext`d, $CellContext`e, \
$CellContext`f, $CellContext`o}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c], 
     C["GeometricPoint"][$CellContext`d], 
     C["GeometricPoint"][$CellContext`e], 
     C["GeometricPoint"][$CellContext`f], 
     C["GeometricPoint"][$CellContext`o]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4, 5, 6, 
    7}, PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c], 
     C["GeometricPoint"][$CellContext`d], 
     C["GeometricPoint"][$CellContext`e], 
     C["GeometricPoint"][$CellContext`f], 
     C["GeometricPoint"][$CellContext`o]}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var3868, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3869}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var3870, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3871}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var3872, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3873}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var3874, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3875}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var3876, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3877}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var3878, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3879}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var3880, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3881}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = \
{{{-6.896978653647086, -5.653750686246875}, {3.5484300609272457`, 
    6.2574684291345655`}, {-5.261046353911226, 
    4.151210794178035}, {-1.119585915048001, 
    5.141395327218563}, {-6.245813039247935, -1.750955017938795}, \
{-3.034899966353021, -1.249724368092743}, {-3.6897182039392886`, 
    0.33909183543557253`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {"Step 1"}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 2, 3, 4, 5, 
    6, 7}}, PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = \
{{}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
      False, False, False, False, False, False, False}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4, 5, 6, 
    7}, PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{(
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var3868 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3870) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3882)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var3869 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3871) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3883)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var3868 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3872) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3884)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var3869 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3873) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3885)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var3870 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3872) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3886)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var3871 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3873) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3887)^2 + (
        1 - ((-(-PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3871)) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var3870 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3872) + (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3870) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var3871 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3873)) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3888)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3876 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3872) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3889)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3877 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3873) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3889)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3878 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3870) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3890)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3879 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3871) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3890)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var3870 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3874 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var3870 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3872) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3892)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var3871 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3875 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var3871 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3873) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3892)^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var3880 + 
        Rational[1, 3] (-PlaneGeometry`GeometrySceneDrawer`Dump`var3868 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3870 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3872 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3874) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3891 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var3870 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3876) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3893 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var3872 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3878) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3894))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var3868 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3874) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3891 + 
        Rational[1, 3] (PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3870 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3872 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3874) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3891 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3870 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3876) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3893 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3872 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3878) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3894))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var3870 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var3870 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3876) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3893 + 
        Rational[1, 3] (PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3870 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3872 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3874) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3891 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3870 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3876) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3893 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3872 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3878) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3894))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var3872 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var3872 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3878) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3894 + 
        Rational[1, 3] (PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3870 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3872 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3874) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3891 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3870 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3876) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3893 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3872 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3878) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3894))^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var3881 + 
        Rational[1, 3] (-PlaneGeometry`GeometrySceneDrawer`Dump`var3869 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3871 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3873 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3875) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3891 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var3871 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3877) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3893 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var3873 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3879) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3894))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var3869 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3875) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3891 + 
        Rational[1, 3] (PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3871 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3873 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3875) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3891 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3871 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3877) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3893 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3873 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3879) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3894))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var3871 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var3871 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3877) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3893 + 
        Rational[1, 3] (PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3871 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3873 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3875) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3891 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3871 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3877) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3893 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3873 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3879) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3894))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var3873 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var3873 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3879) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3894 + 
        Rational[1, 3] (PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3871 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3873 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3875) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3891 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3871 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3877) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3893 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3873 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3879) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3894))^2, {
      Rational[1, 
          4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var3869 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3871) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3872 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3868 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var3871 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3873) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3870 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3873))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var3869 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3871) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3872 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3868 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var3871 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3873) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3870 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3873))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var3869 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3871) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3872 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3868 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var3871 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3873) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3870 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3873))^2 >= 0.1, 0 < 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3889 < 1, 0 < 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3890 < 1, 0 < 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3891 < 1, 0 < 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3892 < 1, 0 < 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3893 < 1, 0 < 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3894 < 
       1, (-PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3876)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3877)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var3872 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3876)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var3873 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3877)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3878)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3879)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var3870 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3878)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var3871 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3879)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var3868 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3880)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var3869 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3881)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var3874 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3880)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var3875 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3881)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var3870 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3874)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var3871 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3875)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var3872 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3874)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var3873 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3875)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var3870 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3880)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var3871 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3881)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var3876 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3880)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var3877 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3881)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var3872 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3880)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var3873 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3881)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var3878 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3880)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var3879 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3881)^2 >= 0.03}, {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var3868, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3869, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3870, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3871, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3872, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3873, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3874, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3875, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3876, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3877, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3878, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3879, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3880, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3881}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var3882, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3883, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3884, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3885, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3886, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3887, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3888}, {{
        PlaneGeometry`GeometrySceneDrawer`Dump`var3889}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var3890}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var3891}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var3892}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var3893}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var3894}}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3861] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3862] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3863] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3864] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3865] (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3866] (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
       "notVar"[
        PlaneGeometry`GeometrySceneDrawer`Dump`var3867] ((-(-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2])) (-
           C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) + (-
           C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`b][1]) (-
           C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2])))^2 + (-
        C["GeometricPoint"][$CellContext`b][1] - 
       "paramVar"[{1}][4, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
        C["GeometricPoint"][$CellContext`c][1]) + 
       C["GeometricPoint"][$CellContext`d][1])^2 + (-
        C["GeometricPoint"][$CellContext`b][2] - 
       "paramVar"[{1}][4, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
        C["GeometricPoint"][$CellContext`c][2]) + 
       C["GeometricPoint"][$CellContext`d][2])^2 + (-
        C["GeometricPoint"][$CellContext`a][1] - 
       "paramVar"[{1}][1, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
        C["GeometricPoint"][$CellContext`c][1]) + 
       C["GeometricPoint"][$CellContext`e][1])^2 + (-
        C["GeometricPoint"][$CellContext`a][2] - 
       "paramVar"[{1}][1, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
        C["GeometricPoint"][$CellContext`c][2]) + 
       C["GeometricPoint"][$CellContext`e][2])^2 + (-
        C["GeometricPoint"][$CellContext`a][1] - 
       "paramVar"[{1}][2, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
        C["GeometricPoint"][$CellContext`b][1]) + 
       C["GeometricPoint"][$CellContext`f][1])^2 + (-
        C["GeometricPoint"][$CellContext`a][1] - 
       "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
        C["GeometricPoint"][$CellContext`d][1]) + 
       Rational[1, 3] (C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`b][1] + 
         C["GeometricPoint"][$CellContext`c][1] + 
         "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1]) + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`e][1]) + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`f][1])))^2 + (-
        C["GeometricPoint"][$CellContext`b][1] - 
       "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
        C["GeometricPoint"][$CellContext`e][1]) + 
       Rational[1, 3] (C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`b][1] + 
         C["GeometricPoint"][$CellContext`c][1] + 
         "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1]) + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`e][1]) + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`f][1])))^2 + (-
        C["GeometricPoint"][$CellContext`c][1] - 
       "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
        C["GeometricPoint"][$CellContext`f][1]) + 
       Rational[1, 3] (C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`b][1] + 
         C["GeometricPoint"][$CellContext`c][1] + 
         "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1]) + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`e][1]) + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`f][1])))^2 + (-
        C["GeometricPoint"][$CellContext`a][2] - 
       "paramVar"[{1}][2, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
        C["GeometricPoint"][$CellContext`b][2]) + 
       C["GeometricPoint"][$CellContext`f][2])^2 + (-
        C["GeometricPoint"][$CellContext`a][2] - 
       "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
        C["GeometricPoint"][$CellContext`d][2]) + 
       Rational[1, 3] (C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`c][2] + 
         "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]) + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`e][2]) + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`f][2])))^2 + (-
        C["GeometricPoint"][$CellContext`b][2] - 
       "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
        C["GeometricPoint"][$CellContext`e][2]) + 
       Rational[1, 3] (C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`c][2] + 
         "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]) + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`e][2]) + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`f][2])))^2 + (-
        C["GeometricPoint"][$CellContext`c][2] - 
       "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
        C["GeometricPoint"][$CellContext`f][2]) + 
       Rational[1, 3] (C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`c][2] + 
         "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]) + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`e][2]) + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`f][2])))^2 + (
       Rational[1, 3] (-C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`c][1] - 
         "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`d][1]) - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`e][1]) - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
          C["GeometricPoint"][$CellContext`f][1])) + 
       C["GeometricPoint"][$CellContext`o][1])^2 + (
       Rational[1, 3] (-C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`c][2] - 
         "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`d][2]) - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`e][2]) - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`f][2])) + 
       C["GeometricPoint"][$CellContext`o][2])^2}, 
    PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
     Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 0 < 
      "paramVar"[{1}][1, 2] < 1, 0 < "paramVar"[{1}][2, 2] < 1, 0 < 
      "paramVar"[{1}][3, 2] < 1, 0 < "paramVar"[{1}][4, 2] < 1, 0 < 
      "paramVar"[{1}][5, 2] < 1, 0 < "paramVar"[{1}][6, 2] < 
      1, (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`e][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`e][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`e][1])^2 + (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`e][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`f][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`f][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`f][1])^2 + (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`f][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`o][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`o][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
         "GeometricPoint"][$CellContext`o][1])^2 + (
         C["GeometricPoint"][$CellContext`d][2] - C[
         "GeometricPoint"][$CellContext`o][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
         C["GeometricPoint"][$CellContext`d][1])^2 + (-
          C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`d][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`d][1])^2 + (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`d][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
         C["GeometricPoint"][$CellContext`o][1])^2 + (-
          C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`o][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`e][1] - C[
         "GeometricPoint"][$CellContext`o][1])^2 + (
         C["GeometricPoint"][$CellContext`e][2] - C[
         "GeometricPoint"][$CellContext`o][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`o][1])^2 + (-
          C["GeometricPoint"][$CellContext`c][2] + 
         C["GeometricPoint"][$CellContext`o][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`f][1] - C[
         "GeometricPoint"][$CellContext`o][1])^2 + (
         C["GeometricPoint"][$CellContext`f][2] - C[
         "GeometricPoint"][$CellContext`o][2])^2 >= 0.03}}, 
    PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
       C["GeometricPoint"][$CellContext`a][1], 
       C["GeometricPoint"][$CellContext`a][2], 
       C["GeometricPoint"][$CellContext`b][1], 
       C["GeometricPoint"][$CellContext`b][2], 
       C["GeometricPoint"][$CellContext`c][1], 
       C["GeometricPoint"][$CellContext`c][2], 
       C["GeometricPoint"][$CellContext`d][1], 
       C["GeometricPoint"][$CellContext`d][2], 
       C["GeometricPoint"][$CellContext`e][1], 
       C["GeometricPoint"][$CellContext`e][2], 
       C["GeometricPoint"][$CellContext`f][1], 
       C["GeometricPoint"][$CellContext`f][2], 
       C["GeometricPoint"][$CellContext`o][1], 
       C["GeometricPoint"][$CellContext`o][2]}, {
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3861], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3862], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3863], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3864], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3865], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3866], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3867]}, {{
        "paramVar"[{1}][1, 2]}, {
        "paramVar"[{1}][2, 2]}, {
        "paramVar"[{1}][3, 2]}, {
        "paramVar"[{1}][4, 2]}, {
        "paramVar"[{1}][5, 2]}, {
        "paramVar"[{1}][6, 2]}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{
     C["GeometricPoint"][$CellContext`e][1] == 
      C["GeometricPoint"][$CellContext`a][1] + 
       "paramVar"[{1}][1, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`c][1]), 
      C["GeometricPoint"][$CellContext`e][2] == 
      C["GeometricPoint"][$CellContext`a][2] + 
       "paramVar"[{1}][1, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`c][2]), 
      C["GeometricPoint"][$CellContext`f][1] == 
      C["GeometricPoint"][$CellContext`a][1] + 
       "paramVar"[{1}][2, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`b][1]), 
      C["GeometricPoint"][$CellContext`f][2] == 
      C["GeometricPoint"][$CellContext`a][2] + 
       "paramVar"[{1}][2, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`b][2]), 
      C["GeometricPoint"][$CellContext`o][1] == 
      Rational[1, 3] (C["GeometricPoint"][$CellContext`a][1] + 
        C["GeometricPoint"][$CellContext`b][1] + 
        C["GeometricPoint"][$CellContext`c][1] + 
        "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`d][1]) + 
        "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`e][1]) + 
        "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
          C["GeometricPoint"][$CellContext`f][1])), 
      C["GeometricPoint"][$CellContext`o][2] == 
      Rational[1, 3] (C["GeometricPoint"][$CellContext`a][2] + 
        C["GeometricPoint"][$CellContext`b][2] + 
        C["GeometricPoint"][$CellContext`c][2] + 
        "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`d][2]) + 
        "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`e][2]) + 
        "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`f][2])), 
      C["GeometricPoint"][$CellContext`d][1] == 
      C["GeometricPoint"][$CellContext`b][1] + 
       "paramVar"[{1}][4, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
         C["GeometricPoint"][$CellContext`c][1]), 
      C["GeometricPoint"][$CellContext`d][2] == 
      C["GeometricPoint"][$CellContext`b][2] + 
       "paramVar"[{1}][4, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`c][2])}}, 
    PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
    1, 1, 1, {{{-6.400357493130165, -4.447010369027131}, {5.305354675111527, 
     6.835114387733268}, {-4.184194115803246, 
     2.969555330421945}, {-0.9861961757771245, 
     4.272256878604891}, {-5.387233936033577, -1.0565124034042135`}, \
{-2.891537153607061, -1.0651615545475248`}, {-3.3710588751474218`, 
     0.4315244402093119}}}, {{}}, {{{-6.400357493130165, -4.447010369027131}, \
{5.305354675111527, 6.835114387733268}, {-4.184194115803246, 
     2.969555330421945}, {-0.9861961757771245, 
     4.272256878604891}, {-5.387233936033577, -1.0565124034042135`}, \
{-2.891537153607061, -1.0651615545475248`}, {-3.3710588751474218`, 
     0.4315244402093119}}}, {{{
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`e]}]}, {
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`f]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}, 
          Inset[
           Style[" f ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`f]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`f]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`o]]}, 
          Inset[
           Style[" o ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`o]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`o]]}}}, {}}}}, {{{
       C["GeometricPoint"][$CellContext`a] -> {-6.400357493130165, \
-4.447010369027131}, 
        C["GeometricPoint"][$CellContext`b] -> {5.305354675111527, 
         6.835114387733268}, 
        C["GeometricPoint"][$CellContext`c] -> {-4.184194115803246, 
         2.969555330421945}, 
        C["GeometricPoint"][$CellContext`d] -> {-0.9861961757771245, 
         4.272256878604891}, 
        C["GeometricPoint"][$CellContext`e] -> {-5.387233936033577, \
-1.0565124034042135`}, 
        C["GeometricPoint"][$CellContext`f] -> {-2.891537153607061, \
-1.0651615545475248`}, 
        C["GeometricPoint"][$CellContext`o] -> {-3.3710588751474218`, 
         0.4315244402093119}}, {}}}, {{{
       False, False, False, False, False, False, False}}}, {{{}}}, False, 
     True, {}, {}, {{{-6.400357493130165, -4.447010369027131}, {
     5.305354675111527, 6.835114387733268}, {-4.184194115803246, 
     2.969555330421945}, {-0.9861961757771245, 
     4.272256878604891}, {-5.387233936033577, -1.0565124034042135`}, \
{-2.891537153607061, -1.0651615545475248`}, {-3.3710588751474218`, 
     0.4315244402093119}}}, {{{-7.870928709954334, 
     6.775925891935696}, {-6.129375291591947, 8.517479310298084}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-11.05623414232326, 5.816942359054055}, {-9.290012337262954, 
    7.583164164114363}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {
     PlaneGeometry`AssertionWrapper[(Divide[
          EuclideanDistance[$CellContext`b, $CellContext`d], 
          EuclideanDistance[$CellContext`d, $CellContext`c]] Divide[
          EuclideanDistance[$CellContext`c, $CellContext`e], 
          EuclideanDistance[$CellContext`e, $CellContext`a]]) Divide[
         EuclideanDistance[$CellContext`a, $CellContext`f], 
         EuclideanDistance[$CellContext`f, $CellContext`b]] == 1, {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = \
{{{-6.896978653647086, -5.653750686246875}, {3.5484300609272457`, 
    6.2574684291345655`}, {-5.261046353911226, 
    4.151210794178035}, {-1.119585915048001, 
    5.141395327218563}, {-6.245813039247935, -1.750955017938795}, \
{-3.034899966353021, -1.249724368092743}, {-3.6897182039392886`, 
    0.33909183543557253`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = {1, 1, -1}, 
    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = {{{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       RGBColor[1, 0.5, 0], 
       Point[
        C["GeometricPoint"][$CellContext`b]]}, 
      Inset[
       Style[" b ", 
        RGBColor[1, 0.5, 0], 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
       C["GeometricPoint"][$CellContext`b]], {
       AbsolutePointSize[17], 
       RGBColor[1, 0.5, 0], 
       Opacity[0], 
       Point[
        C["GeometricPoint"][$CellContext`b]]}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = \
{{{-6.896978653647086, -5.653750686246875}, {3.5484300609272457`, 
    6.2574684291345655`}, {-5.261046353911226, 
    4.151210794178035}, {-1.119585915048001, 
    5.141395327218563}, {-6.245813039247935, -1.750955017938795}, \
{-3.034899966353021, -1.249724368092743}, {-3.6897182039392886`, 
    0.33909183543557253`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
      C["GeometricPoint"][$CellContext`a], 
      C["GeometricPoint"][$CellContext`b], 
      C["GeometricPoint"][$CellContext`c], 
      C["GeometricPoint"][$CellContext`d], 
      C["GeometricPoint"][$CellContext`e], 
      C["GeometricPoint"][$CellContext`f], 
      C["GeometricPoint"][$CellContext`o]}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = {273.6222222222222, 
    40.06961805555521}, 
    PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = {
    195.84444444444443`, 276.1807291666663}, 
    PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Polygon[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`e]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`f]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`f]]}, 
         Inset[
          Style[" f ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`f]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`f]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`o]]}, 
         Inset[
          Style[" o ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`o]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`o]]}}}, {}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
      C["GeometricPoint"][$CellContext`a][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3868}, {
      C["GeometricPoint"][$CellContext`a][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3869}, {
      C["GeometricPoint"][$CellContext`b][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3870}, {
      C["GeometricPoint"][$CellContext`b][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3871}, {
      C["GeometricPoint"][$CellContext`c][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3872}, {
      C["GeometricPoint"][$CellContext`c][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3873}, {
      C["GeometricPoint"][$CellContext`d][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3874}, {
      C["GeometricPoint"][$CellContext`d][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3875}, {
      C["GeometricPoint"][$CellContext`e][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3876}, {
      C["GeometricPoint"][$CellContext`e][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3877}, {
      C["GeometricPoint"][$CellContext`f][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3878}, {
      C["GeometricPoint"][$CellContext`f][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3879}, {
      C["GeometricPoint"][$CellContext`o][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3880}, {
      C["GeometricPoint"][$CellContext`o][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3881}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3861], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3882}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3862], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3883}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3863], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3884}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3864], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3885}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3865], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3886}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3866], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3887}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3867], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3888}, {
      "paramVar"[{1}][1, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var3889}, {
      "paramVar"[{1}][2, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var3890}, {
      "paramVar"[{1}][3, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var3891}, {
      "paramVar"[{1}][4, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var3892}, {
      "paramVar"[{1}][5, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var3893}, {
      "paramVar"[{1}][6, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var3894}},
     PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var3868, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3869}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3870, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3871}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3872, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3873}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3874, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3875}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3876, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3877}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3878, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3879}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3880, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3881}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var3868, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3869} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var3870, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3871} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var3872, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3873} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var3874, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3875} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var3876, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3877} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var3878, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3879} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var3880, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3881} -> 1], 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var3868, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3869} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var3870, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3871} -> 
     2, {PlaneGeometry`GeometrySceneDrawer`Dump`var3872, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3873} -> 
     3, {PlaneGeometry`GeometrySceneDrawer`Dump`var3874, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3875} -> 
     4, {PlaneGeometry`GeometrySceneDrawer`Dump`var3876, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3877} -> 
     5, {PlaneGeometry`GeometrySceneDrawer`Dump`var3878, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3879} -> 
     6, {PlaneGeometry`GeometrySceneDrawer`Dump`var3880, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3881} -> 7], 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[], 
    PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
      C["GeometricPoint"][$CellContext`a] -> {-6.896978653647086, \
-5.653750686246875}, 
       C["GeometricPoint"][$CellContext`b] -> {3.5484300609272457`, 
        6.2574684291345655`}, 
       C["GeometricPoint"][$CellContext`c] -> {-5.261046353911226, 
        4.151210794178035}, 
       C["GeometricPoint"][$CellContext`d] -> {-1.119585915048001, 
        5.141395327218563}, 
       C["GeometricPoint"][$CellContext`e] -> {-6.245813039247935, \
-1.750955017938795}, 
       C["GeometricPoint"][$CellContext`f] -> {-3.034899966353021, \
-1.249724368092743}, 
       C["GeometricPoint"][$CellContext`o] -> {-3.6897182039392886`, 
        0.33909183543557253`}}, {}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var3870, 3.548335289947329}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3871, 6.25705680612409}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3868, -7.117097136260705}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3869, -4.91779254566572}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3872, -5.486670188981487}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3873, 4.55524898961781}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3874, -1.1577050821523112`}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3875, 5.47646561800201}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3876, -6.449501461567001}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3877, -1.0691547667973365`}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3878, -3.189157587530926}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3879, -1.0215224621880632`}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3880, -3.9010966279548946`}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3881, 0.712737574373736}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`constraint$$ = {{(3.548335289947329 - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3870)^2 + (
         6.25705680612409 - PlaneGeometry`GeometrySceneDrawer`Dump`var3871)^2 <= 
      0.2}}, PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
     Tooltip[
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
          Line[{{-0.75, 0}, {0.75, 0}}], 
          Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
       AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
     "Hide Controls" :> (
       PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
      Delimiter, Row[{
         Dynamic[
          RawBoxes[
           FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], "  ", 
         "Initial Settings"}] :> ({
        PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
         PlaneGeometry`GeometrySceneDrawerDump`step$$, 
         PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
         PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`current$$, 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
         PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
         PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
       PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
      "Paste Current Graphics" :> CellPrint[
        ExpressionCell[
         Append[
          PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
           Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
            If[
             And[
             True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
             PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
      "Paste Current GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          MapThread[Construct, {
            Map[ReplaceAll, {
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
            MapThread[Cases, {
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
              Map[HoldPattern, 
               Thread[Apply[Alternatives, 
                  Apply[Join, 
                   Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                  1}] -> Blank[]]]}]}], 
          If[False, 
           ReplaceAll[
            Take[
             ReplaceAll[
              Hold[{
                Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                Line[{$CellContext`b, $CellContext`d, $CellContext`c}], 
                Line[{$CellContext`a, $CellContext`e, $CellContext`c}], 
                Line[{$CellContext`a, $CellContext`f, $CellContext`b}], 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`d}], 
                  Line[{$CellContext`b, $CellContext`e}], 
                  Line[{$CellContext`c, $CellContext`f}]}, {
                 "Concurrent", $CellContext`o}]}], Hold[{
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  BlankNullSequence[GeometricStep]]}] :> 
              Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               BlankNullSequence[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
           Hold[{
             Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
             Line[{$CellContext`b, $CellContext`d, $CellContext`c}], 
             Line[{$CellContext`a, $CellContext`e, $CellContext`c}], 
             Line[{$CellContext`a, $CellContext`f, $CellContext`b}], 
             GeometricAssertion[{
               Line[{$CellContext`a, $CellContext`d}], 
               Line[{$CellContext`b, $CellContext`e}], 
               Line[{$CellContext`c, $CellContext`f}]}, {
              "Concurrent", $CellContext`o}]}]], 
          If[
           And[
           True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
           Replace[
            Part[
             Hold[{(Divide[
                   EuclideanDistance[$CellContext`b, $CellContext`d], 
                   EuclideanDistance[$CellContext`d, $CellContext`c]] Divide[
                   EuclideanDistance[$CellContext`c, $CellContext`e], 
                   EuclideanDistance[$CellContext`e, $CellContext`a]]) Divide[
                  EuclideanDistance[$CellContext`a, $CellContext`f], 
                  EuclideanDistance[$CellContext`f, $CellContext`b]] == 1}], {
             1}, PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               Blank[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], "Input"]],
       Delimiter, "Paste Complete GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          If[False, Identity, First][
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{
            Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
            Line[{$CellContext`b, $CellContext`d, $CellContext`c}], 
            Line[{$CellContext`a, $CellContext`e, $CellContext`c}], 
            Line[{$CellContext`a, $CellContext`f, $CellContext`b}], 
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`d}], 
              Line[{$CellContext`b, $CellContext`e}], 
              Line[{$CellContext`c, $CellContext`f}]}, {
             "Concurrent", $CellContext`o}]}], 
          Hold[{(Divide[
                EuclideanDistance[$CellContext`b, $CellContext`d], 
                EuclideanDistance[$CellContext`d, $CellContext`c]] Divide[
                EuclideanDistance[$CellContext`c, $CellContext`e], 
                EuclideanDistance[$CellContext`e, $CellContext`a]]) Divide[
               EuclideanDistance[$CellContext`a, $CellContext`f], 
               EuclideanDistance[$CellContext`f, $CellContext`b]] == 1}]], 
         "Input"]], "Paste Algebraic Formulation" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          First[
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{
            Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
            Line[{$CellContext`b, $CellContext`d, $CellContext`c}], 
            Line[{$CellContext`a, $CellContext`e, $CellContext`c}], 
            Line[{$CellContext`a, $CellContext`f, $CellContext`b}], 
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`d}], 
              Line[{$CellContext`b, $CellContext`e}], 
              Line[{$CellContext`c, $CellContext`f}]}, {
             "Concurrent", $CellContext`o}]}], 
          Hold[{(Divide[
                EuclideanDistance[$CellContext`b, $CellContext`d], 
                EuclideanDistance[$CellContext`d, $CellContext`c]] Divide[
                EuclideanDistance[$CellContext`c, $CellContext`e], 
                EuclideanDistance[$CellContext`e, $CellContext`a]]) Divide[
               EuclideanDistance[$CellContext`a, $CellContext`f], 
               EuclideanDistance[$CellContext`f, $CellContext`b]] == 1}]][
         "AlgebraicFormulation"], "Input"]], Delimiter, "Paste Parameters" :> 
      CellPrint[
        ExpressionCell[
         If[False, Identity, First][
          Transpose[
           MapThread[Construct, {
             Map[ReplaceAll, {
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
             Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
         "Input"]], "Paste Hypotheses" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{
            Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
            Line[{$CellContext`b, $CellContext`d, $CellContext`c}], 
            Line[{$CellContext`a, $CellContext`e, $CellContext`c}], 
            Line[{$CellContext`a, $CellContext`f, $CellContext`b}], 
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`d}], 
              Line[{$CellContext`b, $CellContext`e}], 
              Line[{$CellContext`c, $CellContext`f}]}, {
             "Concurrent", $CellContext`o}]}]], "Input"]], 
      "Paste Conclusions" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{(Divide[
                EuclideanDistance[$CellContext`b, $CellContext`d], 
                EuclideanDistance[$CellContext`d, $CellContext`c]] Divide[
                EuclideanDistance[$CellContext`c, $CellContext`e], 
                EuclideanDistance[$CellContext`e, $CellContext`a]]) Divide[
               EuclideanDistance[$CellContext`a, $CellContext`f], 
               EuclideanDistance[$CellContext`f, $CellContext`b]] == 1}]], 
         "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
        ExpressionCell[
         FindGeometricConjectures[
          PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
           If[
           False, {{{$CellContext`a -> {-6.400357493130165, \
-4.447010369027131}, $CellContext`b -> {5.305354675111527, 
                6.835114387733268}, $CellContext`c -> {-4.184194115803246, 
                2.969555330421945}, $CellContext`d -> {-0.9861961757771245, 
                4.272256878604891}, $CellContext`e -> {-5.387233936033577, \
-1.0565124034042135`}, $CellContext`f -> {-2.891537153607061, \
-1.0651615545475248`}, $CellContext`o -> {-3.3710588751474218`, 
                0.4315244402093119}}, {}}}, 
            
            First[{{{$CellContext`a -> {-6.400357493130165, \
-4.447010369027131}, $CellContext`b -> {5.305354675111527, 
                 6.835114387733268}, $CellContext`c -> {-4.184194115803246, 
                 2.969555330421945}, $CellContext`d -> {-0.9861961757771245, 
                 4.272256878604891}, $CellContext`e -> {-5.387233936033577, \
-1.0565124034042135`}, $CellContext`f -> {-2.891537153607061, \
-1.0651615545475248`}, $CellContext`o -> {-3.3710588751474218`, 
                 0.4315244402093119}}, {}}}]], 
           Hold[{
             Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
             Line[{$CellContext`b, $CellContext`d, $CellContext`c}], 
             Line[{$CellContext`a, $CellContext`e, $CellContext`c}], 
             Line[{$CellContext`a, $CellContext`f, $CellContext`b}], 
             GeometricAssertion[{
               Line[{$CellContext`a, $CellContext`d}], 
               Line[{$CellContext`b, $CellContext`e}], 
               Line[{$CellContext`c, $CellContext`f}]}, {
              "Concurrent", $CellContext`o}]}]]], "Input"]]}, Appearance -> 
     None, MenuAppearance -> "Menu"], 
    PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              2], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        ActionMenu[
         Tooltip[
          Graphics[{{
             GrayLevel[0.9], 
             Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], {
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
           AspectRatio -> Full, PlotRangePadding -> None], 
          "Controls/Paste"], {
         "Hide Controls" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
          Delimiter, Row[{
             Dynamic[
              RawBoxes[
               FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
             "  ", "Initial Settings"}] :> ({
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`current$$, 
             PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
           PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
          "Paste Current Graphics" :> CellPrint[
            ExpressionCell[
             Append[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                If[
                 And[
                 True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]],
           "Paste Current GeometricScene" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                MapThread[Cases, {
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                  Map[HoldPattern, 
                   Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
              If[False, 
               ReplaceAll[
                Take[
                 ReplaceAll[
                  Hold[{
                    
                    Triangle[{$CellContext`a, $CellContext`b, \
$CellContext`c}], 
                    Line[{$CellContext`b, $CellContext`d, $CellContext`c}], 
                    Line[{$CellContext`a, $CellContext`e, $CellContext`c}], 
                    Line[{$CellContext`a, $CellContext`f, $CellContext`b}], 
                    GeometricAssertion[{
                    Line[{$CellContext`a, $CellContext`d}], 
                    Line[{$CellContext`b, $CellContext`e}], 
                    Line[{$CellContext`c, $CellContext`f}]}, {
                    "Concurrent", $CellContext`o}]}], Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                  Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   BlankNullSequence[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
               Hold[{
                 Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                 Line[{$CellContext`b, $CellContext`d, $CellContext`c}], 
                 Line[{$CellContext`a, $CellContext`e, $CellContext`c}], 
                 Line[{$CellContext`a, $CellContext`f, $CellContext`b}], 
                 GeometricAssertion[{
                   Line[{$CellContext`a, $CellContext`d}], 
                   Line[{$CellContext`b, $CellContext`e}], 
                   Line[{$CellContext`c, $CellContext`f}]}, {
                  "Concurrent", $CellContext`o}]}]], 
              If[
               And[
               True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
               Replace[
                Part[
                 Hold[{(Divide[
                    EuclideanDistance[$CellContext`b, $CellContext`d], 
                    EuclideanDistance[$CellContext`d, $CellContext`c]] Divide[
                    EuclideanDistance[$CellContext`c, $CellContext`e], 
                    EuclideanDistance[$CellContext`e, $CellContext`a]]) Divide[
                    EuclideanDistance[$CellContext`a, $CellContext`f], 
                    EuclideanDistance[$CellContext`f, $CellContext`b]] == 
                   1}], {1}, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   Blank[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
             "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
          CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              If[False, Identity, First][
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{
                Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                Line[{$CellContext`b, $CellContext`d, $CellContext`c}], 
                Line[{$CellContext`a, $CellContext`e, $CellContext`c}], 
                Line[{$CellContext`a, $CellContext`f, $CellContext`b}], 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`d}], 
                  Line[{$CellContext`b, $CellContext`e}], 
                  Line[{$CellContext`c, $CellContext`f}]}, {
                 "Concurrent", $CellContext`o}]}], 
              Hold[{(Divide[
                    EuclideanDistance[$CellContext`b, $CellContext`d], 
                    EuclideanDistance[$CellContext`d, $CellContext`c]] Divide[
                    EuclideanDistance[$CellContext`c, $CellContext`e], 
                    EuclideanDistance[$CellContext`e, $CellContext`a]]) Divide[
                   EuclideanDistance[$CellContext`a, $CellContext`f], 
                   EuclideanDistance[$CellContext`f, $CellContext`b]] == 1}]],
              "Input"]], "Paste Algebraic Formulation" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              First[
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{
                Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                Line[{$CellContext`b, $CellContext`d, $CellContext`c}], 
                Line[{$CellContext`a, $CellContext`e, $CellContext`c}], 
                Line[{$CellContext`a, $CellContext`f, $CellContext`b}], 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`d}], 
                  Line[{$CellContext`b, $CellContext`e}], 
                  Line[{$CellContext`c, $CellContext`f}]}, {
                 "Concurrent", $CellContext`o}]}], 
              Hold[{(Divide[
                    EuclideanDistance[$CellContext`b, $CellContext`d], 
                    EuclideanDistance[$CellContext`d, $CellContext`c]] Divide[
                    EuclideanDistance[$CellContext`c, $CellContext`e], 
                    EuclideanDistance[$CellContext`e, $CellContext`a]]) Divide[
                   EuclideanDistance[$CellContext`a, $CellContext`f], 
                   EuclideanDistance[$CellContext`f, $CellContext`b]] == 1}]][
             "AlgebraicFormulation"], "Input"]], Delimiter, 
          "Paste Parameters" :> CellPrint[
            ExpressionCell[
             If[False, Identity, First][
              Transpose[
               MapThread[Construct, {
                 Map[ReplaceAll, {
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                 Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]],
              "Input"]], "Paste Hypotheses" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{
                Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                Line[{$CellContext`b, $CellContext`d, $CellContext`c}], 
                Line[{$CellContext`a, $CellContext`e, $CellContext`c}], 
                Line[{$CellContext`a, $CellContext`f, $CellContext`b}], 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`d}], 
                  Line[{$CellContext`b, $CellContext`e}], 
                  Line[{$CellContext`c, $CellContext`f}]}, {
                 "Concurrent", $CellContext`o}]}]], "Input"]], 
          "Paste Conclusions" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{(Divide[
                    EuclideanDistance[$CellContext`b, $CellContext`d], 
                    EuclideanDistance[$CellContext`d, $CellContext`c]] Divide[
                    EuclideanDistance[$CellContext`c, $CellContext`e], 
                    EuclideanDistance[$CellContext`e, $CellContext`a]]) Divide[
                   EuclideanDistance[$CellContext`a, $CellContext`f], 
                   EuclideanDistance[$CellContext`f, $CellContext`b]] == 1}]],
              "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
            ExpressionCell[
             FindGeometricConjectures[
              PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
              GeometricScene][
               If[
               False, {{{$CellContext`a -> {-6.400357493130165, \
-4.447010369027131}, $CellContext`b -> {5.305354675111527, 
                    6.835114387733268}, $CellContext`c -> {-4.184194115803246,
                     2.969555330421945}, $CellContext`d -> \
{-0.9861961757771245, 
                    4.272256878604891}, $CellContext`e -> \
{-5.387233936033577, -1.0565124034042135`}, $CellContext`f -> \
{-2.891537153607061, -1.0651615545475248`}, $CellContext`o -> \
{-3.3710588751474218`, 0.4315244402093119}}, {}}}, 
                
                First[{{{$CellContext`a -> {-6.400357493130165, \
-4.447010369027131}, $CellContext`b -> {5.305354675111527, 
                    6.835114387733268}, $CellContext`c -> {-4.184194115803246,
                     2.969555330421945}, $CellContext`d -> \
{-0.9861961757771245, 
                    4.272256878604891}, $CellContext`e -> \
{-5.387233936033577, -1.0565124034042135`}, $CellContext`f -> \
{-2.891537153607061, -1.0651615545475248`}, $CellContext`o -> \
{-3.3710588751474218`, 0.4315244402093119}}, {}}}]], 
               Hold[{
                 Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                 Line[{$CellContext`b, $CellContext`d, $CellContext`c}], 
                 Line[{$CellContext`a, $CellContext`e, $CellContext`c}], 
                 Line[{$CellContext`a, $CellContext`f, $CellContext`b}], 
                 GeometricAssertion[{
                   Line[{$CellContext`a, $CellContext`d}], 
                   Line[{$CellContext`b, $CellContext`e}], 
                   Line[{$CellContext`c, $CellContext`f}]}, {
                  "Concurrent", $CellContext`o}]}]]], "Input"]]}, Appearance -> 
         None, MenuAppearance -> "Menu"], "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
     Grid[{{
        PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
        If[False, 
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 37.5},
             Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"],
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 1.5]], 
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
          Dynamic[
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
        PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
         Opacity[0]]}, 
       If[
        And[False, False], {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
        Nothing]}, Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              10], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        EventHandler[
         Dynamic[
          If[
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
         "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
           Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
        "LinkHand"], 
       MouseAppearance[
        Dynamic[
         Which[
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          EventHandler[
           Dynamic[PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
           "MouseClicked" :> (
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
             PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}, 
           Method -> "Queued"], True, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{0, -1}, {1, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Line[{{-0.5, 0}, {0.5, 0}}], 
             Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
          AspectRatio -> Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
               PlaneGeometry`GeometrySceneDrawerDump`q}, {
              PlaneGeometry`GeometrySceneDrawerDump`q, 
               Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {0, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
          Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                PlaneGeometry`GeometrySceneDrawerDump`q}, {
               PlaneGeometry`GeometrySceneDrawerDump`q, 
                Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Arrowheads[{{1, 1, 
                Graphics[
                 Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
             Arrow[
              BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
          ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
          None], {"MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
           PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
             PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
        "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
       Grid[{{
          Graphics[{{
             GrayLevel[1], 
             
             Rectangle[{-
               Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                 10], -1}, {
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style["", Larger, 
               GrayLevel[0]], {0, 0}]}}, 
           ImageSize -> {
            20 Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
             20}, AspectRatio -> Full, PlotRangePadding -> None], 
          MouseAppearance[
           EventHandler[
            Dynamic[
             If[
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
            "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
              Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
           "LinkHand"], 
          MouseAppearance[
           Dynamic[
            Which[
            PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             EventHandler[
              Dynamic[
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
                PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)\
}, Method -> "Queued"], True, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]]\
, "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{0, -1}, {1, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.5, 0}, {0.5, 0}}], 
                Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {0, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                   PlaneGeometry`GeometrySceneDrawerDump`q}, {
                  PlaneGeometry`GeometrySceneDrawerDump`q, 
                   Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Arrowheads[{{1, 1, 
                   Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                Arrow[
                 BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
             ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
             None], {"MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
              PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
           "LinkHand"]}}, Spacings -> {0, 0}]}, {
       Grid[{{
          Graphics[{{
             GrayLevel[1], 
             Rectangle[{-5, -1}, {5, 1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style[
               Style["Conclusion", Larger, Bold, 
                GrayLevel[0.6]], Larger, 
               GrayLevel[0]], {0, 0}]}}, ImageSize -> {100, 20}, AspectRatio -> 
           Full, PlotRangePadding -> None], 
          Graphics[{{
             GrayLevel[1], 
             
             Rectangle[{-
               Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                 5], -1}, {
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5], 
               1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style["", Larger, 
               GrayLevel[0]], {0, 0}]}}, 
           ImageSize -> {
            20 Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5], 
             20}, AspectRatio -> Full, PlotRangePadding -> None]}}, 
        Spacings -> {0, 0}]}, {
       MouseAppearance[
        ActionMenu[
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5}, 
            Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"], 
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 1.5]], {
         PlaneGeometry`AssertionWrapper[(Divide[
                EuclideanDistance[$CellContext`b, $CellContext`d], 
                EuclideanDistance[$CellContext`d, $CellContext`c]] Divide[
                EuclideanDistance[$CellContext`c, $CellContext`e], 
                EuclideanDistance[$CellContext`e, $CellContext`a]]) Divide[
               EuclideanDistance[$CellContext`a, $CellContext`f], 
               EuclideanDistance[$CellContext`f, $CellContext`b]] == 1, {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 1)}, 
         Appearance -> None], "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
     Grid[
      If[True, {{
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
         Grid[{{
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Style["Conclusion", Larger, Bold, 
              GrayLevel[0.6]], 5], 
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
             Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}}, 
          Spacings -> {0, 0}]}, {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
          Pane[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
            PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
           ImageSize -> {
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5}, 
           Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"], 
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
          1.5]}}, {{}}], Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
     MouseAppearance[
      Piecewise[{{
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
            False)}, PassEventsDown -> True], 
         And[
          Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
          PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
            Null)}, PassEventsDown -> True], 
         And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
        True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
          PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
        PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
         PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
          PlaneGeometry`GeometrySceneDrawerDump`step$$, 
          PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
          TimeConstrained[
           Fold[
           PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
            PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            
            Transpose[{
             PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
              PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
              PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
           PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
           Flatten[
            ReplaceAll[
             ReplaceAll[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 C["GeometricPoint"][
                  BlankNullSequence[]]] -> 
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                 Blank[]]) :> 
              Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                 PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                PlaneGeometry`GeometrySceneDrawerDump`c]], 
             Apply[
             Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
          Flatten[
           ReplaceAll[
            ReplaceAll[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                C["GeometricPoint"][
                 BlankNullSequence[]]] -> 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                Blank[]]) :> 
             Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                PlaneGeometry`GeometrySceneDrawerDump`x] -> 
               PlaneGeometry`GeometrySceneDrawerDump`c]], 
            Apply[
            Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
       PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
        ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
            And[
            True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
        ReplaceAll[{
          PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Apply[Rule, 
           Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
           1}]]; Part[
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
          ReplaceAll[
           Normal[
            AssociationMap[
            PlaneGeometry`GeometrySceneDrawerDump`point, 
             PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
          Select[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
           PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
            First[#]]& ]}; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
       PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
      "DragGraphics"], SynchronousUpdating -> False], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
     Panel[
      Grid[{{
         Text[
          Style["Points", Bold]]}, {
         Grid[{{
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 1]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 2]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 3]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 4]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 5]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   5], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 6]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   6], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 7], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 7]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   7], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 7], Not]}, 
              PassEventsUp -> False], "LinkHand"]}}]}, {
         Grid[{{
            Graphics[{
              Hue[0.64, 0.71, 0.37], 
              AbsolutePointSize[11], 
              Point[{0, 0}], 
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
            Graphics[{
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
       Alignment -> Left, Dividers -> False], Background -> GrayLevel[0.9]], {
     "MouseClicked" :> (
       PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
       NotebookDelete[
        PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = CellObject[72817], 
    PlaneGeometry`GeometrySceneDrawerDump`display$$, 
    PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = MouseAppearance[
     Dynamic[
      EventHandler[
       Tooltip[
        Append[
         PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
          Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           If[
            And[
            True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
         PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
          PlaneGeometry`GeometrySceneDrawerDump`size$$}], "Show Controls"], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
       PassEventsUp -> False]], "LinkHand"], 
    PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1.5}, {1, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1.5}, {0, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
       RGBColor[0.161, 0.667, 0.887], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
    Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {1, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Line[{{-0.5, 0}, {0.5, 0}}], 
        Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {0, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Arrowheads[{{1, 1, 
           Graphics[
            Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
        Arrow[
         BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
     ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4, 5, 
    6, 7}}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" a ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" b ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" c ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" d ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" e ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" f ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" o ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Polygon[{{-6.400357493130165, -4.447010369027131}, {
          5.305354675111527, 6.835114387733268}, {-4.184194115803246, 
          2.969555330421945}}]}, {
         Line[{{5.305354675111527, 6.835114387733268}, {-4.184194115803246, 
          2.969555330421945}}]}, {
         Line[{{-6.400357493130165, -4.447010369027131}, {-4.184194115803246, 
          2.969555330421945}}]}, {
         Line[{{-6.400357493130165, -4.447010369027131}, {5.305354675111527, 
          6.835114387733268}}]}, {
         Line[{{-6.400357493130165, -4.447010369027131}, {-0.9861961757771245,
           4.272256878604891}}]}, {
         Line[{{5.305354675111527, 
          6.835114387733268}, {-5.387233936033577, -1.0565124034042135`}}]}, {
         Line[{{-4.184194115803246, 
          2.969555330421945}, {-2.891537153607061, -1.0651615545475248`}}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{5.305354675111527, 6.835114387733268}]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          5.305354675111527, 6.835114387733268}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{5.305354675111527, 6.835114387733268}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-0.9861961757771245, 4.272256878604891}]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-0.9861961757771245, 4.272256878604891}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-0.9861961757771245, 4.272256878604891}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-4.184194115803246, 2.969555330421945}]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-4.184194115803246, 2.969555330421945}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-4.184194115803246, 2.969555330421945}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-6.400357493130165, -4.447010369027131}]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-6.400357493130165, -4.447010369027131}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-6.400357493130165, -4.447010369027131}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-5.387233936033577, -1.0565124034042135`}]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-5.387233936033577, -1.0565124034042135`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-5.387233936033577, -1.0565124034042135`}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-2.891537153607061, -1.0651615545475248`}]}, 
         Inset[
          Style[" f ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-2.891537153607061, -1.0651615545475248`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-2.891537153607061, -1.0651615545475248`}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-3.3710588751474218`, 0.4315244402093119}]}, 
         Inset[
          Style[" o ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-3.3710588751474218`, 0.4315244402093119}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-3.3710588751474218`, 0.4315244402093119}]}}}, {}}}, 
     Background -> GrayLevel[1], {
     PlotRange -> {{-7.870928709954334, 
       6.775925891935696}, {-6.129375291591947, 8.517479310298084}}, 
      ImageSize -> {{380, 380}, {380, 380}}}], 
    PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[591281]}, 
    StyleBox[
     FrameBox[
      PaneBox[
       PaneSelectorBox[{False->
        DynamicBox[ToBoxes[
          If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
           Column[{
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
             Pane[
             PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
              Dynamic[PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                   First[#], 205] {1, 1})& ], ImageSizeAction -> 
              "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
           PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
          StandardForm],
         ImageSizeCache->{380., {242.3340332872234, 248.06596671277657`}}], 
        True->
        TagBox[
         DynamicBox[ToBoxes[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
           StandardForm],
          ImageSizeCache->{380., {242.3340332872234, 248.06596671277657`}}],
         MouseAppearanceTag["Arrow"]]}, Dynamic[
         CurrentValue["MouseOver"]],
        FrameMargins->0,
        ImageSize->All],
       ImageSize->Dynamic[
        PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
             And[False, False], 30, 0] + If[True, 50, 0]}]],
      FrameStyle->GrayLevel[0.9],
      StripOnInput->False],
     StripOnInput->False,
     DynamicEvaluationTimeout->20,
     ImageSize->Automatic,
     BaseStyle -> {
      SetterBoxOptions -> {ImageSize -> Automatic}, 
       PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
    DynamicModuleValues:>{{
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`display$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`display$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
             Blank[]]]] :> Dynamic[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$]]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`color, 
             RepeatedNull[
              Blank[], 1]]]] :> 
         PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
            Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
            Line[{{-0.75, 0}, {0.75, 0}}], 
            Line[{{-0.75, -0.5}, {0.75, -0.5}}]}, "both", 2, 1.5, 
           PlaneGeometry`GeometrySceneDrawerDump`color]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
             Blank[]], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
              Blank[]], 1], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
              Blank[]], 1]]] :> 
         PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
            Text[
             Style[
             PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
             0}], 
            Line[{{
              PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1.5, 
               0.25}, {
              PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1, -0.25}, {
              PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 0.5, 
               0.25}}]}, "both", 
           PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
           PlaneGeometry`GeometrySceneDrawerDump`heightFactor]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
             Blank[]], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
              Blank[]], 1], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
              Blank[]], 1]]] :> PlaneGeometry`GeometrySceneDrawerDump`makeIcon[
           Text[
            Style[
            PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
            0}], "both", PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
           PlaneGeometry`GeometrySceneDrawerDump`heightFactor, White]}}},
    Initialization:>(GeometricScene; 
     PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  GeometricScene[{{$CellContext`a -> {-6.400357493130165, \
-4.447010369027131}, $CellContext`b -> {5.305354675111527, 
      6.835114387733268}, $CellContext`c -> {-4.184194115803246, 
      2.969555330421945}, $CellContext`d -> {-0.9861961757771245, 
      4.272256878604891}, $CellContext`e -> {-5.387233936033577, \
-1.0565124034042135`}, $CellContext`f -> {-2.891537153607061, \
-1.0651615545475248`}, $CellContext`o -> {-3.3710588751474218`, 
      0.4315244402093119}}, {}}, {
    Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
    Line[{$CellContext`b, $CellContext`d, $CellContext`c}], 
    Line[{$CellContext`a, $CellContext`e, $CellContext`c}], 
    Line[{$CellContext`a, $CellContext`f, $CellContext`b}], 
    GeometricAssertion[{
      Line[{$CellContext`a, $CellContext`d}], 
      Line[{$CellContext`b, $CellContext`e}], 
      Line[{$CellContext`c, $CellContext`f}]}, {
     "Concurrent", $CellContext`o}]}, {(Divide[
        EuclideanDistance[$CellContext`b, $CellContext`d], 
        EuclideanDistance[$CellContext`d, $CellContext`c]] Divide[
        EuclideanDistance[$CellContext`c, $CellContext`e], 
        EuclideanDistance[$CellContext`e, $CellContext`a]]) Divide[
       EuclideanDistance[$CellContext`a, $CellContext`f], 
       EuclideanDistance[$CellContext`f, $CellContext`b]] == 1}],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.830351897593444*^9, 3.8303519112511272`*^9}, 
   3.830351948028697*^9, {3.830352149013644*^9, 3.8303521744950285`*^9}},
 CellLabel->"Out[42]=",ExpressionUUID->"bccfc5bf-2067-47db-834e-cb6c00b573e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scene1", "[", "\"\<Points\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8300148118761034`*^9, 3.8300148298463807`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"e2e3e090-69c7-49b3-b3ee-40fe82d95225"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6.400357493130165`"}], ",", 
      RowBox[{"-", "4.447010369027131`"}]}], "}"}]}], ",", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"5.305354675111527`", ",", "6.835114387733268`"}], "}"}]}], ",", 
   RowBox[{"c", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "4.184194115803246`"}], ",", "2.969555330421945`"}], 
     "}"}]}], ",", 
   RowBox[{"d", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.9861961757771245`"}], ",", "4.272256878604891`"}], 
     "}"}]}], ",", 
   RowBox[{"e", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5.387233936033577`"}], ",", 
      RowBox[{"-", "1.0565124034042135`"}]}], "}"}]}], ",", 
   RowBox[{"f", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.891537153607061`"}], ",", 
      RowBox[{"-", "1.0651615545475248`"}]}], "}"}]}], ",", 
   RowBox[{"o", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.3710588751474218`"}], ",", "0.4315244402093119`"}], 
     "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8300148300706253`*^9, 3.8300148610838056`*^9, 
  3.8303518464658103`*^9, 3.8303519624625864`*^9, 3.830352149304717*^9, 
  3.830352179641102*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"580e3d12-11ec-4e29-bc61-56863c91be8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Divide", "[", 
    RowBox[{
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"b", ",", "d"}], "]"}], ",", 
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"d", ",", "c"}], "]"}]}], "]"}], "*", 
   RowBox[{"Divide", "[", 
    RowBox[{
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"c", ",", "e"}], "]"}], ",", 
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"e", ",", "a"}], "]"}]}], "]"}], "*", 
   RowBox[{"Divide", "[", 
    RowBox[{
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"a", ",", "f"}], "]"}], ",", 
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"f", ",", "b"}], "]"}]}], "]"}]}], "/.", "%"}]], "Input",
 CellChangeTimes->{{3.8300148405431395`*^9, 3.830014844601731*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"74bbdc7b-c23e-4427-984d-381c6298471a"],

Cell[BoxData["1.000020834735658`"], "Output",
 CellChangeTimes->{{3.830014845015669*^9, 3.83001486418258*^9}, {
   3.8303518424348783`*^9, 3.830351849645932*^9}, 3.83035196474914*^9, 
   3.830352149347314*^9, 3.830352182386363*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"ab19191b-8936-464b-8571-0b3538820f2b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ef6d565e-11bc-4e43-9b85-058ac249ad89"],

Cell[CellGroupData[{

Cell["\:5b9e\:4f8b\:ff1a\:6784\:5efa\:7b49\:8fb9\:4e09\:89d2\:5f62", "Section",
 CellChangeTimes->{{3.8300096070451317`*^9, 3.830009613682342*^9}, {
  3.8300112476674843`*^9, 
  3.830011252771288*^9}},ExpressionUUID->"09d5df52-d002-4f93-8c49-\
65a53ff83c92"],

Cell[CellGroupData[{

Cell["\<\
\:5728\:4e00\:6761\:5df2\:77e5\:6709\:9650\:76f4\:7ebf\:4e0a\:4f5c\:4e00\:4e2a\
\:7b49\:8fb9\:4e09\:89d2\:5f62\:3002\
\>", "Subsubsection",
 CellChangeTimes->{{3.8302733355864897`*^9, 3.830273351229718*^9}, {
  3.8302733839609423`*^9, 
  3.8302733934056263`*^9}},ExpressionUUID->"af9bf27a-03ac-42b3-a8ed-\
072e8410359f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scene2", "=", 
  RowBox[{"RandomInstance", "[", "\[IndentingNewLine]", "\t\t", 
   RowBox[{"GeometricScene", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
       RowBox[{"{", "d", "}"}]}], "}"}], ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"GeometricStep", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{"a", ",", "b"}], "}"}], "]"}], ",", 
           RowBox[{
            RowBox[{"EuclideanDistance", "[", 
             RowBox[{"a", ",", "b"}], "]"}], "\[Equal]", "d"}]}], "}"}], ",", 
         "\"\<\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002\>\""}]\
, "]"}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"GeometricStep", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cir1", "==", 
            RowBox[{"Circle", "[", 
             RowBox[{"a", ",", "d"}], "]"}]}], ",", 
           RowBox[{"cir2", "==", 
            RowBox[{"Circle", "[", 
             RowBox[{"b", ",", "d"}], "]"}]}]}], "}"}], ",", 
         "\"\<\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\:534a\
\:5f84\:4f5c\:5706\:3002\>\""}], "]"}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"GeometricStep", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"c", "\[Element]", "cir1"}], ",", 
           RowBox[{"c", "\[Element]", "cir2"}]}], "}"}], ",", 
         "\"\<\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002\>\""}], 
        "]"}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"GeometricStep", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Triangle", "[", 
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}], ",", "Pink"}], 
          "]"}], ",", 
         "\"\<\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\:4e09\:89d2\
\:5f62\:3002\>\""}], "]"}]}], "\[IndentingNewLine]", "\t\t", "}"}]}], 
    "\[IndentingNewLine]", "\t\t", "]"}], "\[IndentingNewLine]", "\t\t", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.71681497499584*^9, 3.7168149926656065`*^9}, {
   3.716815459124248*^9, 3.716815476904026*^9}, {3.7168155309544306`*^9, 
   3.71681553234857*^9}, {3.7168155733696713`*^9, 3.716815574324767*^9}, {
   3.716815706984838*^9, 3.716815709833838*^9}, {3.7173407309685383`*^9, 
   3.717340731274538*^9}, {3.7180269328992844`*^9, 3.718026952270221*^9}, {
   3.7180271725042424`*^9, 3.718027213046296*^9}, {3.731247985747597*^9, 
   3.731247987962597*^9}, {3.7312534558201537`*^9, 3.731253458457154*^9}, 
   3.7313375327846107`*^9, {3.7313375786842*^9, 3.7313375899083223`*^9}, {
   3.7335759059900723`*^9, 3.7335759604079676`*^9}, {3.733753107472726*^9, 
   3.7337531106447263`*^9}, {3.733760833544529*^9, 3.733760851195529*^9}, {
   3.734265118144955*^9, 3.7342651218643274`*^9}, {3.749382012228887*^9, 
   3.749382033897887*^9}, {3.74950689938396*^9, 3.7495069063644476`*^9}, {
   3.749507832431055*^9, 3.749507832806033*^9}, 3.749509236827092*^9, {
   3.750423224666135*^9, 3.7504232468863564`*^9}, {3.7504260502497497`*^9, 
   3.7504260662507496`*^9}, {3.7504261908817496`*^9, 
   3.7504261947627497`*^9}, {3.750434746525858*^9, 3.750434765029858*^9}, {
   3.751214274110632*^9, 3.751214297899632*^9}, {3.756833875207515*^9, 
   3.7568339099231677`*^9}, 3.7568339708555584`*^9, {3.75683400172925*^9, 
   3.756834019840069*^9}, {3.765539760360407*^9, 3.76553980899873*^9}, {
   3.767366367224456*^9, 3.767366368890456*^9}, 3.767366411019456*^9, {
   3.773087322394142*^9, 3.773087323655142*^9}, {3.7734217755075665`*^9, 
   3.7734217765677786`*^9}, {3.7927663129679317`*^9, 
   3.7927663560179834`*^9}, {3.7927664730891504`*^9, 3.792766485446856*^9}, {
   3.792766596102914*^9, 3.792766613808499*^9}, {3.7927686672607994`*^9, 
   3.7927686682137475`*^9}, {3.7930388786170073`*^9, 
   3.7930388793186803`*^9}, {3.793039175779789*^9, 3.7930391763658543`*^9}, 
   3.793039716167221*^9, {3.800017472554699*^9, 3.8000174745645976`*^9}, {
   3.8000990406660843`*^9, 3.8000990427309003`*^9}, {3.800207515793462*^9, 
   3.8002075162341604`*^9}, {3.800275356212082*^9, 3.800275357542097*^9}, {
   3.8070226930283966`*^9, 3.807022779728262*^9}, {3.8070228194916105`*^9, 
   3.8070228199144945`*^9}, {3.8070230954034224`*^9, 
   3.8070231105000963`*^9}, {3.807023676478784*^9, 3.8070236797168865`*^9}, {
   3.8070578989287167`*^9, 3.807057915393076*^9}, {3.807057996843034*^9, 
   3.8070580061983595`*^9}, {3.8070581431565323`*^9, 
   3.8070581565921535`*^9}, {3.8070603684852104`*^9, 3.807060380388656*^9}, {
   3.807364885906274*^9, 3.807364886700448*^9}, {3.8073817145282745`*^9, 
   3.807381745602749*^9}, {3.8074672007441196`*^9, 3.8074672124512925`*^9}, {
   3.8091067214446373`*^9, 3.809106728987068*^9}, {3.809215647429532*^9, 
   3.8092156509661827`*^9}, {3.8093548100637665`*^9, 
   3.8093548135045214`*^9}, {3.809459778968353*^9, 3.8094597797023683`*^9}, {
   3.809459916161991*^9, 3.8094599567075443`*^9}, 3.8099730249720545`*^9, {
   3.810014779150958*^9, 3.8100148637043157`*^9}, {3.810014950174795*^9, 
   3.8100149502974987`*^9}, {3.81001498694163*^9, 3.8100149881304674`*^9}, {
   3.8100150220544004`*^9, 3.8100151042732296`*^9}, {3.8100151516288557`*^9, 
   3.810015157685234*^9}, {3.8100152635308857`*^9, 3.810015266626607*^9}, {
   3.8100153354213424`*^9, 3.8100153551417775`*^9}, {3.8103419753211107`*^9, 
   3.810341975641977*^9}, {3.810342278644123*^9, 3.810342292373392*^9}, {
   3.8104857724104595`*^9, 3.8104857886574078`*^9}, {3.810488249176215*^9, 
   3.8104882634999695`*^9}, {3.8104883345380697`*^9, 
   3.8104884222637377`*^9}, {3.8104884679938927`*^9, 3.810488472720798*^9}, {
   3.8104885131620226`*^9, 3.810488518512878*^9}, {3.8104885810774345`*^9, 
   3.8104885826474123`*^9}, {3.8300097127672405`*^9, 3.830009938013775*^9}, {
   3.830009971978851*^9, 3.830010030755228*^9}, {3.8300104693384542`*^9, 
   3.830010471249238*^9}, {3.8300105255496583`*^9, 3.8300105309532156`*^9}, {
   3.830011278147194*^9, 3.830011347302783*^9}, 3.8300154176560135`*^9, {
   3.830273398667429*^9, 3.830273409577482*^9}, {3.83028006453776*^9, 
   3.8302800716228657`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"399c3dd7-5030-47c4-b8ba-4931b1472400"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ = 
    1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 4, 
    PlaneGeometry`GeometrySceneDrawerDump`step$$ = 4, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 0, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = {$CellContext`a, \
$CellContext`b, $CellContext`c}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {$CellContext`d},
     PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {
     C["GeometricQuantity"][$CellContext`d]}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {1}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c]}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {
     C["GeometricQuantity"][$CellContext`d]}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var3944, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3945}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var3946, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3947}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var3949, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3950}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {
    PlaneGeometry`GeometrySceneDrawer`Dump`var3948}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = \
{{{-2.1987644879603683`, -0.4096460672168804}, {-0.26356303841691, 
    2.5824355567893478`}, {1.3600549306692136`, -0.5895388677034659}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{3.563363172202501}},
     PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {
     PlaneGeometry`AssertionWrapper[
     "\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002", \
{{$CellContext`a, $CellContext`b, $CellContext`c}, {$CellContext`d}}], 
     PlaneGeometry`AssertionWrapper[
     "\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\:534a\:5f84\
\:4f5c\:5706\:3002", {{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d}}], 
     PlaneGeometry`AssertionWrapper[
     "\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002", \
{{$CellContext`a, $CellContext`b, $CellContext`c}, {$CellContext`d}}], 
     PlaneGeometry`AssertionWrapper[
     "\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\:4e09\:89d2\:5f62\
\:3002", {{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d}}]}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 2}, {}, {
     3}, {}}, PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ \
= {{}, {}, {}, {}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{1}, {}, {}, {}},
     PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
      False, False, False}, {False, False, False}, {False, False, False}, {
      False, False, False}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{False}, {
      False}, {False}, {False}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3}, 
    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{((-
          PlaneGeometry`GeometrySceneDrawer`Dump`var3944 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3946)^2 + (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var3945 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3947)^2 - 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3948^2)^2, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3948 >= 0, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3948 >= 
       0.5, (-PlaneGeometry`GeometrySceneDrawer`Dump`var3944 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3946)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var3945 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3947)^2 >= 0.03}, {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var3944, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3945, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3946, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3947, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3948}, {}, {{}}}}, {
     0, {}, {{}, {}, {}}}, {(-
         PlaneGeometry`GeometrySceneDrawer`Dump`var3948^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var3944 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3949)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var3945 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3950)^2)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var3948^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var3946 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3949)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var3947 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3950)^2)^2, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3948 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3948 >= 0.5}, {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var3949, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3950}, {}, {}}}, {(
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var3944 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3946) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3951)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var3945 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3947) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3952)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var3944 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3949) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3953)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var3945 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3950) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3954)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var3946 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3949) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3955)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var3947 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3950) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3956)^2 + (
        1 - ((-(-PlaneGeometry`GeometrySceneDrawer`Dump`var3945 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3947)) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var3946 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3949) + (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var3944 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3946) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var3947 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3950)) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3957)^2, {
      Rational[1, 
          4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var3945 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3947) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3949 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3944 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var3947 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3950) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3946 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3945 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3950))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var3945 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3947) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3949 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3944 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var3947 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3950) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3946 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3945 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3950))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var3945 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3947) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var3949 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3944 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var3947 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3950) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var3946 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var3945 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var3950))^2 >= 0.1}, {{}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var3951, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3952, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3953, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3954, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3955, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3956, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var3957}, {}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(-
       C["GeometricQuantity"][$CellContext`d]^2 + (-
         C["GeometricPoint"][$CellContext`a][1] + 
        C["GeometricPoint"][$CellContext`b][1])^2 + (-
         C["GeometricPoint"][$CellContext`a][2] + 
        C["GeometricPoint"][$CellContext`b][2])^2)^2, 
     0, (-C["GeometricQuantity"][$CellContext`d]^2 + (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`c][1])^2 + (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`c][2])^2)^2 + (-
        C["GeometricQuantity"][$CellContext`d]^2 + (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`c][1])^2 + (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`c][2])^2)^2, (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3937] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3938] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3939] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3940] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3941] (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3942] (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
       "notVar"[
        PlaneGeometry`GeometrySceneDrawer`Dump`var3943] ((-(-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2])) (-
           C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) + (-
           C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`b][1]) (-
           C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2])))^2}, 
    PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
     C["GeometricQuantity"][$CellContext`d] >= 0, 
      C["GeometricQuantity"][$CellContext`d] >= 
      0.5, (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`b][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`b][2])^2 >= 0.03}, {}, {
     C["GeometricQuantity"][$CellContext`d] >= 0.5, 
      C["GeometricQuantity"][$CellContext`d] >= 0.5}, {
     Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1}}, 
    PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
       C["GeometricPoint"][$CellContext`a][1], 
       C["GeometricPoint"][$CellContext`a][2], 
       C["GeometricPoint"][$CellContext`b][1], 
       C["GeometricPoint"][$CellContext`b][2], 
       C["GeometricQuantity"][$CellContext`d]}, {}, {{}}}, {{}, {}, {}}, {{
       C["GeometricPoint"][$CellContext`c][1], 
       C["GeometricPoint"][$CellContext`c][2]}, {}, {}}, {{}, {
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3937], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3938], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3939], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3940], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3941], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3942], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3943]}, {}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{(-
          C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`b][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`b][2])^2 == 
      C["GeometricQuantity"][$CellContext`d]^2}, {}, {}, {}}, 
    PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
    1, 4, 0, {{{-2.1374413181204353`, -0.31483220189698186`}, \
{-2.592661524022719, 2.654841514865439}, {-4.936864301199722, 
     0.7757723926736835}}}, {{
     3.0043613996806786`}}, {{{-2.1374413181204353`, -0.31483220189698186`}, \
{-2.592661524022719, 2.654841514865439}, {-4.936864301199722, 
     0.7757723926736835}}}, {{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b]}]}, {
         Tooltip[
          Circle[
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricQuantity"][$CellContext`d]], "cir1"]}, {
         Tooltip[
          Circle[
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricQuantity"][$CellContext`d]], "cir2"]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b]}]}, {
         Tooltip[
          Circle[
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricQuantity"][$CellContext`d]], "cir1"]}, {
         Tooltip[
          Circle[
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricQuantity"][$CellContext`d]], "cir2"]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         RGBColor[1, 0.5, 0.5], 
         Polygon[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b]}]}, {
         Tooltip[
          Circle[
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricQuantity"][$CellContext`d]], "cir1"]}, {
         Tooltip[
          Circle[
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricQuantity"][$CellContext`d]], "cir2"]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}}, {}}}, {{{
       C["GeometricPoint"][$CellContext`a] -> {-2.1374413181204353`, \
-0.31483220189698186`}, 
        C["GeometricPoint"][$CellContext`b] -> {-2.592661524022719, 
         2.654841514865439}, 
        C["GeometricPoint"][$CellContext`c] -> {-4.936864301199722, 
         0.7757723926736835}}, {
       C["GeometricQuantity"][$CellContext`d] -> 3.0043613996806786`}}}, {{{
       False, False, False}, {False, False, False}, {False, False, False}, {
       False, False, False}}}, {{{False}, {False}, {False}, {False}}}, False, 
     True, {}, {}, {{{-2.1374413181204353`, -0.31483220189698186`}, \
{-2.592661524022719, 2.654841514865439}, {-4.936864301199722, 
     0.7757723926736835}}}, {{{-8.052089330745844, 
     3.3219864886026897`}, {-4.517033253190038, 6.857042566158495}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-8.052089330745844, 3.3219864886026897`}, {-4.517033253190038, 
    6.857042566158495}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = \
{{{-2.1987644879603683`, -0.4096460672168804}, {-0.26356303841691, 
    2.5824355567893478`}, {1.3600549306692136`, -0.5895388677034659}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = {4, -1}, 
    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = {{{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       RGBColor[1, 0.5, 0], 
       Point[
        C["GeometricPoint"][$CellContext`c]]}, 
      Inset[
       Style[" c ", 
        RGBColor[1, 0.5, 0], 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
       C["GeometricPoint"][$CellContext`c]], {
       AbsolutePointSize[17], 
       RGBColor[1, 0.5, 0], 
       Opacity[0], 
       Point[
        C["GeometricPoint"][$CellContext`c]]}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = \
{{{-2.1987644879603683`, -0.4096460672168804}, {-0.26356303841691, 
    2.5824355567893478`}, {1.3600549306692136`, -0.5895388677034659}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
      C["GeometricPoint"][$CellContext`a], 
      C["GeometricPoint"][$CellContext`b]}, {}, {
      C["GeometricPoint"][$CellContext`c]}, {}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{
      C["GeometricQuantity"][$CellContext`d]}, {}, {}, {}}, 
    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = {
    141.95555555555555`, 244.44401041666603`}, 
    PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{
      AbsoluteThickness[2], 
      GrayLevel[0.7], 
      EdgeForm[{
        GrayLevel[0.7], 
        Thickness[Large]}], {{
        Line[{
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricPoint"][$CellContext`b]}]}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`a]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`b]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
      AbsoluteThickness[2], 
      GrayLevel[0.7], 
      EdgeForm[{
        GrayLevel[0.7], 
        Thickness[Large]}], {{
        Line[{
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricPoint"][$CellContext`b]}]}, {
        Tooltip[
         Circle[
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricQuantity"][$CellContext`d]], "cir1"]}, {
        Tooltip[
         Circle[
          C["GeometricPoint"][$CellContext`b], 
          C["GeometricQuantity"][$CellContext`d]], "cir2"]}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`a]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`b]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
      AbsoluteThickness[2], 
      GrayLevel[0.7], 
      EdgeForm[{
        GrayLevel[0.7], 
        Thickness[Large]}], {{
        Line[{
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricPoint"][$CellContext`b]}]}, {
        Tooltip[
         Circle[
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricQuantity"][$CellContext`d]], "cir1"]}, {
        Tooltip[
         Circle[
          C["GeometricPoint"][$CellContext`b], 
          C["GeometricQuantity"][$CellContext`d]], "cir2"]}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`a]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`b]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`c]]}, 
        Inset[
         Style[" c ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`c]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`c]]}}}, {}}, {
      AbsoluteThickness[2], 
      GrayLevel[0.7], 
      EdgeForm[{
        GrayLevel[0.7], 
        Thickness[Large]}], {{
        Opacity[0.2], 
        RGBColor[1, 0.5, 0.5], 
        Polygon[{
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricPoint"][$CellContext`b], 
          C["GeometricPoint"][$CellContext`c]}]}, {
        Line[{
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricPoint"][$CellContext`b]}]}, {
        Tooltip[
         Circle[
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricQuantity"][$CellContext`d]], "cir1"]}, {
        Tooltip[
         Circle[
          C["GeometricPoint"][$CellContext`b], 
          C["GeometricQuantity"][$CellContext`d]], "cir2"]}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`a]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`b]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`c]]}, 
        Inset[
         Style[" c ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`c]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`c]]}}}, {}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
      C["GeometricPoint"][$CellContext`a][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3944}, {
      C["GeometricPoint"][$CellContext`a][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3945}, {
      C["GeometricPoint"][$CellContext`b][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3946}, {
      C["GeometricPoint"][$CellContext`b][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3947}, {
      C["GeometricQuantity"][$CellContext`d], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3948}, {
      C["GeometricPoint"][$CellContext`c][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3949}, {
      C["GeometricPoint"][$CellContext`c][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3950}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3937], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3951}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3938], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3952}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3939], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3953}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3940], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3954}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3941], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3955}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3942], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3956}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var3943], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var3957}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var3944, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3945}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3946, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3947}}, {}, {{
      PlaneGeometry`GeometrySceneDrawer`Dump`var3949, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3950}}, {}}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{}, {}, \
{}, {}}, PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var3948}, {}, {}, {}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var3944, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3945} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var3946, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3947} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var3949, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3950} -> 3], 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var3944, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3945} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var3946, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3947} -> 
     2, {PlaneGeometry`GeometrySceneDrawer`Dump`var3949, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var3950} -> 3], 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[
    PlaneGeometry`GeometrySceneDrawer`Dump`var3948 -> 1], 
    PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
      C["GeometricPoint"][$CellContext`a] -> {-2.1987644879603683`, \
-0.4096460672168804}, 
       C["GeometricPoint"][$CellContext`b] -> {-0.26356303841691, 
        2.5824355567893478`}, 
       C["GeometricPoint"][$CellContext`c] -> {
        1.3600549306692136`, -0.5895388677034659}}, {
      C["GeometricQuantity"][$CellContext`d] -> 3.563363172202501}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var3944, -2.198292269029459}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3945, -0.4089159532610366}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3946, -0.2640352573478191}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3947, 2.5817054428335044`}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3948, 
       3.5616241413245815`}}, {}, {{
      PlaneGeometry`GeometrySceneDrawer`Dump`var3949, 1.1009968067775016`}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var3950, \
-0.36469752416999457`}}, {}}, 
    PlaneGeometry`GeometrySceneDrawerDump`constraint$$ = {
    True, 
     True, {(1.1009968067775016` - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var3949)^2 + \
(-0.36469752416999457` - PlaneGeometry`GeometrySceneDrawer`Dump`var3950)^2 <= 
      0.2}, True}, PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = 
    ActionMenu[
     Tooltip[
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
          Line[{{-0.75, 0}, {0.75, 0}}], 
          Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
       AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
     "Hide Controls" :> (
       PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
      Delimiter, Row[{
         Dynamic[
          RawBoxes[
           FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], "  ", 
         "Initial Settings"}] :> ({
        PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
         PlaneGeometry`GeometrySceneDrawerDump`step$$, 
         PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
         PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`current$$, 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
         PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
         PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
       PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
      "Paste Current Graphics" :> CellPrint[
        ExpressionCell[
         Append[
          PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
           Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
            If[
             And[
             False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
             PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
      "Paste Current GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          MapThread[Construct, {
            Map[ReplaceAll, {
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
            MapThread[Cases, {
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
              Map[HoldPattern, 
               Thread[Apply[Alternatives, 
                  Apply[Join, 
                   Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                  1}] -> Blank[]]]}]}], 
          If[True, 
           ReplaceAll[
            Take[
             ReplaceAll[
              Hold[{
                GeometricStep[{
                  Line[{$CellContext`a, $CellContext`b}], 
                  EuclideanDistance[$CellContext`a, $CellContext`b] == \
$CellContext`d}, "\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002"], 
                
                GeometricStep[{$CellContext`cir1 == 
                  Circle[$CellContext`a, $CellContext`d], $CellContext`cir2 == 
                  Circle[$CellContext`b, $CellContext`d]}, 
                 "\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\
\:534a\:5f84\:4f5c\:5706\:3002"], 
                GeometricStep[{
                  Element[$CellContext`c, $CellContext`cir1], 
                  Element[$CellContext`c, $CellContext`cir2]}, 
                 "\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002"], 
                GeometricStep[
                 Style[
                  Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                  Pink], "\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\
\:4e09\:89d2\:5f62\:3002"]}], Hold[{
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  BlankNullSequence[GeometricStep]]}] :> 
              Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               BlankNullSequence[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
           Hold[{
             GeometricStep[{
               Line[{$CellContext`a, $CellContext`b}], 
               EuclideanDistance[$CellContext`a, $CellContext`b] == \
$CellContext`d}, "\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002"], 
             
             GeometricStep[{$CellContext`cir1 == 
               Circle[$CellContext`a, $CellContext`d], $CellContext`cir2 == 
               Circle[$CellContext`b, $CellContext`d]}, 
              "\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\:534a\
\:5f84\:4f5c\:5706\:3002"], 
             GeometricStep[{
               Element[$CellContext`c, $CellContext`cir1], 
               Element[$CellContext`c, $CellContext`cir2]}, 
              "\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002"], 
             GeometricStep[
              Style[
               Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
               Pink], "\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\
\:4e09\:89d2\:5f62\:3002"]}]], 
          If[
           And[
           False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
           Replace[
            Part[
             Hold[{}], {1}, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               Blank[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], "Input"]],
       Delimiter, "Paste Complete GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          If[False, Identity, First][
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{
            GeometricStep[{
              Line[{$CellContext`a, $CellContext`b}], 
              EuclideanDistance[$CellContext`a, $CellContext`b] == \
$CellContext`d}, "\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002"], 
            
            GeometricStep[{$CellContext`cir1 == 
              Circle[$CellContext`a, $CellContext`d], $CellContext`cir2 == 
              Circle[$CellContext`b, $CellContext`d]}, 
             "\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\:534a\
\:5f84\:4f5c\:5706\:3002"], 
            GeometricStep[{
              Element[$CellContext`c, $CellContext`cir1], 
              Element[$CellContext`c, $CellContext`cir2]}, 
             "\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002"], 
            GeometricStep[
             Style[
              Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
              Pink], "\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\
\:4e09\:89d2\:5f62\:3002"]}], 
          Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          First[
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{
            GeometricStep[{
              Line[{$CellContext`a, $CellContext`b}], 
              EuclideanDistance[$CellContext`a, $CellContext`b] == \
$CellContext`d}, "\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002"], 
            
            GeometricStep[{$CellContext`cir1 == 
              Circle[$CellContext`a, $CellContext`d], $CellContext`cir2 == 
              Circle[$CellContext`b, $CellContext`d]}, 
             "\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\:534a\
\:5f84\:4f5c\:5706\:3002"], 
            GeometricStep[{
              Element[$CellContext`c, $CellContext`cir1], 
              Element[$CellContext`c, $CellContext`cir2]}, 
             "\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002"], 
            GeometricStep[
             Style[
              Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
              Pink], "\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\
\:4e09\:89d2\:5f62\:3002"]}], 
          Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
      "Paste Parameters" :> CellPrint[
        ExpressionCell[
         If[False, Identity, First][
          Transpose[
           MapThread[Construct, {
             Map[ReplaceAll, {
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
             Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
         "Input"]], "Paste Hypotheses" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{
            GeometricStep[{
              Line[{$CellContext`a, $CellContext`b}], 
              EuclideanDistance[$CellContext`a, $CellContext`b] == \
$CellContext`d}, "\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002"], 
            
            GeometricStep[{$CellContext`cir1 == 
              Circle[$CellContext`a, $CellContext`d], $CellContext`cir2 == 
              Circle[$CellContext`b, $CellContext`d]}, 
             "\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\:534a\
\:5f84\:4f5c\:5706\:3002"], 
            GeometricStep[{
              Element[$CellContext`c, $CellContext`cir1], 
              Element[$CellContext`c, $CellContext`cir2]}, 
             "\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002"], 
            GeometricStep[
             Style[
              Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
              Pink], "\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\
\:4e09\:89d2\:5f62\:3002"]}]], "Input"]], "Paste Conclusions" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
        ExpressionCell[
         FindGeometricConjectures[
          PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
           If[
           False, {{{$CellContext`a -> {-2.1374413181204353`, \
-0.31483220189698186`}, $CellContext`b -> {-2.592661524022719, 
                2.654841514865439}, $CellContext`c -> {-4.936864301199722, 
                0.7757723926736835}}, {$CellContext`d -> 
               3.0043613996806786`}}}, 
            
            First[{{{$CellContext`a -> {-2.1374413181204353`, \
-0.31483220189698186`}, $CellContext`b -> {-2.592661524022719, 
                 2.654841514865439}, $CellContext`c -> {-4.936864301199722, 
                 0.7757723926736835}}, {$CellContext`d -> 
                3.0043613996806786`}}}]], 
           Hold[{
             GeometricStep[{
               Line[{$CellContext`a, $CellContext`b}], 
               EuclideanDistance[$CellContext`a, $CellContext`b] == \
$CellContext`d}, "\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002"], 
             
             GeometricStep[{$CellContext`cir1 == 
               Circle[$CellContext`a, $CellContext`d], $CellContext`cir2 == 
               Circle[$CellContext`b, $CellContext`d]}, 
              "\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\:534a\
\:5f84\:4f5c\:5706\:3002"], 
             GeometricStep[{
               Element[$CellContext`c, $CellContext`cir1], 
               Element[$CellContext`c, $CellContext`cir2]}, 
              "\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002"], 
             GeometricStep[
              Style[
               Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
               Pink], "\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\
\:4e09\:89d2\:5f62\:3002"]}]]], "Input"]]}, Appearance -> None, 
     MenuAppearance -> "Menu"], 
    PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{0, -1.5}, {1, 1.5}], 
            Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
          ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> 
          None], {"MouseClicked" :> (
           PlaneGeometry`GeometrySceneDrawerDump`step$$ = 
           Max[{PlaneGeometry`GeometrySceneDrawerDump`step$$ - 1, 1}])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1.5}, {0, 1.5}], 
            Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
          ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> 
          None], {"MouseClicked" :> (
           PlaneGeometry`GeometrySceneDrawerDump`step$$ = 
           Min[{PlaneGeometry`GeometrySceneDrawerDump`step$$ + 1, 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$}])}], 
        "LinkHand"], 
       MouseAppearance[
        ActionMenu[
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 37.5},
             Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"],
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 
           1.5]], {PlaneGeometry`AssertionWrapper[
           "\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002", \
{{$CellContext`a, $CellContext`b, $CellContext`c}, {$CellContext`d}}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`step$$ = First[{1}]), 
          PlaneGeometry`AssertionWrapper[
           "\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\:534a\
\:5f84\:4f5c\:5706\:3002", {{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d}}] :> (PlaneGeometry`GeometrySceneDrawerDump`step$$ = 
           First[{2}]), 
          PlaneGeometry`AssertionWrapper[
           "\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002", \
{{$CellContext`a, $CellContext`b, $CellContext`c}, {$CellContext`d}}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`step$$ = First[{3}]), 
          PlaneGeometry`AssertionWrapper[
           "\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\:4e09\:89d2\
\:5f62\:3002", {{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d}}] :> (PlaneGeometry`GeometrySceneDrawerDump`step$$ = 
           First[{4}])}, Appearance -> None], "LinkHand"], 
       MouseAppearance[
        ActionMenu[
         Tooltip[
          Graphics[{{
             GrayLevel[0.9], 
             Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], {
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
           AspectRatio -> Full, PlotRangePadding -> None], 
          "Controls/Paste"], {
         "Hide Controls" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
          Delimiter, Row[{
             Dynamic[
              RawBoxes[
               FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
             "  ", "Initial Settings"}] :> ({
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`current$$, 
             PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
           PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
          "Paste Current Graphics" :> CellPrint[
            ExpressionCell[
             Append[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                If[
                 And[
                 False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]],
           "Paste Current GeometricScene" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                MapThread[Cases, {
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                  Map[HoldPattern, 
                   Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
              If[True, 
               ReplaceAll[
                Take[
                 ReplaceAll[
                  Hold[{
                    GeometricStep[{
                    Line[{$CellContext`a, $CellContext`b}], 
                    EuclideanDistance[$CellContext`a, $CellContext`b] == \
$CellContext`d}, "\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002"], 
                    
                    GeometricStep[{$CellContext`cir1 == 
                    Circle[$CellContext`a, $CellContext`d], $CellContext`cir2 == 
                    Circle[$CellContext`b, $CellContext`d]}, 
                    "\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\
\:534a\:5f84\:4f5c\:5706\:3002"], 
                    GeometricStep[{
                    Element[$CellContext`c, $CellContext`cir1], 
                    Element[$CellContext`c, $CellContext`cir2]}, 
                    "\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002"]\
, 
                    GeometricStep[
                    Style[
                    
                    Triangle[{$CellContext`a, $CellContext`b, \
$CellContext`c}], Pink], 
                    "\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\:4e09\
\:89d2\:5f62\:3002"]}], Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                  Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   BlankNullSequence[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
               Hold[{
                 GeometricStep[{
                   Line[{$CellContext`a, $CellContext`b}], 
                   EuclideanDistance[$CellContext`a, $CellContext`b] == \
$CellContext`d}, "\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002"], 
                 
                 GeometricStep[{$CellContext`cir1 == 
                   Circle[$CellContext`a, $CellContext`d], $CellContext`cir2 == 
                   Circle[$CellContext`b, $CellContext`d]}, 
                  "\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\
\:534a\:5f84\:4f5c\:5706\:3002"], 
                 GeometricStep[{
                   Element[$CellContext`c, $CellContext`cir1], 
                   Element[$CellContext`c, $CellContext`cir2]}, 
                  "\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002"], 
                 GeometricStep[
                  Style[
                   Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}],
                    Pink], 
                  "\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\:4e09\
\:89d2\:5f62\:3002"]}]], 
              If[
               And[
               False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
               Replace[
                Part[
                 Hold[{}], {1}, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   Blank[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
             "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
          CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              If[False, Identity, First][
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{
                GeometricStep[{
                  Line[{$CellContext`a, $CellContext`b}], 
                  EuclideanDistance[$CellContext`a, $CellContext`b] == \
$CellContext`d}, "\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002"], 
                
                GeometricStep[{$CellContext`cir1 == 
                  Circle[$CellContext`a, $CellContext`d], $CellContext`cir2 == 
                  Circle[$CellContext`b, $CellContext`d]}, 
                 "\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\
\:534a\:5f84\:4f5c\:5706\:3002"], 
                GeometricStep[{
                  Element[$CellContext`c, $CellContext`cir1], 
                  Element[$CellContext`c, $CellContext`cir2]}, 
                 "\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002"], 
                GeometricStep[
                 Style[
                  Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                  Pink], "\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\
\:4e09\:89d2\:5f62\:3002"]}], 
              Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              First[
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{
                GeometricStep[{
                  Line[{$CellContext`a, $CellContext`b}], 
                  EuclideanDistance[$CellContext`a, $CellContext`b] == \
$CellContext`d}, "\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002"], 
                
                GeometricStep[{$CellContext`cir1 == 
                  Circle[$CellContext`a, $CellContext`d], $CellContext`cir2 == 
                  Circle[$CellContext`b, $CellContext`d]}, 
                 "\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\
\:534a\:5f84\:4f5c\:5706\:3002"], 
                GeometricStep[{
                  Element[$CellContext`c, $CellContext`cir1], 
                  Element[$CellContext`c, $CellContext`cir2]}, 
                 "\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002"], 
                GeometricStep[
                 Style[
                  Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                  Pink], "\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\
\:4e09\:89d2\:5f62\:3002"]}], 
              Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
          "Paste Parameters" :> CellPrint[
            ExpressionCell[
             If[False, Identity, First][
              Transpose[
               MapThread[Construct, {
                 Map[ReplaceAll, {
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                 Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]],
              "Input"]], "Paste Hypotheses" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{
                GeometricStep[{
                  Line[{$CellContext`a, $CellContext`b}], 
                  EuclideanDistance[$CellContext`a, $CellContext`b] == \
$CellContext`d}, "\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002"], 
                
                GeometricStep[{$CellContext`cir1 == 
                  Circle[$CellContext`a, $CellContext`d], $CellContext`cir2 == 
                  Circle[$CellContext`b, $CellContext`d]}, 
                 "\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\
\:534a\:5f84\:4f5c\:5706\:3002"], 
                GeometricStep[{
                  Element[$CellContext`c, $CellContext`cir1], 
                  Element[$CellContext`c, $CellContext`cir2]}, 
                 "\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002"], 
                GeometricStep[
                 Style[
                  Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                  Pink], "\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\
\:4e09\:89d2\:5f62\:3002"]}]], "Input"]], "Paste Conclusions" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
            ExpressionCell[
             FindGeometricConjectures[
              PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
              GeometricScene][
               If[
               False, {{{$CellContext`a -> {-2.1374413181204353`, \
-0.31483220189698186`}, $CellContext`b -> {-2.592661524022719, 
                    2.654841514865439}, $CellContext`c -> {-4.936864301199722,
                     0.7757723926736835}}, {$CellContext`d -> 
                   3.0043613996806786`}}}, 
                
                First[{{{$CellContext`a -> {-2.1374413181204353`, \
-0.31483220189698186`}, $CellContext`b -> {-2.592661524022719, 
                    2.654841514865439}, $CellContext`c -> {-4.936864301199722,
                     0.7757723926736835}}, {$CellContext`d -> 
                    3.0043613996806786`}}}]], 
               Hold[{
                 GeometricStep[{
                   Line[{$CellContext`a, $CellContext`b}], 
                   EuclideanDistance[$CellContext`a, $CellContext`b] == \
$CellContext`d}, "\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002"], 
                 
                 GeometricStep[{$CellContext`cir1 == 
                   Circle[$CellContext`a, $CellContext`d], $CellContext`cir2 == 
                   Circle[$CellContext`b, $CellContext`d]}, 
                  "\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\
\:534a\:5f84\:4f5c\:5706\:3002"], 
                 GeometricStep[{
                   Element[$CellContext`c, $CellContext`cir1], 
                   Element[$CellContext`c, $CellContext`cir2]}, 
                  "\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002"], 
                 GeometricStep[
                  Style[
                   Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}],
                    Pink], 
                  "\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\:4e09\
\:89d2\:5f62\:3002"]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
         "Menu"], "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
     Grid[{{
        PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
        If[True, 
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 37.5},
             Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"],
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 1.5]], 
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
          Dynamic[
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
        PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
         Opacity[0]]}, 
       If[
        And[True, False], {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
        Nothing]}, Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              10], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        EventHandler[
         Dynamic[
          If[
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
         "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
           Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
        "LinkHand"], 
       MouseAppearance[
        Dynamic[
         Which[
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          EventHandler[
           Dynamic[PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
           "MouseClicked" :> (
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
             PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}, 
           Method -> "Queued"], True, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{0, -1}, {1, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Line[{{-0.5, 0}, {0.5, 0}}], 
             Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
          AspectRatio -> Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
               PlaneGeometry`GeometrySceneDrawerDump`q}, {
              PlaneGeometry`GeometrySceneDrawerDump`q, 
               Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {0, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
          Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                PlaneGeometry`GeometrySceneDrawerDump`q}, {
               PlaneGeometry`GeometrySceneDrawerDump`q, 
                Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Arrowheads[{{1, 1, 
                Graphics[
                 Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
             Arrow[
              BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
          ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
          None], {"MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
           PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
             PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
        "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
       Grid[{{
          Graphics[{{
             GrayLevel[1], 
             
             Rectangle[{-
               Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                 10], -1}, {
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style["", Larger, 
               GrayLevel[0]], {0, 0}]}}, 
           ImageSize -> {
            20 Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
             20}, AspectRatio -> Full, PlotRangePadding -> None], 
          MouseAppearance[
           EventHandler[
            Dynamic[
             If[
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
            "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
              Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
           "LinkHand"], 
          MouseAppearance[
           Dynamic[
            Which[
            PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             EventHandler[
              Dynamic[
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
                PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)\
}, Method -> "Queued"], True, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]]\
, "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{0, -1}, {1, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.5, 0}, {0.5, 0}}], 
                Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {0, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                   PlaneGeometry`GeometrySceneDrawerDump`q}, {
                  PlaneGeometry`GeometrySceneDrawerDump`q, 
                   Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Arrowheads[{{1, 1, 
                   Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                Arrow[
                 BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
             ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
             None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
              PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
           "LinkHand"]}}, Spacings -> {0, 0}]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
     Grid[
      If[False, {{
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
         Grid[{{
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Style["Conclusion", Larger, Bold, 
              GrayLevel[0.6]], 5], 
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
             Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}}, 
          Spacings -> {0, 0}]}, {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
          Pane[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
            PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
           ImageSize -> {
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5}, 
           Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"], 
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
          1.5]}}, {{}}], Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
     MouseAppearance[
      Piecewise[{{
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
            False)}, PassEventsDown -> True], 
         And[
          Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
          PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
            Null)}, PassEventsDown -> True], 
         And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
        True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
          PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
        PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
         PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
          PlaneGeometry`GeometrySceneDrawerDump`step$$, 
          PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
          TimeConstrained[
           Fold[
           PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
            PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            
            Transpose[{
             PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
              PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
              PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
           PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
           Flatten[
            ReplaceAll[
             ReplaceAll[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 C["GeometricPoint"][
                  BlankNullSequence[]]] -> 
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                 Blank[]]) :> 
              Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                 PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                PlaneGeometry`GeometrySceneDrawerDump`c]], 
             Apply[
             Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
          Flatten[
           ReplaceAll[
            ReplaceAll[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                C["GeometricPoint"][
                 BlankNullSequence[]]] -> 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                Blank[]]) :> 
             Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                PlaneGeometry`GeometrySceneDrawerDump`x] -> 
               PlaneGeometry`GeometrySceneDrawerDump`c]], 
            Apply[
            Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
       PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
        ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
            And[
            False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
        ReplaceAll[{
          PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Apply[Rule, 
           Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
           1}]]; Part[
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
          ReplaceAll[
           Normal[
            AssociationMap[
            PlaneGeometry`GeometrySceneDrawerDump`point, 
             PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
          Select[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
           PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
            First[#]]& ]}; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
       PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
      "DragGraphics"], SynchronousUpdating -> False], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
     Panel[
      Grid[{{
         Text[
          Style["Points", Bold]]}, {
         Grid[{{
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 1]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 2]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 3]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
              PassEventsUp -> False], "LinkHand"]}}]}, {
         Grid[{{
            Graphics[{
              Hue[0.64, 0.71, 0.37], 
              AbsolutePointSize[11], 
              Point[{0, 0}], 
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
            Graphics[{
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}, {
         Text[
          Style["Quantities", Bold]]}, {
         Grid[{{
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   Rectangle[{-21, -21}, {21, 21}, RoundingRadius -> 6]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$\
, 1]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$,
                   1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
              PassEventsUp -> False], "LinkHand"]}}]}, {
         Grid[{{
            Graphics[{
              Hue[0.64, 0.71, 0.37], 
              Rectangle[{-21, -21}, {21, 21}, RoundingRadius -> 6], 
              Hue[0.58, 1, 1, 1], 
              Rectangle[{-14, -14}, {14, 14}, RoundingRadius -> 4]}, 
             ImageSize -> {11, 11}], "fixed", 
            Graphics[{
              Opacity[0], 
              Rectangle[{-21, -21}, {21, 21}, RoundingRadius -> 6], 
              Opacity[1], 
              Hue[0.58, 1, 1, 1], 
              Rectangle[{-14, -14}, {14, 14}, RoundingRadius -> 4]}, 
             ImageSize -> {11, 11}], "unfixed"}}]}}, Alignment -> Left, 
       Dividers -> {False, {False, False, False, True}}], Background -> 
      GrayLevel[0.9]], {
     "MouseClicked" :> (
       PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
       NotebookDelete[
        PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
    PlaneGeometry`GeometrySceneDrawerDump`display$$, 
    PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = MouseAppearance[
     Dynamic[
      EventHandler[
       Tooltip[
        Append[
         PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
          Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           If[
            And[
            False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
         PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
          PlaneGeometry`GeometrySceneDrawerDump`size$$}], "Show Controls"], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
       PassEventsUp -> False]], "LinkHand"], 
    PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1.5}, {1, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1.5}, {0, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
       RGBColor[0.161, 0.667, 0.887], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
    Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {1, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Line[{{-0.5, 0}, {0.5, 0}}], 
        Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {0, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Arrowheads[{{1, 1, 
           Graphics[
            Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
        Arrow[
         BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
     ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3}, {1, 
    2, 3}, {1, 2, 3}, {1, 2, 3}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{1}, {1}, {1}, {
    1}}}, PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" a ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" b ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" c ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {{{
       Hue[0.58, 1, 1, 1], 
       Rectangle[{-17, -17}, {17, 17}, RoundingRadius -> 5]}, 
      Inset[
       Style[" d ", FontSize -> 11, FontColor -> GrayLevel[1]], {0, 0}], {
       Opacity[0], 
       Rectangle[{-21, -21}, {21, 21}, RoundingRadius -> 6]}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         RGBColor[1, 0.5, 0.5], 
         Polygon[{{-2.1374413181204353`, -0.31483220189698186`}, \
{-2.592661524022719, 2.654841514865439}, {-4.936864301199722, 
          0.7757723926736835}}]}, {
         Line[{{-2.1374413181204353`, -0.31483220189698186`}, \
{-2.592661524022719, 2.654841514865439}}]}, {
         Tooltip[
          
          Circle[{-2.1374413181204353`, -0.31483220189698186`}, 
           3.0043613996806786`], "cir1"]}, {
         Tooltip[
          
          Circle[{-2.592661524022719, 2.654841514865439}, 
           3.0043613996806786`], "cir2"]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-2.1374413181204353`, -0.31483220189698186`}]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-2.1374413181204353`, -0.31483220189698186`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-2.1374413181204353`, -0.31483220189698186`}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-2.592661524022719, 2.654841514865439}]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-2.592661524022719, 2.654841514865439}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-2.592661524022719, 2.654841514865439}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-4.936864301199722, 0.7757723926736835}]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-4.936864301199722, 0.7757723926736835}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-4.936864301199722, 0.7757723926736835}]}}}, {}}}, 
     Background -> GrayLevel[1], {
     PlotRange -> {{-8.052089330745844, 
       3.3219864886026897`}, {-4.517033253190038, 6.857042566158495}}, 
      ImageSize -> {{380, 380}, {380, 380}}}], 
    PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[590865]}, 
    StyleBox[
     FrameBox[
      PaneBox[
       PaneSelectorBox[{False->
        DynamicBox[ToBoxes[
          If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
           Column[{
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
             Pane[
             PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
              Dynamic[PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                   First[#], 205] {1, 1})& ], ImageSizeAction -> 
              "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
           PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
          StandardForm],
         ImageSizeCache->{380., {213.8340332872234, 219.56596671277657`}}], 
        True->
        TagBox[
         DynamicBox[ToBoxes[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
           StandardForm],
          ImageSizeCache->{380., {217.3340332872234, 223.06596671277657`}}],
         MouseAppearanceTag["Arrow"]]}, Dynamic[
         CurrentValue["MouseOver"]],
        FrameMargins->0,
        ImageSize->All],
       ImageSize->Dynamic[
        PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
             And[True, False], 30, 0] + If[False, 50, 0]}]],
      FrameStyle->GrayLevel[0.9],
      StripOnInput->False],
     StripOnInput->False,
     DynamicEvaluationTimeout->20,
     ImageSize->Automatic,
     BaseStyle -> {
      SetterBoxOptions -> {ImageSize -> Automatic}, 
       PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
    DynamicModuleValues:>{{
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`display$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`display$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
             Blank[]]]] :> Dynamic[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$]]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`color, 
             RepeatedNull[
              Blank[], 1]]]] :> 
         PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
            Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
            Line[{{-0.75, 0}, {0.75, 0}}], 
            Line[{{-0.75, -0.5}, {0.75, -0.5}}]}, "both", 2, 1.5, 
           PlaneGeometry`GeometrySceneDrawerDump`color]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
             Blank[]], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
              Blank[]], 1], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
              Blank[]], 1]]] :> 
         PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
            Text[
             Style[
             PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
             0}], 
            
            Line[{{PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1.5, 
               0.25}, {
              PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1, -0.25}, {
              PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 0.5, 
               0.25}}]}, "both", 
           PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
           PlaneGeometry`GeometrySceneDrawerDump`heightFactor]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
             Blank[]], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
              Blank[]], 1], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
              Blank[]], 1]]] :> PlaneGeometry`GeometrySceneDrawerDump`makeIcon[
           Text[
            Style[
            PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
            0}], "both", PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
           PlaneGeometry`GeometrySceneDrawerDump`heightFactor, White]}}},
    Initialization:>(GeometricScene; 
     PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  GeometricScene[{{$CellContext`a -> {-2.1374413181204353`, \
-0.31483220189698186`}, $CellContext`b -> {-2.592661524022719, 
      2.654841514865439}, $CellContext`c -> {-4.936864301199722, 
      0.7757723926736835}}, {$CellContext`d -> 3.0043613996806786`}}, {
    GeometricStep[{
      Line[{$CellContext`a, $CellContext`b}], 
      EuclideanDistance[$CellContext`a, $CellContext`b] == $CellContext`d}, 
     "\:5b9a\:4e49\:7ebf\:6bb5ab\:7684\:957f\:5ea6\:4e3ad\:3002"], 
    GeometricStep[{$CellContext`cir1 == 
      Circle[$CellContext`a, $CellContext`d], $CellContext`cir2 == 
      Circle[$CellContext`b, $CellContext`d]}, 
     "\:5206\:522b\:4ee5a\:548cb\:4e3a\:5706\:5fc3\:ff0cd\:4e3a\:534a\:5f84\
\:4f5c\:5706\:3002"], 
    GeometricStep[{
      Element[$CellContext`c, $CellContext`cir1], 
      Element[$CellContext`c, $CellContext`cir2]}, 
     "\:627e\:5230\:4e24\:4e2a\:5706\:7684\:4ea4\:70b9c\:3002"], 
    GeometricStep[
     Style[
      Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], Pink], 
     "\:4e09\:89d2\:5f62abc\:662f\:4e00\:4e2a\:7b49\:8fb9\:4e09\:89d2\:5f62\
\:3002"]}, {}],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.8104857931279397`*^9, {3.8104858260207014`*^9, 3.8104858280355253`*^9}, 
   3.810486391283823*^9, 3.8104865623688216`*^9, 3.810488430852559*^9, 
   3.8104884743441195`*^9, 3.8104885213339148`*^9, 3.810488585837998*^9, 
   3.8298453081657424`*^9, 3.8300096444060507`*^9, {3.8300097137334785`*^9, 
   3.8300097258795133`*^9}, {3.8300105429507422`*^9, 3.8300105454200144`*^9}, 
   3.830011349900208*^9, 3.8300154191201463`*^9, 3.8302734105199895`*^9, 
   3.830351981312479*^9, 3.830352149759061*^9, 3.830352188461258*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"1bab9e38-2ff0-4057-b866-1ceb8754cf1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scene2", "[", "\"\<AlgebraicFormulation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8298453445580635`*^9, 3.829845357640673*^9}, 
   3.8300154070061026`*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"e709dfde-e5ae-4513-ad1f-71b54086147b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"a", "1"},
        "IndexedDefault"], "-", 
       TemplateBox[{"b", "1"},
        "IndexedDefault"]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"a", "2"},
        "IndexedDefault"], "-", 
       TemplateBox[{"b", "2"},
        "IndexedDefault"]}], ")"}], "2"]}], "\[Equal]", 
   SuperscriptBox["d", "2"]}], "&&", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"a", "1"},
        "IndexedDefault"], "-", 
       TemplateBox[{"c", "1"},
        "IndexedDefault"]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"a", "2"},
        "IndexedDefault"], "-", 
       TemplateBox[{"c", "2"},
        "IndexedDefault"]}], ")"}], "2"]}], "\[Equal]", 
   SuperscriptBox["d", "2"]}], "&&", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"b", "1"},
        "IndexedDefault"], "-", 
       TemplateBox[{"c", "1"},
        "IndexedDefault"]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"b", "2"},
        "IndexedDefault"], "-", 
       TemplateBox[{"c", "2"},
        "IndexedDefault"]}], ")"}], "2"]}], "\[Equal]", 
   SuperscriptBox["d", "2"]}], "&&", 
  RowBox[{"d", "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"d", ">", "0"}], "&&", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       TemplateBox[{"a", "2"},
        "IndexedDefault"], " ", 
       RowBox[{"(", 
        RowBox[{
         TemplateBox[{"b", "1"},
          "IndexedDefault"], "-", 
         TemplateBox[{"c", "1"},
          "IndexedDefault"]}], ")"}]}], "+", 
      RowBox[{
       TemplateBox[{"b", "2"},
        "IndexedDefault"], " ", 
       TemplateBox[{"c", "1"},
        "IndexedDefault"]}], "-", 
      RowBox[{
       TemplateBox[{"b", "1"},
        "IndexedDefault"], " ", 
       TemplateBox[{"c", "2"},
        "IndexedDefault"]}], "+", 
      RowBox[{
       TemplateBox[{"a", "1"},
        "IndexedDefault"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          TemplateBox[{"b", "2"},
           "IndexedDefault"]}], "+", 
         TemplateBox[{"c", "2"},
          "IndexedDefault"]}], ")"}]}]}], ")"}], "2"], ">", "0"}]}]], "Output",
 CellChangeTimes->{3.829845359365223*^9, 3.830015423035198*^9, 
  3.8302734876998796`*^9, 3.8303521501048484`*^9, 3.830352192275097*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"4fcb010c-a51e-43b1-a666-0794d84e1695"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GeometricSolve\>\"", "]"}], "[", 
  RowBox[{"scene2", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"a", ",", "b"}], "]"}], ",", 
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"b", ",", "c"}], "]"}], ",", 
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"c", ",", "a"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8104886179958305`*^9, 3.810488663190034*^9}, {
   3.8112139120541415`*^9, 3.8112139147406816`*^9}, {3.8298452773110633`*^9, 
   3.829845291522414*^9}, 3.8300154105462327`*^9},
 CellLabel->"In[47]:=",ExpressionUUID->"eec2a386-6365-451d-9a3f-5ca5787e9155"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"a", ",", "b"}], "]"}], "\[Rule]", "3.0043613996806786`"}], ",", 
    RowBox[{
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"b", ",", "c"}], "]"}], "\[Rule]", "3.00436140078035`"}], ",", 
    RowBox[{
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"c", ",", "a"}], "]"}], "\[Rule]", "3.004361399680667`"}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8104886535410957`*^9, 3.810488664708974*^9}, 
   3.810490325548827*^9, 3.8300154356973505`*^9, 3.830273484803539*^9, 
   3.830352156975958*^9, 3.8303521946839705`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"9f7749e8-ecc1-43eb-8248-78e613ced041"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ecb21d8b-7024-4f1e-b72a-4a983870487d"],

Cell[CellGroupData[{

Cell["\:5b9e\:4f8b\:ff1a\:6cf0\:52d2\:65af\:5b9a\:7406\:ff08Thales\
\[CloseCurlyQuote] Theorem\:ff09", "Section",
 CellChangeTimes->{{3.8300153296243796`*^9, 
  3.8300153507734056`*^9}},ExpressionUUID->"72b10aba-99e3-4f37-8913-\
792763810890"],

Cell[CellGroupData[{

Cell["\:76f4\:5f84\:6240\:5bf9\:7684\:5706\:5468\:89d2\:662f\:76f4\:89d2\:3002\
", "Subsubsection",
 CellChangeTimes->{{3.8300153852288866`*^9, 
  3.830015398859173*^9}},ExpressionUUID->"01f8f6ee-9d18-4122-8c17-\
56f484bd9c06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scene3", "=", 
  RowBox[{
   RowBox[{"GeometricScene", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "o"}], "}"}], ",", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"{", "\[IndentingNewLine]", "\t\t\t", 
      RowBox[{
       RowBox[{"CircleThrough", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "o"}], "]"}], ",", 
       "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{"o", "\[Equal]", 
        RowBox[{"Midpoint", "[", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}], "]"}]}], ",", "\[IndentingNewLine]",
        "\t\t\t", 
       RowBox[{"Triangle", "[", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]}], 
      "\[IndentingNewLine]", "\t\t", "}"}]}], "\[IndentingNewLine]", "\t\t", 
    "]"}], "//", "RandomInstance"}]}]], "Input",
 CellChangeTimes->{{3.8300156376493216`*^9, 3.8300156964590583`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"9bf591e9-c14d-4a56-8306-ceeea61c520e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ = 
    1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 0, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = {$CellContext`a, \
$CellContext`b, $CellContext`c, $CellContext`o}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {
    PlaneGeometry`GeometrySceneDrawer`Dump`var4017}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c], 
     C["GeometricPoint"][$CellContext`o]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c], 
     C["GeometricPoint"][$CellContext`o]}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {
     C["GeometricQuantity"][
      C["Unspecified"][
      "radius", 
       "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c]}, {1, 1, 0}}"]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var4009, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4010}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4011, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4012}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4013, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4014}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4015, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4016}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {
    PlaneGeometry`GeometrySceneDrawer`Dump`var4017}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = \
{{{-1.0717264389404106`, 3.589470220432593}, {-4.583027414337195, 
    2.8127682652045545`}, {-1.9013408375718228`, 
    1.65982685212254}, {-2.8273769300501455`, 3.201119255450636}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{
    1.7980893000215294`}}, 
    PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {"Step 1"}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 2, 3, 4}}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{1}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
      False, False, False, False}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4}, 
    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{(
        Rational[1, 2] (-PlaneGeometry`GeometrySceneDrawer`Dump`var4009 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4011) + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4015)^2 + (
        Rational[1, 2] (-PlaneGeometry`GeometrySceneDrawer`Dump`var4010 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4012) + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4016)^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4009 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4015)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4011 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4015)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4010 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4016)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4012 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4016)^2)^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4009 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4015)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4013 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4015)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4010 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4016)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4014 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4016)^2)^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4009 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4015)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4010 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4016)^2 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4017^2)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4009 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4011) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4018)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4010 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4012) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4019)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4009 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4013) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4020)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4010 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4014) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4021)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4011 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4013) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4022)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4012 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4014) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4023)^2 + (
        1 - ((-(-PlaneGeometry`GeometrySceneDrawer`Dump`var4010 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4012)) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4011 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4013) + (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4009 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4011) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4012 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4014)) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4024)^2, {(-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4009 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4011)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4010 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4012)^2 >= 0.03, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4017 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4017 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4017 >= 0.5}, {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var4009, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4010, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4011, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4012, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4013, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4014, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4015, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4016, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4017}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var4018, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4019, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4020, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4021, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4022, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4023, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4024}, {{}}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4002] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4003] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4004] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4005] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4006] (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4007] (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
       "notVar"[
        PlaneGeometry`GeometrySceneDrawer`Dump`var4008] ((-(-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2])) (-
           C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) + (-
           C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`b][1]) (-
           C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2])))^2 + (
       Rational[1, 2] (-C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`b][1]) + 
       C["GeometricPoint"][$CellContext`o][1])^2 + (
       Rational[1, 2] (-C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`b][2]) + 
       C["GeometricPoint"][$CellContext`o][2])^2 + (-C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c]}, {1, 1, 0}}"]]^2 + (-
          C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`o][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`o][2])^2)^2 + ((-
          C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`o][1])^2 - (-
         C["GeometricPoint"][$CellContext`b][1] + 
        C["GeometricPoint"][$CellContext`o][
         1])^2 + (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`o][2])^2 - (-
         C["GeometricPoint"][$CellContext`b][2] + 
        C["GeometricPoint"][$CellContext`o][
         2])^2)^2 + ((-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`o][1])^2 - (-
         C["GeometricPoint"][$CellContext`c][1] + 
        C["GeometricPoint"][$CellContext`o][
         1])^2 + (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`o][2])^2 - (-
         C["GeometricPoint"][$CellContext`c][2] + 
        C["GeometricPoint"][$CellContext`o][2])^2)^2}, 
    PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{(-
          C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`b][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`b][2])^2 >= 0.03, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "radius", 
         "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c]}, {1, 1, 0}}"]] >= 0.5, C["GeometricQuantity"][
        C["Unspecified"][
        "radius", 
         "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c]}, {1, 1, 0}}"]] >= 0.5, C["GeometricQuantity"][
        C["Unspecified"][
        "radius", 
         "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c]}, {1, 1, 0}}"]] >= 0.5}}, 
    PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
       C["GeometricPoint"][$CellContext`a][1], 
       C["GeometricPoint"][$CellContext`a][2], 
       C["GeometricPoint"][$CellContext`b][1], 
       C["GeometricPoint"][$CellContext`b][2], 
       C["GeometricPoint"][$CellContext`c][1], 
       C["GeometricPoint"][$CellContext`c][2], 
       C["GeometricPoint"][$CellContext`o][1], 
       C["GeometricPoint"][$CellContext`o][2], 
       C["GeometricQuantity"][
        C["Unspecified"][
        "radius", 
         "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c]}, {1, 1, 0}}"]]}, {
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4002], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4003], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4004], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4005], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4006], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4007], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4008]}, {{}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{
     C["GeometricPoint"][$CellContext`o][1] == 
      Rational[1, 2] (C["GeometricPoint"][$CellContext`a][1] + 
        C["GeometricPoint"][$CellContext`b][1]), 
      C["GeometricPoint"][$CellContext`o][2] == 
      Rational[1, 2] (C["GeometricPoint"][$CellContext`a][2] + 
        C["GeometricPoint"][$CellContext`b][2])}}, 
    PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
    1, 1, 0, {{{-0.9291219350687412, 
     3.7116546980637306`}, {-4.422128984978338, 
     2.8550629115079422`}, {-1.1560154599727628`, 
     2.3218509364981323`}, {-2.67562546002354, 3.2833588047858364`}}}, {{
     1.7982525075416367`}}, {{{-0.9291219350687412, 
     3.7116546980637306`}, {-4.422128984978338, 
     2.8550629115079422`}, {-1.1560154599727628`, 
     2.3218509364981323`}, {-2.67562546002354, 3.2833588047858364`}}}, {{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Polygon[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b]}]}, {
         Circle[
          C["GeometricPoint"][$CellContext`o], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c]}, {1, 1, 0}}"]]]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`o]]}, 
         Inset[
          Style[" o ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`o]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`o]]}}}, {}}}, {{{
       C["GeometricPoint"][$CellContext`a] -> {-0.9291219350687412, 
         3.7116546980637306`}, 
        C["GeometricPoint"][$CellContext`b] -> {-4.422128984978338, 
         2.8550629115079422`}, 
        C["GeometricPoint"][$CellContext`c] -> {-1.1560154599727628`, 
         2.3218509364981323`}, 
        C["GeometricPoint"][$CellContext`o] -> {-2.67562546002354, 
         3.2833588047858364`}}, {C["GeometricQuantity"][
          C["Unspecified"][
          "radius", 
           "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c]}, {1, 1, 0}}"]] -> 1.7982525075416367`}}}, {{{
       False, False, False, False}}}, {{{}}}, False, 
     True, {}, {}, {{{-0.9291219350687412, 
     3.7116546980637306`}, {-4.422128984978338, 
     2.8550629115079422`}, {-1.1560154599727628`, 
     2.3218509364981323`}, {-2.67562546002354, 
     3.2833588047858364`}}}, {{{-5.133528469073504, -0.217722450973576}, {
     0.8254557957358724, 5.7412618138358}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-5.133528469073504, -0.217722450973576}, {0.8254557957358724, 
    5.7412618138358}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = \
{{{-1.0717264389404106`, 3.589470220432593}, {-4.583027414337195, 
    2.8127682652045545`}, {-1.9013408375718228`, 
    1.65982685212254}, {-2.8273769300501455`, 3.201119255450636}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = {1, -1}, 
    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = {{{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       RGBColor[1, 0.5, 0], 
       Point[
        C["GeometricPoint"][$CellContext`c]]}, 
      Inset[
       Style[" c ", 
        RGBColor[1, 0.5, 0], 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
       C["GeometricPoint"][$CellContext`c]], {
       AbsolutePointSize[17], 
       RGBColor[1, 0.5, 0], 
       Opacity[0], 
       Point[
        C["GeometricPoint"][$CellContext`c]]}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = \
{{{-1.0717264389404106`, 3.589470220432593}, {-4.583027414337195, 
    2.8127682652045545`}, {-1.9013408375718228`, 
    1.65982685212254}, {-2.8273769300501455`, 3.201119255450636}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
      C["GeometricPoint"][$CellContext`a], 
      C["GeometricPoint"][$CellContext`b], 
      C["GeometricPoint"][$CellContext`c], 
      C["GeometricPoint"][$CellContext`o]}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{
      C["GeometricQuantity"][
       C["Unspecified"][
       "radius", 
        "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c]}, {1, 1, 0}}"]]}}, 
    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = {
    304.73333333333335`, 116.56623263888757`}, 
    PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{
      AbsoluteThickness[2], 
      GrayLevel[0.7], 
      EdgeForm[{
        GrayLevel[0.7], 
        Thickness[Large]}], {{
        Opacity[0.2], 
        Polygon[{
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricPoint"][$CellContext`b], 
          C["GeometricPoint"][$CellContext`c]}]}, {
        Dashing[{Small, Small}], 
        CapForm["None"], 
        Line[{
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricPoint"][$CellContext`b]}]}, {
        Circle[
         C["GeometricPoint"][$CellContext`o], 
         C["GeometricQuantity"][
          C["Unspecified"][
          "radius", 
           "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c]}, {1, 1, 0}}"]]]}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`a]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`b]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`c]]}, 
        Inset[
         Style[" c ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`c]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`c]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`o]]}, 
        Inset[
         Style[" o ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`o]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`o]]}}}, {}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
      C["GeometricPoint"][$CellContext`a][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4009}, {
      C["GeometricPoint"][$CellContext`a][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4010}, {
      C["GeometricPoint"][$CellContext`b][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4011}, {
      C["GeometricPoint"][$CellContext`b][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4012}, {
      C["GeometricPoint"][$CellContext`c][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4013}, {
      C["GeometricPoint"][$CellContext`c][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4014}, {
      C["GeometricPoint"][$CellContext`o][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4015}, {
      C["GeometricPoint"][$CellContext`o][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4016}, {
      C["GeometricQuantity"][
       C["Unspecified"][
       "radius", 
        "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c]}, {1, 1, 0}}"]], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4017}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4002], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4018}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4003], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4019}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4004], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4020}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4005], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4021}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4006], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4022}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4007], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4023}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4008], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4024}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var4009, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4010}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4011, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4012}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4013, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4014}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4015, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4016}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var4017}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var4009, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4010} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4011, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4012} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4013, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4014} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4015, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4016} -> 1], 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var4009, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4010} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4011, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4012} -> 
     2, {PlaneGeometry`GeometrySceneDrawer`Dump`var4013, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4014} -> 
     3, {PlaneGeometry`GeometrySceneDrawer`Dump`var4015, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4016} -> 4], 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[
    PlaneGeometry`GeometrySceneDrawer`Dump`var4017 -> 1], 
    PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
      C["GeometricPoint"][$CellContext`a] -> {-1.0717264389404106`, 
        3.589470220432593}, 
       C["GeometricPoint"][$CellContext`b] -> {-4.583027414337195, 
        2.8127682652045545`}, 
       C["GeometricPoint"][$CellContext`c] -> {-1.9013408375718228`, 
        1.65982685212254}, 
       C["GeometricPoint"][$CellContext`o] -> {-2.8273769300501455`, 
        3.201119255450636}}, {C["GeometricQuantity"][
         C["Unspecified"][
         "radius", 
          "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c]}, {1, 1, 0}}"]] -> 1.7980893000215294`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var4013, -1.9825033138930828`}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4014, 1.6103526970362814`}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4009, -0.9291219350687412}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4010, 3.7116546980637306`}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4011, -4.422128984978338}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4012, 2.8550629115079422`}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4015, -2.67562546002354}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4016, 3.2833588047858364`}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4017, 1.7982525075416367`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`constraint$$ = \
{{(-1.9825033138930828` - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4013)^2 + (
         1.6103526970362814` - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4014)^2 <= 0.2}}, 
    PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
     Tooltip[
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
          Line[{{-0.75, 0}, {0.75, 0}}], 
          Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
       AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
     "Hide Controls" :> (
       PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
      Delimiter, Row[{
         Dynamic[
          RawBoxes[
           FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], "  ", 
         "Initial Settings"}] :> ({
        PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
         PlaneGeometry`GeometrySceneDrawerDump`step$$, 
         PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
         PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`current$$, 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
         PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
         PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
       PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
      "Paste Current Graphics" :> CellPrint[
        ExpressionCell[
         Append[
          PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
           Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
            If[
             And[
             False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
             PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
          Part[
           PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
      "Paste Current GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          MapThread[Construct, {
            Map[ReplaceAll, {
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
            MapThread[Cases, {
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
              Map[HoldPattern, 
               Thread[Apply[Alternatives, 
                  Apply[Join, 
                   Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                  1}] -> Blank[]]]}]}], 
          If[False, 
           ReplaceAll[
            Take[
             ReplaceAll[
              Hold[{
                
                CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`c}, $CellContext`o], $CellContext`o == 
                Midpoint[{$CellContext`a, $CellContext`b}], 
                Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}]}], 
              Hold[{
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  BlankNullSequence[GeometricStep]]}] :> 
              Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               BlankNullSequence[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
           Hold[{
             
             CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`c}, \
$CellContext`o], $CellContext`o == Midpoint[{$CellContext`a, $CellContext`b}], 
             Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}]}]], 
          If[
           And[
           False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
           Replace[
            Part[
             Hold[{}], {1}, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               Blank[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], "Input"]],
       Delimiter, "Paste Complete GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          If[False, Identity, First][
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{
            
            CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`c}, \
$CellContext`o], $CellContext`o == Midpoint[{$CellContext`a, $CellContext`b}], 
            Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}]}], 
          Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          First[
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{
            
            CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`c}, \
$CellContext`o], $CellContext`o == Midpoint[{$CellContext`a, $CellContext`b}], 
            Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}]}], 
          Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
      "Paste Parameters" :> CellPrint[
        ExpressionCell[
         If[False, Identity, First][
          Transpose[
           MapThread[Construct, {
             Map[ReplaceAll, {
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
             Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
         "Input"]], "Paste Hypotheses" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{
            
            CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`c}, \
$CellContext`o], $CellContext`o == Midpoint[{$CellContext`a, $CellContext`b}], 
            Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}]}]], 
         "Input"]], "Paste Conclusions" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
        ExpressionCell[
         FindGeometricConjectures[
          PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
           If[
           False, {{{$CellContext`a -> {-0.9291219350687412, 
                3.7116546980637306`}, $CellContext`b -> {-4.422128984978338, 
                2.8550629115079422`}, $CellContext`c -> {-1.1560154599727628`,
                 2.3218509364981323`}, $CellContext`o -> {-2.67562546002354, 
                3.2833588047858364`}}, {C["GeometricQuantity"][
                 C["Unspecified"][
                 "radius", 
                  "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c]}, {1, 1, 0}}"]] -> 1.7982525075416367`}}}, 
            
            First[{{{$CellContext`a -> {-0.9291219350687412, 
                 3.7116546980637306`}, $CellContext`b -> {-4.422128984978338, 
                 2.8550629115079422`}, $CellContext`c -> \
{-1.1560154599727628`, 
                 2.3218509364981323`}, $CellContext`o -> {-2.67562546002354, 
                 3.2833588047858364`}}, {C["GeometricQuantity"][
                  C["Unspecified"][
                  "radius", 
                   "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c]}, {1, 1, 0}}"]] -> 1.7982525075416367`}}}]], 
           Hold[{
             
             CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`c}, \
$CellContext`o], $CellContext`o == Midpoint[{$CellContext`a, $CellContext`b}], 
             Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}]}]]], 
         "Input"]]}, Appearance -> None, MenuAppearance -> "Menu"], 
    PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              2], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        ActionMenu[
         Tooltip[
          Graphics[{{
             GrayLevel[0.9], 
             Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], {
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
           AspectRatio -> Full, PlotRangePadding -> None], 
          "Controls/Paste"], {
         "Hide Controls" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
          Delimiter, Row[{
             Dynamic[
              RawBoxes[
               FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
             "  ", "Initial Settings"}] :> ({
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`current$$, 
             PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
           PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
          "Paste Current Graphics" :> CellPrint[
            ExpressionCell[
             Append[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                If[
                 And[
                 False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]],
           "Paste Current GeometricScene" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                MapThread[Cases, {
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                  Map[HoldPattern, 
                   Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
              If[False, 
               ReplaceAll[
                Take[
                 ReplaceAll[
                  Hold[{
                    
                    CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`c}, $CellContext`o], $CellContext`o == 
                    Midpoint[{$CellContext`a, $CellContext`b}], 
                    
                    Triangle[{$CellContext`a, $CellContext`b, \
$CellContext`c}]}], Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                  Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   BlankNullSequence[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
               Hold[{
                 
                 CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`c}, $CellContext`o], $CellContext`o == 
                 Midpoint[{$CellContext`a, $CellContext`b}], 
                 
                 Triangle[{$CellContext`a, $CellContext`b, \
$CellContext`c}]}]], 
              If[
               And[
               False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
               Replace[
                Part[
                 Hold[{}], {1}, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   Blank[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
             "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
          CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              If[False, Identity, First][
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{
                
                CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`c}, $CellContext`o], $CellContext`o == 
                Midpoint[{$CellContext`a, $CellContext`b}], 
                Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}]}], 
              Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              First[
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{
                
                CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`c}, $CellContext`o], $CellContext`o == 
                Midpoint[{$CellContext`a, $CellContext`b}], 
                Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}]}], 
              Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
          "Paste Parameters" :> CellPrint[
            ExpressionCell[
             If[False, Identity, First][
              Transpose[
               MapThread[Construct, {
                 Map[ReplaceAll, {
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                 Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]],
              "Input"]], "Paste Hypotheses" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{
                
                CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`c}, $CellContext`o], $CellContext`o == 
                Midpoint[{$CellContext`a, $CellContext`b}], 
                Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}]}]],
              "Input"]], "Paste Conclusions" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
            ExpressionCell[
             FindGeometricConjectures[
              PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
              GeometricScene][
               If[
               False, {{{$CellContext`a -> {-0.9291219350687412, 
                    3.7116546980637306`}, $CellContext`b -> \
{-4.422128984978338, 
                    2.8550629115079422`}, $CellContext`c -> \
{-1.1560154599727628`, 
                    2.3218509364981323`}, $CellContext`o -> \
{-2.67562546002354, 3.2833588047858364`}}, {C["GeometricQuantity"][
                    C["Unspecified"][
                    "radius", 
                    "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], C[\
\"GeometricPoint\"][c]}, {1, 1, 0}}"]] -> 1.7982525075416367`}}}, 
                
                First[{{{$CellContext`a -> {-0.9291219350687412, 
                    3.7116546980637306`}, $CellContext`b -> \
{-4.422128984978338, 
                    2.8550629115079422`}, $CellContext`c -> \
{-1.1560154599727628`, 
                    2.3218509364981323`}, $CellContext`o -> \
{-2.67562546002354, 3.2833588047858364`}}, {C["GeometricQuantity"][
                    C["Unspecified"][
                    "radius", 
                    "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], C[\
\"GeometricPoint\"][c]}, {1, 1, 0}}"]] -> 1.7982525075416367`}}}]], 
               Hold[{
                 
                 CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`c}, $CellContext`o], $CellContext`o == 
                 Midpoint[{$CellContext`a, $CellContext`b}], 
                 
                 Triangle[{$CellContext`a, $CellContext`b, \
$CellContext`c}]}]]], "Input"]]}, Appearance -> None, MenuAppearance -> 
         "Menu"], "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
     Grid[{{
        PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
        If[False, 
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 37.5},
             Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"],
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 1.5]], 
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
          Dynamic[
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
        PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
         Opacity[0]]}, 
       If[
        And[False, False], {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
        Nothing]}, Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              10], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        EventHandler[
         Dynamic[
          If[
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
         "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
           Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
        "LinkHand"], 
       MouseAppearance[
        Dynamic[
         Which[
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          EventHandler[
           Dynamic[PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
           "MouseClicked" :> (
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
             PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}, 
           Method -> "Queued"], True, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{0, -1}, {1, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Line[{{-0.5, 0}, {0.5, 0}}], 
             Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
          AspectRatio -> Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
               PlaneGeometry`GeometrySceneDrawerDump`q}, {
              PlaneGeometry`GeometrySceneDrawerDump`q, 
               Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {0, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
          Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                PlaneGeometry`GeometrySceneDrawerDump`q}, {
               PlaneGeometry`GeometrySceneDrawerDump`q, 
                Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Arrowheads[{{1, 1, 
                Graphics[
                 Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
             Arrow[
              BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
          ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
          None], {"MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
           PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
             PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
        "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
       Grid[{{
          Graphics[{{
             GrayLevel[1], 
             
             Rectangle[{-
               Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                 10], -1}, {
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style["", Larger, 
               GrayLevel[0]], {0, 0}]}}, 
           ImageSize -> {
            20 Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
             20}, AspectRatio -> Full, PlotRangePadding -> None], 
          MouseAppearance[
           EventHandler[
            Dynamic[
             If[
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
            "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
              Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
           "LinkHand"], 
          MouseAppearance[
           Dynamic[
            Which[
            PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             EventHandler[
              Dynamic[
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
                PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)\
}, Method -> "Queued"], True, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]]\
, "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{0, -1}, {1, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.5, 0}, {0.5, 0}}], 
                Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {0, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                   PlaneGeometry`GeometrySceneDrawerDump`q}, {
                  PlaneGeometry`GeometrySceneDrawerDump`q, 
                   Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Arrowheads[{{1, 1, 
                   Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                Arrow[
                 BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
             ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
             None], {"MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
              PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
           "LinkHand"]}}, Spacings -> {0, 0}]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
     Grid[
      If[False, {{
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
         Grid[{{
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Style["Conclusion", Larger, Bold, 
              GrayLevel[0.6]], 5], 
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
             Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}}, 
          Spacings -> {0, 0}]}, {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
          Pane[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
            PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
           ImageSize -> {
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5}, 
           Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"], 
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
          1.5]}}, {{}}], Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
     MouseAppearance[
      Piecewise[{{
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$\
$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
            False)}, PassEventsDown -> True], 
         And[
          Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
          PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
            Null)}, PassEventsDown -> True], 
         And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
        True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
          PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
        PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
         PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
          PlaneGeometry`GeometrySceneDrawerDump`step$$, 
          PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
          TimeConstrained[
           Fold[
           PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
            PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            
            Transpose[{
             PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
              PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
              PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
           PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
           Flatten[
            ReplaceAll[
             ReplaceAll[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 C["GeometricPoint"][
                  BlankNullSequence[]]] -> 
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                 Blank[]]) :> 
              Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                 PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                PlaneGeometry`GeometrySceneDrawerDump`c]], 
             Apply[
             Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
          Flatten[
           ReplaceAll[
            ReplaceAll[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                C["GeometricPoint"][
                 BlankNullSequence[]]] -> 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                Blank[]]) :> 
             Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                PlaneGeometry`GeometrySceneDrawerDump`x] -> 
               PlaneGeometry`GeometrySceneDrawerDump`c]], 
            Apply[
            Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
       PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
        ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
            And[
            False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
        ReplaceAll[{
          PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
       Part[
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Apply[Rule, 
           Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
           1}]]; Part[
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
          ReplaceAll[
           Normal[
            AssociationMap[
            PlaneGeometry`GeometrySceneDrawerDump`point, 
             PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
          Select[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
           PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
            First[#]]& ]}; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
       PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
      "DragGraphics"], SynchronousUpdating -> False], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
     Panel[
      Grid[{{
         Text[
          Style["Points", Bold]]}, {
         Grid[{{
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 1]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 2]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 3]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 4]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
              PassEventsUp -> False], "LinkHand"]}}]}, {
         Grid[{{
            Graphics[{
              Hue[0.64, 0.71, 0.37], 
              AbsolutePointSize[11], 
              Point[{0, 0}], 
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
            Graphics[{
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
       Alignment -> Left, Dividers -> False], Background -> GrayLevel[0.9]], {
     "MouseClicked" :> (
       PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
       NotebookDelete[
        PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
    PlaneGeometry`GeometrySceneDrawerDump`display$$, 
    PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = MouseAppearance[
     Dynamic[
      EventHandler[
       Tooltip[
        Append[
         PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
          Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           If[
            And[
            False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
         PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
          PlaneGeometry`GeometrySceneDrawerDump`size$$}], "Show Controls"], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
       PassEventsUp -> False]], "LinkHand"], 
    PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1.5}, {1, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1.5}, {0, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
       RGBColor[0.161, 0.667, 0.887], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
    Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {1, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Line[{{-0.5, 0}, {0.5, 0}}], 
        Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {0, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Arrowheads[{{1, 1, 
           Graphics[
            Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
        Arrow[
         BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
     ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" a ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" b ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" c ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" o ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Polygon[{{-0.9291219350687412, 
          3.7116546980637306`}, {-4.422128984978338, 
          2.8550629115079422`}, {-1.1560154599727628`, 
          2.3218509364981323`}}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{-0.9291219350687412, 
          3.7116546980637306`}, {-4.422128984978338, 2.8550629115079422`}}]}, {
         Circle[{-2.67562546002354, 3.2833588047858364`}, 
          1.7982525075416367`]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-0.9291219350687412, 3.7116546980637306`}]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-0.9291219350687412, 3.7116546980637306`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-0.9291219350687412, 3.7116546980637306`}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-4.422128984978338, 2.8550629115079422`}]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-4.422128984978338, 2.8550629115079422`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-4.422128984978338, 2.8550629115079422`}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-1.1560154599727628`, 2.3218509364981323`}]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-1.1560154599727628`, 2.3218509364981323`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-1.1560154599727628`, 2.3218509364981323`}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-2.67562546002354, 3.2833588047858364`}]}, 
         Inset[
          Style[" o ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-2.67562546002354, 3.2833588047858364`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-2.67562546002354, 3.2833588047858364`}]}}}, {}}}, 
     Background -> GrayLevel[1], {
     PlotRange -> {{-5.133528469073504, -0.217722450973576}, {
       0.8254557957358724, 5.7412618138358}}, 
      ImageSize -> {{380, 380}, {380, 380}}}], 
    PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[590097]}, 
    StyleBox[
     FrameBox[
      PaneBox[
       PaneSelectorBox[{False->
        DynamicBox[ToBoxes[
          If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
           Column[{
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
             Pane[
             PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
              Dynamic[PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                   First[#], 205] {1, 1})& ], ImageSizeAction -> 
              "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
           PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
          StandardForm],
         ImageSizeCache->{414., {235.3340332872234, 241.06596671277657`}}], 
        True->
        TagBox[
         DynamicBox[ToBoxes[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
           StandardForm],
          ImageSizeCache->{380., {217.3340332872234, 223.06596671277657`}}],
         MouseAppearanceTag["Arrow"]]}, Dynamic[
         CurrentValue["MouseOver"]],
        FrameMargins->0,
        ImageSize->All],
       ImageSize->Dynamic[
        PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
             And[False, False], 30, 0] + If[False, 50, 0]}],
       ScrollPosition->{0., 1.5}],
      FrameStyle->GrayLevel[0.9],
      StripOnInput->False],
     StripOnInput->False,
     DynamicEvaluationTimeout->20,
     ImageSize->Automatic,
     BaseStyle -> {
      SetterBoxOptions -> {ImageSize -> Automatic}, 
       PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
    DynamicModuleValues:>{},
    Initialization:>(GeometricScene; 
     PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  GeometricScene[{{$CellContext`a -> {-0.9291219350687412, 
      3.7116546980637306`}, $CellContext`b -> {-4.422128984978338, 
      2.8550629115079422`}, $CellContext`c -> {-1.1560154599727628`, 
      2.3218509364981323`}, $CellContext`o -> {-2.67562546002354, 
      3.2833588047858364`}}, {C["GeometricQuantity"][
       C["Unspecified"][
       "radius", 
        "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c]}, {1, 1, 0}}"]] -> 1.7982525075416367`}}, {
    CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`c}, \
$CellContext`o], $CellContext`o == Midpoint[{$CellContext`a, $CellContext`b}], 
    Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}]}, {}],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.830015697346824*^9, 3.830015706177575*^9}, 
   3.8303520124947495`*^9, 3.8303521576845226`*^9, 3.8303522156223764`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"8901db00-2fa4-459a-9066-eca8d3d4f398"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindGeometricConjectures", "[", "scene3", "]"}], "[", 
  "\"\<Conclusions\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8300157215656176`*^9, 3.83001573562288*^9}, {
  3.8300157785679417`*^9, 3.830015782289246*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"63db797b-7ead-4aeb-a7f9-e15deb1fb915"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"GeometricAssertion"},
     "InactiveHead",
     BaseStyle->"Inactive",
     SyntaxForm->"Symbol",
     Tooltip->"Inactive[GeometricAssertion]"], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"b", ",", "c"}], "}"}], "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"c", ",", "a"}], "}"}], "]"}]}], "}"}], 
     ",", "\<\"Perpendicular\"\>"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     TemplateBox[{"PlanarAngle"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[PlanarAngle]"], "[", 
     RowBox[{"{", 
      RowBox[{"b", ",", "c", ",", "a"}], "}"}], "]"}], "\[Equal]", 
    RowBox[{"90", " ", "\[Degree]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.830015782657995*^9, {3.830352141677755*^9, 3.8303521579033895`*^9}, 
   3.8303522221135793`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"f9697951-f87e-48d3-a1a0-4803c2a975b3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"612b46ca-bb89-4914-bf81-a9af232ec60d"],

Cell[CellGroupData[{

Cell["\:5b9e\:4f8b\:ff1a\:5e15\:666e\:65af\:516d\:8fb9\:5f62\:5b9a\:7406 \
\:ff08Pappus' Hexagon Theorem\:ff09", "Section",
 CellChangeTimes->{{3.8300160848882856`*^9, 3.830016101574191*^9}, {
  3.830016136230342*^9, 
  3.8300161415648165`*^9}},ExpressionUUID->"3bb73649-e4e0-4cff-b298-\
e682d01bbeb6"],

Cell[CellGroupData[{

Cell["\:5bf9\:4e8e\:6bcf\:9694\:4e00\:4e2a\:9876\:70b9\:5171\:7ebf\:7684\:4ea4\
\:53c9\:516d\:8fb9\:5f62\:ff0c\:5176\:4e09\:7ec4\:76f8\:5bf9\:7684\:8fb9\:7684\
\:4ea4\:70b9\:5171\:7ebf\:3002", "Subsubsection",
 CellChangeTimes->{{3.8300161200301943`*^9, 
  3.8300161218980103`*^9}},ExpressionUUID->"202e4b17-5839-4bca-8952-\
f7b3847acdf5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scene4", "=", 
  RowBox[{"RandomInstance", "[", "\[IndentingNewLine]", "\t\t", 
   RowBox[{
    RowBox[{"GeometricScene", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"b", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"4", ",", "0"}], "}"}]}], ",", "c", ",", "d", ",", "e", ",",
         "f", ",", "x", ",", "y", ",", "z"}], "}"}], ",", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "x", ",", "e"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"b", ",", "x", ",", "d"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "y", ",", "f"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "y", ",", "d"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"b", ",", "z", ",", "f"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "z", ",", "e"}], "}"}]}], "}"}], "]"}], "}"}]}], 
     "\[IndentingNewLine]", "\t\t", "]"}], ",", "\[IndentingNewLine]", "\t\t", 
    RowBox[{"RandomSeeding", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.830016176875504*^9, 3.8300163502364845`*^9}, {
  3.830016430728266*^9, 3.830016620779318*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"84a52003-98da-43ed-afb9-4f674a4f846c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ = 
    1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 0, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = {$CellContext`a, \
$CellContext`b, $CellContext`c, $CellContext`d, $CellContext`e, \
$CellContext`f, $CellContext`x, $CellContext`y, $CellContext`z}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c], 
     C["GeometricPoint"][$CellContext`d], 
     C["GeometricPoint"][$CellContext`e], 
     C["GeometricPoint"][$CellContext`f], 
     C["GeometricPoint"][$CellContext`x], 
     C["GeometricPoint"][$CellContext`y], 
     C["GeometricPoint"][$CellContext`z]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4, 5, 6, 
    7, 8, 9}, PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c], 
     C["GeometricPoint"][$CellContext`d], 
     C["GeometricPoint"][$CellContext`e], 
     C["GeometricPoint"][$CellContext`f], 
     C["GeometricPoint"][$CellContext`x], 
     C["GeometricPoint"][$CellContext`y], 
     C["GeometricPoint"][$CellContext`z]}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var4100, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4101}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4102, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4103}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4104, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4105}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4106, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4107}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4108, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4109}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4110, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4111}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4112, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4113}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4114, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4115}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4116, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4117}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = {{{0., 0.}, {4., 
    0.}, {7.7207796939068, 1.628337071456052*^-51}, {-0.3609374626929994, 
    12.411149692884845`}, {6.086717525463618, 10.246162783369597`}, {
    13.220983632292107`, 7.850626303517803}, {2.513371739719993, 
    4.230925567968928}, {5.567886408830347, 3.306212989968336}, {
    7.2759701284565494`, 2.7891190093401645`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {"Step 1"}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 2, 3, 4, 5, 
    6, 7, 8, 9}}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
      False, False, False, False, False, False, False, False, False}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4, 5, 6, 
    7, 8, 9}, 
    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var4100^2 + 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4101^2 + (-4 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4102)^2 + 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4103^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4102 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4104) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4118)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4103 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4105) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4118)^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var4112 + 
        Rational[1, 2] (-PlaneGeometry`GeometrySceneDrawer`Dump`var4100 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4102 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4108) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4119 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4102 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4106) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4121))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4100 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4108) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4119 + 
        Rational[1, 2] (PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4102 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4108) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4119 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4102 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4106) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4121))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4102 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4102 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4106) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4121 + 
        Rational[1, 2] (PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4102 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4108) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4119 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4102 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4106) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4121))^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var4113 + 
        Rational[1, 2] (-PlaneGeometry`GeometrySceneDrawer`Dump`var4101 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4103 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4109) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4119 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4103 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4107) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4121))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4101 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4109) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4119 + 
        Rational[1, 2] (PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4103 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4109) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4119 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4103 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4107) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4121))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4103 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4103 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4107) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4121 + 
        Rational[1, 2] (PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4103 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4109) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4119 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4103 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4107) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4121))^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var4114 + 
        Rational[1, 2] (-PlaneGeometry`GeometrySceneDrawer`Dump`var4100 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4104 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4110) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4120 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4104 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4106) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4123))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4100 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4110) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4120 + 
        Rational[1, 2] (PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4104 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4110) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4120 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4104 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4106) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4123))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4104 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4104 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4106) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4123 + 
        Rational[1, 2] (PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4104 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4110) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4120 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4104 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4106) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4123))^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var4115 + 
        Rational[1, 2] (-PlaneGeometry`GeometrySceneDrawer`Dump`var4101 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4105 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4111) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4120 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4105 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4107) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4123))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4101 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4111) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4120 + 
        Rational[1, 2] (PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4105 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4111) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4120 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4105 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4107) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4123))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4105 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4105 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4107) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4123 + 
        Rational[1, 2] (PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4105 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4111) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4120 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4105 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4107) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4123))^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var4116 + 
        Rational[1, 2] (-PlaneGeometry`GeometrySceneDrawer`Dump`var4102 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4104 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4102 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4110) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4122 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4104 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4108) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4124))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4102 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4102 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4110) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4122 + 
        Rational[1, 2] (PlaneGeometry`GeometrySceneDrawer`Dump`var4102 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4104 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4102 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4110) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4122 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4104 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4108) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4124))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4104 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4104 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4108) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4124 + 
        Rational[1, 2] (PlaneGeometry`GeometrySceneDrawer`Dump`var4102 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4104 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4102 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4110) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4122 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4104 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4108) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4124))^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var4117 + 
        Rational[1, 2] (-PlaneGeometry`GeometrySceneDrawer`Dump`var4103 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4105 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4103 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4111) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4122 - (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4105 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4109) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4124))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4103 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4103 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4111) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4122 + 
        Rational[1, 2] (PlaneGeometry`GeometrySceneDrawer`Dump`var4103 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4105 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4103 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4111) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4122 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4105 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4109) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4124))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4105 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4105 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4109) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4124 + 
        Rational[1, 2] (PlaneGeometry`GeometrySceneDrawer`Dump`var4103 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4105 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4103 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4111) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4122 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4105 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4109) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4124))^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4106 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4108 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4106 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4110) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4125)^2 + (-
         PlaneGeometry`GeometrySceneDrawer`Dump`var4107 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4109 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var4107 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4111) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4125)^2, {
      0 < PlaneGeometry`GeometrySceneDrawer`Dump`var4118 < 1, 0 < 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4119 < 1, 0 < 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4120 < 1, 0 < 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4121 < 1, 0 < 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4122 < 1, 0 < 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4123 < 1, 0 < 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4124 < 1, 0 < 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4125 < 
       1, (-PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4102)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4103)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var4102 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4104)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4103 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4105)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4112)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4113)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var4108 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4112)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var4109 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4113)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var4100 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4114)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4101 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4115)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var4110 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4114)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var4111 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4115)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var4102 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4112)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4103 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4113)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var4106 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4112)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var4107 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4113)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var4102 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4116)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4103 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4117)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var4110 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4116)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var4111 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4117)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var4104 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4114)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4105 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4115)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var4106 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4114)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var4107 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4115)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var4104 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4116)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4105 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4117)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var4108 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4116)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var4109 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4117)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var4106 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4108)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4107 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4109)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var4108 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4110)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4109 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4111)^2 >= 0.03}, {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var4100, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4101, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4102, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4103, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4104, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4105, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4106, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4107, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4108, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4109, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4110, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4111, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4112, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4113, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4114, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4115, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4116, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4117}, {}, {{
        PlaneGeometry`GeometrySceneDrawer`Dump`var4118}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var4119}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var4120}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var4121}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var4122}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var4123}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var4124}, {
        PlaneGeometry`GeometrySceneDrawer`Dump`var4125}}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {
    C["GeometricPoint"][$CellContext`a][1]^2 + 
     C["GeometricPoint"][$CellContext`a][2]^2 + (-4 + 
       C["GeometricPoint"][$CellContext`b][1])^2 + 
     C["GeometricPoint"][$CellContext`b][
       2]^2 + (-C["GeometricPoint"][$CellContext`a][1] + 
       C["GeometricPoint"][$CellContext`b][1] - 
       "paramVar"[{1}][1, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
        C["GeometricPoint"][$CellContext`c][1]))^2 + (-
        C["GeometricPoint"][$CellContext`a][2] + 
       C["GeometricPoint"][$CellContext`b][2] - 
       "paramVar"[{1}][1, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
        C["GeometricPoint"][$CellContext`c][2]))^2 + (-
        C["GeometricPoint"][$CellContext`b][1] - 
       "paramVar"[{1}][4, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
        C["GeometricPoint"][$CellContext`d][1]) + 
       Rational[1, 2] (C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`b][1] + 
         "paramVar"[{1}][4, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`d][1]) + 
         "paramVar"[{1}][2, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`e][1])))^2 + (-
        C["GeometricPoint"][$CellContext`a][1] - 
       "paramVar"[{1}][2, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
        C["GeometricPoint"][$CellContext`e][1]) + 
       Rational[1, 2] (C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`b][1] + 
         "paramVar"[{1}][4, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`d][1]) + 
         "paramVar"[{1}][2, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`e][1])))^2 + (-
        C["GeometricPoint"][$CellContext`b][2] - 
       "paramVar"[{1}][4, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
        C["GeometricPoint"][$CellContext`d][2]) + 
       Rational[1, 2] (C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`b][2] + 
         "paramVar"[{1}][4, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`d][2]) + 
         "paramVar"[{1}][2, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`e][2])))^2 + (-
        C["GeometricPoint"][$CellContext`a][2] - 
       "paramVar"[{1}][2, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
        C["GeometricPoint"][$CellContext`e][2]) + 
       Rational[1, 2] (C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`b][2] + 
         "paramVar"[{1}][4, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`d][2]) + 
         "paramVar"[{1}][2, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`e][2])))^2 + (-
        C["GeometricPoint"][$CellContext`d][1] + 
       C["GeometricPoint"][$CellContext`e][1] - 
       "paramVar"[{1}][8, 2] (-C["GeometricPoint"][$CellContext`d][1] + 
        C["GeometricPoint"][$CellContext`f][1]))^2 + (-
        C["GeometricPoint"][$CellContext`c][1] - 
       "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
        C["GeometricPoint"][$CellContext`d][1]) + 
       Rational[1, 2] (C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`c][1] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`d][1]) + 
         "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`f][1])))^2 + (-
        C["GeometricPoint"][$CellContext`a][1] - 
       "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
        C["GeometricPoint"][$CellContext`f][1]) + 
       Rational[1, 2] (C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`c][1] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`d][1]) + 
         "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`f][1])))^2 + (-
        C["GeometricPoint"][$CellContext`c][1] - 
       "paramVar"[{1}][7, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
        C["GeometricPoint"][$CellContext`e][1]) + 
       Rational[1, 2] (C["GeometricPoint"][$CellContext`b][1] + 
         C["GeometricPoint"][$CellContext`c][1] + 
         "paramVar"[{1}][7, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`e][1]) + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`f][1])))^2 + (-
        C["GeometricPoint"][$CellContext`b][1] - 
       "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
        C["GeometricPoint"][$CellContext`f][1]) + 
       Rational[1, 2] (C["GeometricPoint"][$CellContext`b][1] + 
         C["GeometricPoint"][$CellContext`c][1] + 
         "paramVar"[{1}][7, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`e][1]) + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`f][1])))^2 + (-
        C["GeometricPoint"][$CellContext`d][2] + 
       C["GeometricPoint"][$CellContext`e][2] - 
       "paramVar"[{1}][8, 2] (-C["GeometricPoint"][$CellContext`d][2] + 
        C["GeometricPoint"][$CellContext`f][2]))^2 + (-
        C["GeometricPoint"][$CellContext`c][2] - 
       "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
        C["GeometricPoint"][$CellContext`d][2]) + 
       Rational[1, 2] (C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`c][2] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`d][2]) + 
         "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`f][2])))^2 + (-
        C["GeometricPoint"][$CellContext`a][2] - 
       "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
        C["GeometricPoint"][$CellContext`f][2]) + 
       Rational[1, 2] (C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`c][2] + 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`d][2]) + 
         "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`f][2])))^2 + (-
        C["GeometricPoint"][$CellContext`c][2] - 
       "paramVar"[{1}][7, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
        C["GeometricPoint"][$CellContext`e][2]) + 
       Rational[1, 2] (C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`c][2] + 
         "paramVar"[{1}][7, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`e][2]) + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`f][2])))^2 + (-
        C["GeometricPoint"][$CellContext`b][2] - 
       "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
        C["GeometricPoint"][$CellContext`f][2]) + 
       Rational[1, 2] (C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`c][2] + 
         "paramVar"[{1}][7, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`e][2]) + 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`f][2])))^2 + (
       Rational[1, 2] (-C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`b][1] - 
         "paramVar"[{1}][4, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`d][1]) - 
         "paramVar"[{1}][2, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`e][1])) + 
       C["GeometricPoint"][$CellContext`x][1])^2 + (
       Rational[1, 2] (-C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`b][2] - 
         "paramVar"[{1}][4, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`d][2]) - 
         "paramVar"[{1}][2, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`e][2])) + 
       C["GeometricPoint"][$CellContext`x][2])^2 + (
       Rational[1, 2] (-C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`c][1] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
          C["GeometricPoint"][$CellContext`d][1]) - 
         "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`f][1])) + 
       C["GeometricPoint"][$CellContext`y][1])^2 + (
       Rational[1, 2] (-C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`c][2] - 
         "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`d][2]) - 
         "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`f][2])) + 
       C["GeometricPoint"][$CellContext`y][2])^2 + (
       Rational[1, 2] (-C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`c][1] - 
         "paramVar"[{1}][7, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
          C["GeometricPoint"][$CellContext`e][1]) - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`f][1])) + 
       C["GeometricPoint"][$CellContext`z][1])^2 + (
       Rational[1, 2] (-C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`c][2] - 
         "paramVar"[{1}][7, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`e][2]) - 
         "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`f][2])) + 
       C["GeometricPoint"][$CellContext`z][2])^2}, 
    PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
     0 < "paramVar"[{1}][1, 2] < 1, 0 < "paramVar"[{1}][2, 2] < 1, 0 < 
      "paramVar"[{1}][3, 2] < 1, 0 < "paramVar"[{1}][4, 2] < 1, 0 < 
      "paramVar"[{1}][5, 2] < 1, 0 < "paramVar"[{1}][6, 2] < 1, 0 < 
      "paramVar"[{1}][7, 2] < 1, 0 < "paramVar"[{1}][8, 2] < 
      1, (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`b][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`b][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
         C["GeometricPoint"][$CellContext`c][1])^2 + (-
          C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`c][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`x][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`x][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`e][1] - C[
         "GeometricPoint"][$CellContext`x][1])^2 + (
         C["GeometricPoint"][$CellContext`e][2] - C[
         "GeometricPoint"][$CellContext`x][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`y][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`y][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`f][1] - C[
         "GeometricPoint"][$CellContext`y][1])^2 + (
         C["GeometricPoint"][$CellContext`f][2] - C[
         "GeometricPoint"][$CellContext`y][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
         C["GeometricPoint"][$CellContext`x][1])^2 + (-
          C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`x][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
         "GeometricPoint"][$CellContext`x][1])^2 + (
         C["GeometricPoint"][$CellContext`d][2] - C[
         "GeometricPoint"][$CellContext`x][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
         C["GeometricPoint"][$CellContext`z][1])^2 + (-
          C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`z][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`f][1] - C[
         "GeometricPoint"][$CellContext`z][1])^2 + (
         C["GeometricPoint"][$CellContext`f][2] - C[
         "GeometricPoint"][$CellContext`z][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`y][1])^2 + (-
          C["GeometricPoint"][$CellContext`c][2] + 
         C["GeometricPoint"][$CellContext`y][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`d][1] - C[
         "GeometricPoint"][$CellContext`y][1])^2 + (
         C["GeometricPoint"][$CellContext`d][2] - C[
         "GeometricPoint"][$CellContext`y][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`z][1])^2 + (-
          C["GeometricPoint"][$CellContext`c][2] + 
         C["GeometricPoint"][$CellContext`z][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`e][1] - C[
         "GeometricPoint"][$CellContext`z][1])^2 + (
         C["GeometricPoint"][$CellContext`e][2] - C[
         "GeometricPoint"][$CellContext`z][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`d][1] + 
         C["GeometricPoint"][$CellContext`e][1])^2 + (-
          C["GeometricPoint"][$CellContext`d][2] + 
         C["GeometricPoint"][$CellContext`e][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`e][1] + 
         C["GeometricPoint"][$CellContext`f][1])^2 + (-
          C["GeometricPoint"][$CellContext`e][2] + 
         C["GeometricPoint"][$CellContext`f][2])^2 >= 0.03}}, 
    PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
       C["GeometricPoint"][$CellContext`a][1], 
       C["GeometricPoint"][$CellContext`a][2], 
       C["GeometricPoint"][$CellContext`b][1], 
       C["GeometricPoint"][$CellContext`b][2], 
       C["GeometricPoint"][$CellContext`c][1], 
       C["GeometricPoint"][$CellContext`c][2], 
       C["GeometricPoint"][$CellContext`d][1], 
       C["GeometricPoint"][$CellContext`d][2], 
       C["GeometricPoint"][$CellContext`e][1], 
       C["GeometricPoint"][$CellContext`e][2], 
       C["GeometricPoint"][$CellContext`f][1], 
       C["GeometricPoint"][$CellContext`f][2], 
       C["GeometricPoint"][$CellContext`x][1], 
       C["GeometricPoint"][$CellContext`x][2], 
       C["GeometricPoint"][$CellContext`y][1], 
       C["GeometricPoint"][$CellContext`y][2], 
       C["GeometricPoint"][$CellContext`z][1], 
       C["GeometricPoint"][$CellContext`z][2]}, {}, {{
        "paramVar"[{1}][1, 2]}, {
        "paramVar"[{1}][2, 2]}, {
        "paramVar"[{1}][3, 2]}, {
        "paramVar"[{1}][4, 2]}, {
        "paramVar"[{1}][5, 2]}, {
        "paramVar"[{1}][6, 2]}, {
        "paramVar"[{1}][7, 2]}, {
        "paramVar"[{1}][8, 2]}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{
     C["GeometricPoint"][$CellContext`a][1] == 0, 
      C["GeometricPoint"][$CellContext`a][2] == 0, 
      C["GeometricPoint"][$CellContext`b][1] == 4, 
      C["GeometricPoint"][$CellContext`b][2] == 0, 
      C["GeometricPoint"][$CellContext`b][1] == 
      C["GeometricPoint"][$CellContext`a][1] + 
       "paramVar"[{1}][1, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`c][1]), 
      C["GeometricPoint"][$CellContext`b][2] == 
      C["GeometricPoint"][$CellContext`a][2] + 
       "paramVar"[{1}][1, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`c][2]), 
      C["GeometricPoint"][$CellContext`x][1] == 
      Rational[1, 2] (C["GeometricPoint"][$CellContext`a][1] + 
        C["GeometricPoint"][$CellContext`b][1] + 
        "paramVar"[{1}][4, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`d][1]) + 
        "paramVar"[{1}][2, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`e][1])), 
      C["GeometricPoint"][$CellContext`x][2] == 
      Rational[1, 2] (C["GeometricPoint"][$CellContext`a][2] + 
        C["GeometricPoint"][$CellContext`b][2] + 
        "paramVar"[{1}][4, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`d][2]) + 
        "paramVar"[{1}][2, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`e][2])), 
      C["GeometricPoint"][$CellContext`y][1] == 
      Rational[1, 2] (C["GeometricPoint"][$CellContext`a][1] + 
        C["GeometricPoint"][$CellContext`c][1] + 
        "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
          C["GeometricPoint"][$CellContext`d][1]) + 
        "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`f][1])), 
      C["GeometricPoint"][$CellContext`y][2] == 
      Rational[1, 2] (C["GeometricPoint"][$CellContext`a][2] + 
        C["GeometricPoint"][$CellContext`c][2] + 
        "paramVar"[{1}][6, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`d][2]) + 
        "paramVar"[{1}][3, 2] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`f][2])), 
      C["GeometricPoint"][$CellContext`z][1] == 
      Rational[1, 2] (C["GeometricPoint"][$CellContext`b][1] + 
        C["GeometricPoint"][$CellContext`c][1] + 
        "paramVar"[{1}][7, 2] (-C["GeometricPoint"][$CellContext`c][1] + 
          C["GeometricPoint"][$CellContext`e][1]) + 
        "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`f][1])), 
      C["GeometricPoint"][$CellContext`z][2] == 
      Rational[1, 2] (C["GeometricPoint"][$CellContext`b][2] + 
        C["GeometricPoint"][$CellContext`c][2] + 
        "paramVar"[{1}][7, 2] (-C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`e][2]) + 
        "paramVar"[{1}][5, 2] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`f][2])), 
      C["GeometricPoint"][$CellContext`e][1] == 
      C["GeometricPoint"][$CellContext`d][1] + 
       "paramVar"[{1}][8, 2] (-C["GeometricPoint"][$CellContext`d][1] + 
         C["GeometricPoint"][$CellContext`f][1]), 
      C["GeometricPoint"][$CellContext`e][2] == 
      C["GeometricPoint"][$CellContext`d][2] + 
       "paramVar"[{1}][8, 2] (-C["GeometricPoint"][$CellContext`d][2] + 
         C["GeometricPoint"][$CellContext`f][2])}}, 
    PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
    1, 1, 0, {{{0., 0.}, {4., 0.}, {7.7207796939068, 
     1.628337071456052*^-51}, {-0.3609374626929994, 12.411149692884845`}, {
     6.086717525463618, 10.246162783369597`}, {13.220983632292107`, 
     7.850626303517803}, {2.513371739719993, 4.230925567968928}, {
     5.567886408830347, 3.306212989968336}, {7.2759701284565494`, 
     2.7891190093401645`}}}, {{}}, {{{0., 0.}, {4., 0.}, {7.7207796939068, 
     1.628337071456052*^-51}, {-0.3609374626929994, 12.411149692884845`}, {
     6.086717525463618, 10.246162783369597`}, {13.220983632292107`, 
     7.850626303517803}, {2.513371739719993, 4.230925567968928}, {
     5.567886408830347, 3.306212989968336}, {7.2759701284565494`, 
     2.7891190093401645`}}}, {{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`d], 
           C["GeometricPoint"][$CellContext`f]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`e]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`f]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`f]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`e]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`f]]}, 
         Inset[
          Style[" f ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`f]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`f]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`x]]}, 
         Inset[
          Style[" x ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`x]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`x]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`y]]}, 
         Inset[
          Style[" y ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`y]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`y]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`z]]}, 
         Inset[
          Style[" z ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`z]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`z]]}}}, {}}}, {{{
       C["GeometricPoint"][$CellContext`a] -> {0., 0.}, 
        C["GeometricPoint"][$CellContext`b] -> {4., 0.}, 
        C["GeometricPoint"][$CellContext`c] -> {7.7207796939068, 
         1.628337071456052*^-51}, 
        C["GeometricPoint"][$CellContext`d] -> {-0.3609374626929994, 
         12.411149692884845`}, 
        C["GeometricPoint"][$CellContext`e] -> {6.086717525463618, 
         10.246162783369597`}, 
        C["GeometricPoint"][$CellContext`f] -> {13.220983632292107`, 
         7.850626303517803}, 
        C["GeometricPoint"][$CellContext`x] -> {2.513371739719993, 
         4.230925567968928}, 
        C["GeometricPoint"][$CellContext`y] -> {5.567886408830347, 
         3.306212989968336}, 
        C["GeometricPoint"][$CellContext`z] -> {7.2759701284565494`, 
         2.7891190093401645`}}, {}}}, {{{
       False, False, False, False, False, False, False, False, 
        False}}}, {{{}}}, False, True, {}, {}, {{{0., 0.}, {4., 0.}, {
     7.7207796939068, 1.628337071456052*^-51}, {-0.3609374626929994, 
     12.411149692884845`}, {6.086717525463618, 10.246162783369597`}, {
     13.220983632292107`, 7.850626303517803}, {2.513371739719993, 
     4.230925567968928}, {5.567886408830347, 3.306212989968336}, {
     7.2759701284565494`, 2.7891190093401645`}}}, {{{-2.01912957219151, 
     14.879175741790618`}, {-2.243577810548641, 14.654727503433488`}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = {{{-2.01912957219151,
     14.879175741790618`}, {-2.243577810548641, 14.654727503433488`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = {{{0., 
    0.}, {4., 0.}, {7.7207796939068, 
    1.628337071456052*^-51}, {-0.3609374626929994, 12.411149692884845`}, {
    6.086717525463618, 10.246162783369597`}, {13.220983632292107`, 
    7.850626303517803}, {2.513371739719993, 4.230925567968928}, {
    5.567886408830347, 3.306212989968336}, {7.2759701284565494`, 
    2.7891190093401645`}}}, PlaneGeometry`GeometrySceneDrawerDump`picPart$$, 
    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = {{{0., 0.}, {4., 
    0.}, {7.7207796939068, 1.628337071456052*^-51}, {-0.3609374626929994, 
    12.411149692884845`}, {6.086717525463618, 10.246162783369597`}, {
    13.220983632292107`, 7.850626303517803}, {2.513371739719993, 
    4.230925567968928}, {5.567886408830347, 3.306212989968336}, {
    7.2759701284565494`, 2.7891190093401645`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
      C["GeometricPoint"][$CellContext`a], 
      C["GeometricPoint"][$CellContext`b], 
      C["GeometricPoint"][$CellContext`c], 
      C["GeometricPoint"][$CellContext`d], 
      C["GeometricPoint"][$CellContext`e], 
      C["GeometricPoint"][$CellContext`f], 
      C["GeometricPoint"][$CellContext`x], 
      C["GeometricPoint"][$CellContext`y], 
      C["GeometricPoint"][$CellContext`z]}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
    PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{
      AbsoluteThickness[2], 
      GrayLevel[0.7], 
      EdgeForm[{
        GrayLevel[0.7], 
        Thickness[Large]}], {{
        Line[{
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricPoint"][$CellContext`c]}]}, {
        Line[{
          C["GeometricPoint"][$CellContext`d], 
          C["GeometricPoint"][$CellContext`f]}]}, {
        Line[{
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricPoint"][$CellContext`e]}]}, {
        Line[{
          C["GeometricPoint"][$CellContext`b], 
          C["GeometricPoint"][$CellContext`d]}]}, {
        Line[{
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricPoint"][$CellContext`f]}]}, {
        Line[{
          C["GeometricPoint"][$CellContext`c], 
          C["GeometricPoint"][$CellContext`d]}]}, {
        Line[{
          C["GeometricPoint"][$CellContext`b], 
          C["GeometricPoint"][$CellContext`f]}]}, {
        Line[{
          C["GeometricPoint"][$CellContext`c], 
          C["GeometricPoint"][$CellContext`e]}]}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`a]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`b]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`c]]}, 
        Inset[
         Style[" c ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`c]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`c]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`d]]}, 
        Inset[
         Style[" d ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`d]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`d]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`e]]}, 
        Inset[
         Style[" e ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`e]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`e]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`f]]}, 
        Inset[
         Style[" f ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`f]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`f]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`x]]}, 
        Inset[
         Style[" x ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`x]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`x]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`y]]}, 
        Inset[
         Style[" y ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`y]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`y]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`z]]}, 
        Inset[
         Style[" z ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`z]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`z]]}}}, {}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
      C["GeometricPoint"][$CellContext`a][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4100}, {
      C["GeometricPoint"][$CellContext`a][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4101}, {
      C["GeometricPoint"][$CellContext`b][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4102}, {
      C["GeometricPoint"][$CellContext`b][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4103}, {
      C["GeometricPoint"][$CellContext`c][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4104}, {
      C["GeometricPoint"][$CellContext`c][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4105}, {
      C["GeometricPoint"][$CellContext`d][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4106}, {
      C["GeometricPoint"][$CellContext`d][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4107}, {
      C["GeometricPoint"][$CellContext`e][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4108}, {
      C["GeometricPoint"][$CellContext`e][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4109}, {
      C["GeometricPoint"][$CellContext`f][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4110}, {
      C["GeometricPoint"][$CellContext`f][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4111}, {
      C["GeometricPoint"][$CellContext`x][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4112}, {
      C["GeometricPoint"][$CellContext`x][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4113}, {
      C["GeometricPoint"][$CellContext`y][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4114}, {
      C["GeometricPoint"][$CellContext`y][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4115}, {
      C["GeometricPoint"][$CellContext`z][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4116}, {
      C["GeometricPoint"][$CellContext`z][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4117}, {
      "paramVar"[{1}][1, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var4118}, {
      "paramVar"[{1}][2, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var4119}, {
      "paramVar"[{1}][3, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var4120}, {
      "paramVar"[{1}][4, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var4121}, {
      "paramVar"[{1}][5, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var4122}, {
      "paramVar"[{1}][6, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var4123}, {
      "paramVar"[{1}][7, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var4124}, {
      "paramVar"[{1}][8, 2], PlaneGeometry`GeometrySceneDrawer`Dump`var4125}},
     PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var4100, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4101}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4102, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4103}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4104, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4105}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4106, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4107}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4108, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4109}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4110, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4111}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4112, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4113}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4114, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4115}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4116, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4117}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var4100, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4101} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4102, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4103} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4104, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4105} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4106, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4107} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4108, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4109} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4110, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4111} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4112, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4113} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4114, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4115} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4116, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4117} -> 1], 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var4100, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4101} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4102, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4103} -> 
     2, {PlaneGeometry`GeometrySceneDrawer`Dump`var4104, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4105} -> 
     3, {PlaneGeometry`GeometrySceneDrawer`Dump`var4106, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4107} -> 
     4, {PlaneGeometry`GeometrySceneDrawer`Dump`var4108, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4109} -> 
     5, {PlaneGeometry`GeometrySceneDrawer`Dump`var4110, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4111} -> 
     6, {PlaneGeometry`GeometrySceneDrawer`Dump`var4112, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4113} -> 
     7, {PlaneGeometry`GeometrySceneDrawer`Dump`var4114, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4115} -> 
     8, {PlaneGeometry`GeometrySceneDrawer`Dump`var4116, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4117} -> 9], 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[], 
    PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
      C["GeometricPoint"][$CellContext`a] -> {0., 0.}, 
       C["GeometricPoint"][$CellContext`b] -> {4., 0.}, 
       C["GeometricPoint"][$CellContext`c] -> {7.7207796939068, 
        1.628337071456052*^-51}, 
       C["GeometricPoint"][$CellContext`d] -> {-0.3609374626929994, 
        12.411149692884845`}, 
       C["GeometricPoint"][$CellContext`e] -> {6.086717525463618, 
        10.246162783369597`}, 
       C["GeometricPoint"][$CellContext`f] -> {13.220983632292107`, 
        7.850626303517803}, 
       C["GeometricPoint"][$CellContext`x] -> {2.513371739719993, 
        4.230925567968928}, 
       C["GeometricPoint"][$CellContext`y] -> {5.567886408830347, 
        3.306212989968336}, 
       C["GeometricPoint"][$CellContext`z] -> {7.2759701284565494`, 
        2.7891190093401645`}}, {}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
    PlaneGeometry`GeometrySceneDrawerDump`constraint$$, 
    PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
     Tooltip[
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
          Line[{{-0.75, 0}, {0.75, 0}}], 
          Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
       AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
     "Hide Controls" :> (
       PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
      Delimiter, Row[{
         Dynamic[
          RawBoxes[
           FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], "  ", 
         "Initial Settings"}] :> ({
        PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
         PlaneGeometry`GeometrySceneDrawerDump`step$$, 
         PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
         PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`current$$, 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
         PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
         PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
       PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
      "Paste Current Graphics" :> CellPrint[
        ExpressionCell[
         Append[
          PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
           Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
            If[
             And[
             False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
             PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
      "Paste Current GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          MapThread[Construct, {
            Map[ReplaceAll, {
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
            MapThread[Cases, {
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
              Map[HoldPattern, 
               Thread[Apply[Alternatives, 
                  Apply[Join, 
                   Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                  1}] -> Blank[]]]}]}], 
          If[False, 
           ReplaceAll[
            Take[
             ReplaceAll[
              Hold[{
                
                Line[{{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d, $CellContext`e, $CellContext`f}, {$CellContext`a, \
$CellContext`x, $CellContext`e}, {$CellContext`b, $CellContext`x, \
$CellContext`d}, {$CellContext`a, $CellContext`y, $CellContext`f}, \
{$CellContext`c, $CellContext`y, $CellContext`d}, {$CellContext`b, \
$CellContext`z, $CellContext`f}, {$CellContext`c, $CellContext`z, \
$CellContext`e}}], $CellContext`a == {0, 0}, $CellContext`b == {4, 0}}], Hold[{
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  BlankNullSequence[GeometricStep]]}] :> 
              Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               BlankNullSequence[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
           Hold[{
             
             Line[{{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d, $CellContext`e, $CellContext`f}, {$CellContext`a, \
$CellContext`x, $CellContext`e}, {$CellContext`b, $CellContext`x, \
$CellContext`d}, {$CellContext`a, $CellContext`y, $CellContext`f}, \
{$CellContext`c, $CellContext`y, $CellContext`d}, {$CellContext`b, \
$CellContext`z, $CellContext`f}, {$CellContext`c, $CellContext`z, \
$CellContext`e}}], $CellContext`a == {0, 0}, $CellContext`b == {4, 0}}]], 
          If[
           And[
           False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
           Replace[
            Part[
             Hold[{}], {1}, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               Blank[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], "Input"]],
       Delimiter, "Paste Complete GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          If[False, Identity, First][
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{
            
            Line[{{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d, $CellContext`e, $CellContext`f}, {$CellContext`a, \
$CellContext`x, $CellContext`e}, {$CellContext`b, $CellContext`x, \
$CellContext`d}, {$CellContext`a, $CellContext`y, $CellContext`f}, \
{$CellContext`c, $CellContext`y, $CellContext`d}, {$CellContext`b, \
$CellContext`z, $CellContext`f}, {$CellContext`c, $CellContext`z, \
$CellContext`e}}], $CellContext`a == {0, 0}, $CellContext`b == {4, 0}}], 
          Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          First[
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{
            
            Line[{{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d, $CellContext`e, $CellContext`f}, {$CellContext`a, \
$CellContext`x, $CellContext`e}, {$CellContext`b, $CellContext`x, \
$CellContext`d}, {$CellContext`a, $CellContext`y, $CellContext`f}, \
{$CellContext`c, $CellContext`y, $CellContext`d}, {$CellContext`b, \
$CellContext`z, $CellContext`f}, {$CellContext`c, $CellContext`z, \
$CellContext`e}}], $CellContext`a == {0, 0}, $CellContext`b == {4, 0}}], 
          Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
      "Paste Parameters" :> CellPrint[
        ExpressionCell[
         If[False, Identity, First][
          Transpose[
           MapThread[Construct, {
             Map[ReplaceAll, {
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
             Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
         "Input"]], "Paste Hypotheses" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{
            
            Line[{{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d, $CellContext`e, $CellContext`f}, {$CellContext`a, \
$CellContext`x, $CellContext`e}, {$CellContext`b, $CellContext`x, \
$CellContext`d}, {$CellContext`a, $CellContext`y, $CellContext`f}, \
{$CellContext`c, $CellContext`y, $CellContext`d}, {$CellContext`b, \
$CellContext`z, $CellContext`f}, {$CellContext`c, $CellContext`z, \
$CellContext`e}}], $CellContext`a == {0, 0}, $CellContext`b == {4, 0}}]], 
         "Input"]], "Paste Conclusions" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
        ExpressionCell[
         FindGeometricConjectures[
          PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
           If[
           False, {{{$CellContext`a -> {0., 0.}, $CellContext`b -> {4., 
                0.}, $CellContext`c -> {7.7207796939068, 
                1.628337071456052*^-51}, $CellContext`d -> \
{-0.3609374626929994, 12.411149692884845`}, $CellContext`e -> {
                6.086717525463618, 10.246162783369597`}, $CellContext`f -> {
                13.220983632292107`, 7.850626303517803}, $CellContext`x -> {
                2.513371739719993, 4.230925567968928}, $CellContext`y -> {
                5.567886408830347, 3.306212989968336}, $CellContext`z -> {
                7.2759701284565494`, 2.7891190093401645`}}, {}}}, 
            
            First[{{{$CellContext`a -> {0., 0.}, $CellContext`b -> {4., 
                 0.}, $CellContext`c -> {7.7207796939068, 
                 1.628337071456052*^-51}, $CellContext`d -> \
{-0.3609374626929994, 12.411149692884845`}, $CellContext`e -> {
                 6.086717525463618, 10.246162783369597`}, $CellContext`f -> {
                 13.220983632292107`, 7.850626303517803}, $CellContext`x -> {
                 2.513371739719993, 4.230925567968928}, $CellContext`y -> {
                 5.567886408830347, 3.306212989968336}, $CellContext`z -> {
                 7.2759701284565494`, 2.7891190093401645`}}, {}}}]], 
           Hold[{
             
             Line[{{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d, $CellContext`e, $CellContext`f}, {$CellContext`a, \
$CellContext`x, $CellContext`e}, {$CellContext`b, $CellContext`x, \
$CellContext`d}, {$CellContext`a, $CellContext`y, $CellContext`f}, \
{$CellContext`c, $CellContext`y, $CellContext`d}, {$CellContext`b, \
$CellContext`z, $CellContext`f}, {$CellContext`c, $CellContext`z, \
$CellContext`e}}], $CellContext`a == {0, 0}, $CellContext`b == {4, 0}}]]], 
         "Input"]]}, Appearance -> None, MenuAppearance -> "Menu"], 
    PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              2], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        ActionMenu[
         Tooltip[
          Graphics[{{
             GrayLevel[0.9], 
             Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], {
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
           AspectRatio -> Full, PlotRangePadding -> None], 
          "Controls/Paste"], {
         "Hide Controls" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
          Delimiter, Row[{
             Dynamic[
              RawBoxes[
               FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
             "  ", "Initial Settings"}] :> ({
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`current$$, 
             PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
           PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
          "Paste Current Graphics" :> CellPrint[
            ExpressionCell[
             Append[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                If[
                 And[
                 False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]],
           "Paste Current GeometricScene" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                MapThread[Cases, {
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                  Map[HoldPattern, 
                   Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
              If[False, 
               ReplaceAll[
                Take[
                 ReplaceAll[
                  Hold[{
                    
                    Line[{{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d, $CellContext`e, $CellContext`f}, {$CellContext`a, \
$CellContext`x, $CellContext`e}, {$CellContext`b, $CellContext`x, \
$CellContext`d}, {$CellContext`a, $CellContext`y, $CellContext`f}, \
{$CellContext`c, $CellContext`y, $CellContext`d}, {$CellContext`b, \
$CellContext`z, $CellContext`f}, {$CellContext`c, $CellContext`z, \
$CellContext`e}}], $CellContext`a == {0, 0}, $CellContext`b == {4, 0}}], Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                  Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   BlankNullSequence[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
               Hold[{
                 
                 Line[{{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d, $CellContext`e, $CellContext`f}, {$CellContext`a, \
$CellContext`x, $CellContext`e}, {$CellContext`b, $CellContext`x, \
$CellContext`d}, {$CellContext`a, $CellContext`y, $CellContext`f}, \
{$CellContext`c, $CellContext`y, $CellContext`d}, {$CellContext`b, \
$CellContext`z, $CellContext`f}, {$CellContext`c, $CellContext`z, \
$CellContext`e}}], $CellContext`a == {0, 0}, $CellContext`b == {4, 0}}]], 
              If[
               And[
               False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
               Replace[
                Part[
                 Hold[{}], {1}, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   Blank[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
             "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
          CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              If[False, Identity, First][
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{
                
                Line[{{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d, $CellContext`e, $CellContext`f}, {$CellContext`a, \
$CellContext`x, $CellContext`e}, {$CellContext`b, $CellContext`x, \
$CellContext`d}, {$CellContext`a, $CellContext`y, $CellContext`f}, \
{$CellContext`c, $CellContext`y, $CellContext`d}, {$CellContext`b, \
$CellContext`z, $CellContext`f}, {$CellContext`c, $CellContext`z, \
$CellContext`e}}], $CellContext`a == {0, 0}, $CellContext`b == {4, 0}}], 
              Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              First[
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{
                
                Line[{{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d, $CellContext`e, $CellContext`f}, {$CellContext`a, \
$CellContext`x, $CellContext`e}, {$CellContext`b, $CellContext`x, \
$CellContext`d}, {$CellContext`a, $CellContext`y, $CellContext`f}, \
{$CellContext`c, $CellContext`y, $CellContext`d}, {$CellContext`b, \
$CellContext`z, $CellContext`f}, {$CellContext`c, $CellContext`z, \
$CellContext`e}}], $CellContext`a == {0, 0}, $CellContext`b == {4, 0}}], 
              Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
          "Paste Parameters" :> CellPrint[
            ExpressionCell[
             If[False, Identity, First][
              Transpose[
               MapThread[Construct, {
                 Map[ReplaceAll, {
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                 Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]],
              "Input"]], "Paste Hypotheses" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{
                
                Line[{{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d, $CellContext`e, $CellContext`f}, {$CellContext`a, \
$CellContext`x, $CellContext`e}, {$CellContext`b, $CellContext`x, \
$CellContext`d}, {$CellContext`a, $CellContext`y, $CellContext`f}, \
{$CellContext`c, $CellContext`y, $CellContext`d}, {$CellContext`b, \
$CellContext`z, $CellContext`f}, {$CellContext`c, $CellContext`z, \
$CellContext`e}}], $CellContext`a == {0, 0}, $CellContext`b == {4, 0}}]], 
             "Input"]], "Paste Conclusions" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
            ExpressionCell[
             FindGeometricConjectures[
              PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
              GeometricScene][
               If[
               False, {{{$CellContext`a -> {0., 0.}, $CellContext`b -> {4., 
                    0.}, $CellContext`c -> {7.7207796939068, 
                    
                    1.628337071456052*^-51}, $CellContext`d -> \
{-0.3609374626929994, 12.411149692884845`}, $CellContext`e -> {
                    6.086717525463618, 
                    10.246162783369597`}, $CellContext`f -> {
                    13.220983632292107`, 
                    7.850626303517803}, $CellContext`x -> {2.513371739719993, 
                    4.230925567968928}, $CellContext`y -> {5.567886408830347, 
                    3.306212989968336}, $CellContext`z -> {
                    7.2759701284565494`, 2.7891190093401645`}}, {}}}, 
                
                First[{{{$CellContext`a -> {0., 0.}, $CellContext`b -> {4., 
                    0.}, $CellContext`c -> {7.7207796939068, 
                    1.628337071456052*^-51}, $CellContext`d -> \
{-0.3609374626929994, 12.411149692884845`}, $CellContext`e -> {
                    6.086717525463618, 
                    10.246162783369597`}, $CellContext`f -> {
                    13.220983632292107`, 
                    7.850626303517803}, $CellContext`x -> {2.513371739719993, 
                    4.230925567968928}, $CellContext`y -> {5.567886408830347, 
                    3.306212989968336}, $CellContext`z -> {
                    7.2759701284565494`, 2.7891190093401645`}}, {}}}]], 
               Hold[{
                 
                 Line[{{$CellContext`a, $CellContext`b, $CellContext`c}, \
{$CellContext`d, $CellContext`e, $CellContext`f}, {$CellContext`a, \
$CellContext`x, $CellContext`e}, {$CellContext`b, $CellContext`x, \
$CellContext`d}, {$CellContext`a, $CellContext`y, $CellContext`f}, \
{$CellContext`c, $CellContext`y, $CellContext`d}, {$CellContext`b, \
$CellContext`z, $CellContext`f}, {$CellContext`c, $CellContext`z, \
$CellContext`e}}], $CellContext`a == {0, 0}, $CellContext`b == {4, 0}}]]], 
             "Input"]]}, Appearance -> None, MenuAppearance -> "Menu"], 
        "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
     Grid[{{
        PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
        If[False, 
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 37.5},
             Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"],
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 1.5]], 
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
          Dynamic[
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
        PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
         Opacity[0]]}, 
       If[
        And[False, False], {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
        Nothing]}, Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              10], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        EventHandler[
         Dynamic[
          If[
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
         "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
           Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
        "LinkHand"], 
       MouseAppearance[
        Dynamic[
         Which[
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          EventHandler[
           Dynamic[PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
           "MouseClicked" :> (
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
             PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}, 
           Method -> "Queued"], True, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{0, -1}, {1, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Line[{{-0.5, 0}, {0.5, 0}}], 
             Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
          AspectRatio -> Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
               PlaneGeometry`GeometrySceneDrawerDump`q}, {
              PlaneGeometry`GeometrySceneDrawerDump`q, 
               Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {0, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
          Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[
            PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                PlaneGeometry`GeometrySceneDrawerDump`q}, {
               PlaneGeometry`GeometrySceneDrawerDump`q, 
                Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Arrowheads[{{1, 1, 
                Graphics[
                 Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
             Arrow[
              BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
          ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
          None], {"MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
           PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
             PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
        "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
       Grid[{{
          Graphics[{{
             GrayLevel[1], 
             
             Rectangle[{-
               Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                 10], -1}, {
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style["", Larger, 
               GrayLevel[0]], {0, 0}]}}, 
           ImageSize -> {
            20 Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
             20}, AspectRatio -> Full, PlotRangePadding -> None], 
          MouseAppearance[
           EventHandler[
            Dynamic[
             If[
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
            "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
              Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
           "LinkHand"], 
          MouseAppearance[
           Dynamic[
            Which[
            PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             EventHandler[
              Dynamic[
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
                PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)\
}, Method -> "Queued"], True, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]]\
, "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{0, -1}, {1, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.5, 0}, {0.5, 0}}], 
                Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {0, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                   PlaneGeometry`GeometrySceneDrawerDump`q}, {
                  PlaneGeometry`GeometrySceneDrawerDump`q, 
                   Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Arrowheads[{{1, 1, 
                   Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                Arrow[
                 BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
             ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
             None], {"MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
              PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
           "LinkHand"]}}, Spacings -> {0, 0}]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
     Grid[
      If[False, {{
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
         Grid[{{
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Style["Conclusion", Larger, Bold, 
              GrayLevel[0.6]], 5], 
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
             Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}}, 
          Spacings -> {0, 0}]}, {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
          Pane[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
            PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
           ImageSize -> {
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5}, 
           Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"], 
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
          1.5]}}, {{}}], Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
     MouseAppearance[
      Piecewise[{{
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
            False)}, PassEventsDown -> True], 
         And[
          Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
          PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
            Null)}, PassEventsDown -> True], 
         And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
        True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
          PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
        PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
         PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
          PlaneGeometry`GeometrySceneDrawerDump`step$$, 
          PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
       Part[
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
          TimeConstrained[
           Fold[
           PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
            PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            
            Transpose[{
             PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
              PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
              PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
           PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
           Flatten[
            ReplaceAll[
             ReplaceAll[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 C["GeometricPoint"][
                  BlankNullSequence[]]] -> 
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                 Blank[]]) :> 
              Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                 PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                PlaneGeometry`GeometrySceneDrawerDump`c]], 
             Apply[
             Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
          Flatten[
           ReplaceAll[
            ReplaceAll[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                C["GeometricPoint"][
                 BlankNullSequence[]]] -> 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                Blank[]]) :> 
             Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                PlaneGeometry`GeometrySceneDrawerDump`x] -> 
               PlaneGeometry`GeometrySceneDrawerDump`c]], 
            Apply[
            Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
       PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
        ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
            And[
            False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
        ReplaceAll[{
          PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Apply[Rule, 
           Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
           1}]]; Part[
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
          ReplaceAll[
           Normal[
            AssociationMap[
            PlaneGeometry`GeometrySceneDrawerDump`point, 
             PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
          Select[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
           PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
            First[#]]& ]}; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
       PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
      "DragGraphics"], SynchronousUpdating -> False], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
     Panel[
      Grid[{{
         Text[
          Style["Points", Bold]]}, {
         Grid[{{
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 1]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 2]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 3]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 4]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 5]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   5], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 6]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   6], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 7], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 7]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   7], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 7], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 8], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 8]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   8], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 8], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 9], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 9]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   9], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 9], Not]}, 
              PassEventsUp -> False], "LinkHand"]}}]}, {
         Grid[{{
            Graphics[{
              Hue[0.64, 0.71, 0.37], 
              AbsolutePointSize[11], 
              Point[{0, 0}], 
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
            Graphics[{
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
       Alignment -> Left, Dividers -> False], Background -> GrayLevel[0.9]], {
     "MouseClicked" :> (
       PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
       NotebookDelete[
        PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
    PlaneGeometry`GeometrySceneDrawerDump`display$$, 
    PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = MouseAppearance[
     Dynamic[
      EventHandler[
       Tooltip[
        Append[
         PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
          Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           If[
            And[
            False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
         PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
          PlaneGeometry`GeometrySceneDrawerDump`size$$}], "Show Controls"], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
       PassEventsUp -> False]], "LinkHand"], 
    PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1.5}, {1, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1.5}, {0, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
       RGBColor[0.161, 0.667, 0.887], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
    Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {1, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Line[{{-0.5, 0}, {0.5, 0}}], 
        Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {0, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Arrowheads[{{1, 1, 
           Graphics[
            Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
        Arrow[
         BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
     ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4, 5, 
    6, 7, 8, 9}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" a ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" b ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" c ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" d ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" e ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" f ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" x ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" y ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" z ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Line[{{0., 0.}, {7.7207796939068, 1.628337071456052*^-51}}]}, {
         Line[{{-0.3609374626929994, 12.411149692884845`}, {
          13.220983632292107`, 7.850626303517803}}]}, {
         Line[{{0., 0.}, {6.086717525463618, 10.246162783369597`}}]}, {
         Line[{{4., 0.}, {-0.3609374626929994, 12.411149692884845`}}]}, {
         Line[{{0., 0.}, {13.220983632292107`, 7.850626303517803}}]}, {
         Line[{{7.7207796939068, 
          1.628337071456052*^-51}, {-0.3609374626929994, 
          12.411149692884845`}}]}, {
         Line[{{4., 0.}, {13.220983632292107`, 7.850626303517803}}]}, {
         Line[{{7.7207796939068, 1.628337071456052*^-51}, {6.086717525463618, 
          10.246162783369597`}}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{0., 0.}]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0.,
           0.}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{0., 0.}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{4., 0.}]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {4.,
           0.}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{4., 0.}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{7.7207796939068, 1.628337071456052*^-51}]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          7.7207796939068, 1.628337071456052*^-51}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{7.7207796939068, 1.628337071456052*^-51}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-0.3609374626929994, 12.411149692884845`}]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-0.3609374626929994, 12.411149692884845`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-0.3609374626929994, 12.411149692884845`}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{6.086717525463618, 10.246162783369597`}]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          6.086717525463618, 10.246162783369597`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{6.086717525463618, 10.246162783369597`}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{13.220983632292107`, 7.850626303517803}]}, 
         Inset[
          Style[" f ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          13.220983632292107`, 7.850626303517803}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{13.220983632292107`, 7.850626303517803}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{2.513371739719993, 4.230925567968928}]}, 
         Inset[
          Style[" x ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          2.513371739719993, 4.230925567968928}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{2.513371739719993, 4.230925567968928}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{5.567886408830347, 3.306212989968336}]}, 
         Inset[
          Style[" y ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          5.567886408830347, 3.306212989968336}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{5.567886408830347, 3.306212989968336}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{7.2759701284565494`, 2.7891190093401645`}]}, 
         Inset[
          Style[" z ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          7.2759701284565494`, 2.7891190093401645`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{7.2759701284565494`, 2.7891190093401645`}]}}}, {}}}, 
     Background -> GrayLevel[1], {
     PlotRange -> {{-2.01912957219151, 
       14.879175741790618`}, {-2.243577810548641, 14.654727503433488`}}, 
      ImageSize -> {{380, 380}, {380, 380}}}], 
    PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[589713]}, 
    StyleBox[
     FrameBox[
      PaneBox[
       PaneSelectorBox[{False->
        DynamicBox[ToBoxes[
          If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
           Column[{
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
             Pane[
             PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
              Dynamic[PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                   First[#], 205] {1, 1})& ], ImageSizeAction -> 
              "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
           PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
          StandardForm],
         ImageSizeCache->{414., {235.3340332872234, 241.06596671277657`}}], 
        True->
        TagBox[
         DynamicBox[ToBoxes[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
           StandardForm],
          ImageSizeCache->{380., {217.3340332872234, 223.06596671277657`}}],
         MouseAppearanceTag["Arrow"]]}, Dynamic[
         CurrentValue["MouseOver"]],
        FrameMargins->0,
        ImageSize->All],
       ImageSize->Dynamic[
        PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
             And[False, False], 30, 0] + If[False, 50, 0]}],
       ScrollPosition->{0., 3.5}],
      FrameStyle->GrayLevel[0.9],
      StripOnInput->False],
     StripOnInput->False,
     DynamicEvaluationTimeout->20,
     ImageSize->Automatic,
     BaseStyle -> {
      SetterBoxOptions -> {ImageSize -> Automatic}, 
       PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
    DynamicModuleValues:>{},
    Initialization:>(GeometricScene; 
     PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  GeometricScene[{{$CellContext`a -> {0., 0.}, $CellContext`b -> {4., 
      0.}, $CellContext`c -> {7.7207796939068, 
      1.628337071456052*^-51}, $CellContext`d -> {-0.3609374626929994, 
      12.411149692884845`}, $CellContext`e -> {6.086717525463618, 
      10.246162783369597`}, $CellContext`f -> {13.220983632292107`, 
      7.850626303517803}, $CellContext`x -> {2.513371739719993, 
      4.230925567968928}, $CellContext`y -> {5.567886408830347, 
      3.306212989968336}, $CellContext`z -> {7.2759701284565494`, 
      2.7891190093401645`}}, {}}, {
    Line[{{$CellContext`a, $CellContext`b, $CellContext`c}, {$CellContext`d, \
$CellContext`e, $CellContext`f}, {$CellContext`a, $CellContext`x, \
$CellContext`e}, {$CellContext`b, $CellContext`x, $CellContext`d}, \
{$CellContext`a, $CellContext`y, $CellContext`f}, {$CellContext`c, \
$CellContext`y, $CellContext`d}, {$CellContext`b, $CellContext`z, \
$CellContext`f}, {$CellContext`c, $CellContext`z, $CellContext`e}}], \
$CellContext`a == {0, 0}, $CellContext`b == {4, 0}}, {}],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.8300162269974856`*^9, 3.830016297569439*^9, {3.830016330992613*^9, 
   3.8300163468290873`*^9}, 3.830016393713622*^9, {3.83001650464649*^9, 
   3.8300165891128716`*^9}, 3.8303520656805964`*^9, 3.830352158437128*^9, 
   3.8303522269876356`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"fb90af2d-e1d1-4e92-8c83-52daf704e612"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindGeometricConjectures", "[", "scene4", "]"}], "[", 
  "\"\<Conclusions\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8302720134198737`*^9, 3.830272013815282*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"34e9c9d8-a5e7-4735-af28-1dcdb973c391"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"GeometricAssertion"},
     "InactiveHead",
     BaseStyle->"Inactive",
     SyntaxForm->"Symbol",
     Tooltip->"Inactive[GeometricAssertion]"], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", "\<\"Collinear\"\>"}], 
    "]"}], ",", 
   RowBox[{
    RowBox[{
     TemplateBox[{"PlanarAngle"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[PlanarAngle]"], "[", 
     RowBox[{"{", 
      RowBox[{"b", ",", "z", ",", "e"}], "}"}], "]"}], "\[Equal]", 
    RowBox[{
     TemplateBox[{"PlanarAngle"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[PlanarAngle]"], "[", 
     RowBox[{"{", 
      RowBox[{"f", ",", "z", ",", "c"}], "}"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     TemplateBox[{"PlanarAngle"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[PlanarAngle]"], "[", 
     RowBox[{"{", 
      RowBox[{"b", ",", "z", ",", "c"}], "}"}], "]"}], "\[Equal]", 
    RowBox[{
     TemplateBox[{"PlanarAngle"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[PlanarAngle]"], "[", 
     RowBox[{"{", 
      RowBox[{"f", ",", "z", ",", "e"}], "}"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     TemplateBox[{"PlanarAngle"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[PlanarAngle]"], "[", 
     RowBox[{"{", 
      RowBox[{"a", ",", "y", ",", "d"}], "}"}], "]"}], "\[Equal]", 
    RowBox[{
     TemplateBox[{"PlanarAngle"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[PlanarAngle]"], "[", 
     RowBox[{"{", 
      RowBox[{"f", ",", "y", ",", "c"}], "}"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     TemplateBox[{"PlanarAngle"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[PlanarAngle]"], "[", 
     RowBox[{"{", 
      RowBox[{"a", ",", "y", ",", "c"}], "}"}], "]"}], "\[Equal]", 
    RowBox[{
     TemplateBox[{"PlanarAngle"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[PlanarAngle]"], "[", 
     RowBox[{"{", 
      RowBox[{"f", ",", "y", ",", "d"}], "}"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     TemplateBox[{"PlanarAngle"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[PlanarAngle]"], "[", 
     RowBox[{"{", 
      RowBox[{"a", ",", "x", ",", "d"}], "}"}], "]"}], "\[Equal]", 
    RowBox[{
     TemplateBox[{"PlanarAngle"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[PlanarAngle]"], "[", 
     RowBox[{"{", 
      RowBox[{"e", ",", "x", ",", "b"}], "}"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     TemplateBox[{"PlanarAngle"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[PlanarAngle]"], "[", 
     RowBox[{"{", 
      RowBox[{"a", ",", "x", ",", "b"}], "}"}], "]"}], "\[Equal]", 
    RowBox[{
     TemplateBox[{"PlanarAngle"},
      "InactiveHead",
      BaseStyle->"Inactive",
      SyntaxForm->"Symbol",
      Tooltip->"Inactive[PlanarAngle]"], "[", 
     RowBox[{"{", 
      RowBox[{"e", ",", "x", ",", "d"}], "}"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.830272014498757*^9, 3.830352158936158*^9, 
  3.830352240662992*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"a6809279-0fa4-4721-b367-c573e22b8d48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindGeometricConjectures", "[", 
   RowBox[{"scene4", ",", 
    RowBox[{"GeometricAssertion", "[", 
     RowBox[{
      RowBox[{"{", "__", "}"}], ",", "\"\<Collinear\>\""}], "]"}]}], "]"}], 
  "[", "\"\<Conclusions\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.830016632608533*^9, 3.830016666091819*^9}, {
  3.8302719708307896`*^9, 3.8302719964468975`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"d68fbd39-b198-4db7-94cd-a8bc602c7c88"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"GeometricAssertion"},
    "InactiveHead",
    BaseStyle->"Inactive",
    SyntaxForm->"Symbol",
    Tooltip->"Inactive[GeometricAssertion]"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", "\<\"Collinear\"\>"}], 
   "]"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.8300166443843517`*^9, 3.8300166670984592`*^9}, 
   3.8302710052543545`*^9, {3.8302719797021456`*^9, 3.830271997198769*^9}, 
   3.830352159151882*^9, 3.8303522429942174`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"a9a0276c-64b2-4179-b08c-28517f67a145"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8e04a919-8efa-44a1-a322-3bde9fd3ff2a"],

Cell[CellGroupData[{

Cell["\:5e94\:7528\:5b9e\:4f8b\:ff1a\:89e3\:9898", "Section",
 CellChangeTimes->{{3.8302710128944798`*^9, 
  3.8302710278945665`*^9}},ExpressionUUID->"6072b634-9255-4cbf-b19d-\
e31acd959d48"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQeYFcXWrvGoB0V/FVSCAeSYxR/BnBCQLBkJkjOCRBEQEBREyVkyCCoI
SA5KECTnnHOOomAOR5jpvu/t73bdZmb2ZvZm7wnQ63mYp+ldXV216lurvlWp
s9dpXq7Bv9KkSfPODfwpV/vd/C1b1m73+m38p0Kzdxq92ax+vWLNWtV/s37L
5+tcy80Y/v2Xf//32gogdiqRQOWPlMSGKNHOP7n1nVolkP6Tu1yJlWjjMNTy
RDt/X8ITX/++XA2S2nHu9/u+JEZSO86jLdG2I99Ok0ZSO84Tz4RTV718iaz4
eAgu0bYj306TRnx9Bhcf51e2XLhwQVrl4vz58zGO/NeRf/75x1z8+eeff/31
Vxj5h9q+ySXRrlcYqktQoO40kwg8f2kdLv74449I5X+lCk2A3gD533//LaWh
Pa7BNvdR4G+//cYF98E/9y8EkPMhSqD4K1I4CTXuS12Cz6FpaCM0c+bMmVOn
TkUeGVeWCKK2A2OuzX0UyJ1Yx29w/+eff/7pp59IGSoOAyUItWVjQpRLlieV
yj+OqFHOnTvHHTBv+TwnESIU4atR1++//w6k5dvhKr/88gv/RZOxjqcNAz9e
rCamHUPFbWLK4y3D5akqRYjpVdVYKEfI9yWICAk4aoCN6iZOnNiyZctq1ar1
7t27TZs29evXr1OnTo0aNbjz5ptvtm3b9q0A0jSAvO2Rlh5pEUBaRUi873r7
yhJqp4u+ffvyd/v27Xik5MZRShd5S4Wcv/76K4jNly9f7ty5X3nllX79+u3Y
sWP//v3r169fu3bt4sWLx48fvyyALAog8xOSb7/9dmGI8l2IsvhiMeVZHEAu
M/9LSqj5B5IFCxagDXQ4d+7clStXVq1a9dixYzj25MZRShecOf0gzETcu3v3
7qtXrwbzs2bNqlu3bpkyZUaPHn369Gk8hoL6QHFlIB4S513mOlQenhjOkyD/
SWSkHCr/DzXuDjX/QEJFYhwWx18i0KJFi+KdLJ+fJ0LAucgzZK927dpLliyJ
dYZc0CTOHAJTuXLl9u3br1q1SikTlEu2b6CBmkRKqHGrqV0clh6qvaQ0UdVw
O/IJxYoV+/HHH33eckmJcQZVDBQbNWpEtwg+Ud1PP/3EX6F91KhRUJpKlSrN
mzcPN2I71kEvIPdCeiJWDbCL6qtF9KvXAQppgq5eHWqgGkcoxu+O8NLz7sCy
Bo5MGm99A9lFpHAYKVGRVGZzU//V8C//5aJ06dKnTp3y2rUvCUognHNNhyio
o0+F9ufOnevUqVP58uW7dOly6NAhHofYA2+eJRmQs+3/N3qjnM87I5YSr8/n
qUjhXEMNBhgCg8pg+gJvn+Lj/OoUNb2BAU5bOFdkKlouDsPfs2fP0kuePHly
xIgRREDvvvvumjVrSPbDDz+QFUaBLWjyghzk3slT45O//fYbP8nJRxDnlArr
o5AxzjSuXqEC/OOKMS796uP8KhQvzhGDc5Ap+iG3zF9wC56BCqDiEdBL1P/6
66/nyZNn2LBhR44cwQSEYUW16hQuuOsKbMfDayGB5VCXiOBchdcrlKHl8qIE
Z2x9nF+dkiDOuQlWNaIObjVtJKicOHGCn3DOsHQcODkcPXq0a9eurVq16tCh
w/jx4w8cOCC1Q3vw/6SB82h5jKi7eodI4Xzfvn3kjFXyXl7EHa5tl4fHQU4Q
uSxQRkF8nEdWvPRVOP/uu+/khEVdvM5QiUE4iLrgzMedcYR8du/ePWXKlHbt
2tWrV2/gwIFi70IywKYjOH36tNhFZPk5b9m6davqgg2SM90Kb/fixCs+zq9O
MUN/8uqNGzdOEOfGHI4fP2474SduUyQcvy0m8/3330OVDx482LNnz1dffbVp
06a7du0C4WIL6hSUZ6w7FHP5YOOlw4cPL1GiRI4cOUaOHMkdwgdZU0ijkYHy
D6S3MIoakvg4j6wEwrkwKYKha/lh1ItnhrfwE54TZiIrEOxtZ40okIauTJ48
uXbt2u+9996kSZN27typlLxFzjxSOC9TpswDDzwwY8YMeAvBQtu2bXk7xiiz
ij+e7+P86hQ1vWHpjRo1WrRoURjzNYHaa8GCBe+//361atW6dOmydu1arECE
R13ABWc9sALJGHexli7oGrwNGuOZgtSSM/5OnDgxY8aMQ4cO5VdMb8eOHU8/
/fT27dvJHEOLddav5suXb9u2beSzd+9e0a3zznpjDQRpyFQQkjnb7kIpOyGS
b7k8X0X13o9/J0o4N+O3lLZkyZI+zhMj0ca5hmhw5mCyevXqlSpV+uyzz+gI
DJkx69vVuCSGCAmBF5wxfEQXsc62glhnHJ7ER44cefTRR1966SWepTehy+Bm
pkyZ5s+ff8FZs0qA/OWXX950002PP/44r6Z/gbfzOssZdaRIeiPMR2jHNDT5
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
ztVjmsE0bz5XDM4VrorbxLo7QEEU2mjcuHGtWrW+/PLLY8eOabxFw+k8QrSr
+SbL+eoNnl/HAhv9GFqY+JL4OI+UWKHj3CypslInzr1lTlA0SiO14L0hMDp5
Rpu1t27d2rNnz9q1a3fv3n3z5s1aV0MycXtNwppT7HRsnZmljQ2wbzqI+DiP
iFiJxrnlmWqMg3PLc6J4qKhLevHWPVACb130Xx2LB4Ch4iAflj5x4sTWrVs3
atRo7dq1Gmy03RUyimrl8NUvmLnaIO+9pPg4D1usqw/nlxRzuK5OJbrgfl9M
w5JAHa+uhfGgfe7cuW+99VaFChV69OixZcsWwQ//L9JuXfyhsUQWwKtzr/g4
D1usRODcq/8E+bl1ZeHc8nwU23IgZM5sMTOhePWTJ08acn7ixIm+ffuWLl26
YcOGixcvtp3jX8TzjVfXqGZiVGS0Gkd8nIctVuJwbrz31YBzhZ9i6WZeST8J
/PpJddfxSjoQiWRr1qxp0qRJpUqVhgwZor0b+vqezlZK5KCit3W84uM8bLE8
OLc861q5aNWq1axZs0wy62Kcx3rOw7GuLJzHBpBA6c0qWdLoXKN169aNGTOm
YMGCDRo00PJd85VtYP+zIwp1RYc0jWW0anlOgFdfoAJ4W0oJdBSkfjInGPgS
Xywf55EQoQ5MAmC5bn2k7Ntvv23atGmpUqVw7/ykYzFsZ+zdDDzqlHVpUhxJ
XYDwrwMepVgf52GLlQicm9a0L+Yt3kyuZpzHej4HrA8TxDrznkSpkBkgDWMf
PHhwvXr1iFh37Nihw9UvOKfn6Tgv0oNnL4G0Lh7I1YvMoI3l4zxEsXycX7bY
jh/WtSJWeWkdjmfUu23btgkTJlSvXp1YVSfj6aQO0K7zOrzzSrHuQZeWEy8o
cx/nYYsVD+eGBwrncRr0asB5EF0FSh8/NpdKz5w5ow9kg+Fjx45NmTJlwYIF
X3/9dadOnerWrdurV689e/ZoI57OQbWciFLj7bHuAksf55cvVuJwHme8xTvr
YV/1OI/1fIfae1Ne2nbObDx69Ch34C0Am/8ePHhw5cqV/fr1a968OQR+6NCh
8b2H7R5x4OP88sXycR5PQh1vMaTay/osh8NATnR96tSp+fPnFyhQQKOUgjSx
KtHo5s2bW7RoUblyZa3yVQ4X3K9viwXpRT7OwxbLx/lli2EscSb3bedUGV2A
8+HDhw8cOFBfitdZ0zoo5vjx4xCYPn36WC4F0ii97QahPs7Dk/OeT+rYLkr1
0wX34H3+ap+F5R6HZTur+i0P5o0kHaRSlWiN7rlz5zR+Dg4PHDgAmcHJo0+Q
r7FxbKFixYrbt2+Xozh/8WcyvHzGitd3mPbiqdKlS8OOkhBHKV2C49x4Zh/n
lylm2BBCvmLFinr16p08eRIPfPr0aaFU3535/PPP+UlbM8wwi+3j/LIl8Tif
PXt2rLvvzPZxHqLoYFL89p9//tmhQ4epU6fyX3EVmLk+DYkhlCpVavfu3WYU
MQ7ORde92UrnBuex7vYNH+dxJBDOLc/SDv62bNnSx/nliBa0AOydO3dCWrTn
2uxU5QL8z5s3r0KFCraz7ivWnfTU4+a/gdY6xno+JqX9oT7OveLjPGnEdobN
JaNHjy5SpEiLFi3Gjh2r05CUhjt79+798ccfbfdzk6ZpYtxvT5sA32jbpNSY
gIbcfZzHkcTgHPFxfpmizXSa9ERLBw8eXLJkyfDhw6tUqYJ7nzlz5ubNm4sV
K6aPv+gcMD1ou7TEZCWoG20b5MfB+bFjx5IWSilafJwnjSi01DFHR44cEVfR
0qzt27d/+OGHadOm7dix4/Hjx7X61zujKl9tedh4nAg01t12bXBetmxZH+de
8XlL0oiW4Opw9e+//14RqAbG+XXfvn2NGjWaP3++7UyYaoGiHrR9nEdCgoy3
eHHuj7fEEe2VQzkHDhywnDBTBxbZzoyP5ehEu6H1uYETJ05oSS0wFksXXMkB
/Hfr1m38+PH4eX7lzrlz57zBppeTm5tG26aN9Fe7n3zeEkd8nIcnWn+o010g
HrbjTgn9+vfvv2fPHstx0aho27Zt5lws0Hv48OFff/1Vi8y1QAvBQPLly3fq
1ClshzTEoWaRucSL8zhxqO2h6D7Og4iP8/CEmmpgREep8xc8161b95FHHtm/
f7/tfDP6+eefr1+/vuV8Y1Rb/kG4JkZj3cO4APzQoUO7dOmixerchKIbMEtC
xTmZ+DiPIz7OwxM4huX4c7y3voIH/Vi3bh3hZJs2bUA1+nn88ceHDRsm9KJG
fQ5GJ9QhAJu/oLF69eq4dPlz/truPlPzriC8xfaMxnhxDj/HXpIIQ6lBfJyH
JyhBPFxz95rrBPYTJ05Mly4dP23cuLFkyZLAWEfPAXKdnf7ee+/t2LFDg4fo
cOrUqe3atdN/sRTxc5GiBCVO81nuscCWaw4+zhMUH+fhSay7G05spFChQsAY
VAO5vHnzjh49euDAgUOGDNGIihacYw49evRInz79ypUrbWfbBb69WrVqW7du
1bet9TFH8znUBCVO81kJ4VzjLT7OveLjPDzRYLjtrIbNnz//9ddf/8wzzyxc
uPDQoUObNm3Kli0bDFmfZRRPbt269QMPPECynDlzkgAwQ+9JD4G3nYl+fRHG
cr8geckCGG0b3uLFebly5Xyce8XHeXhCxUEmjlTR6IoVK3LkyJExY8bKlStP
nz69QoUKeFQoSuPGjYHcjTfemDVrVpD/7bffSkVoD4afL1++VatWKZKF0uj4
ozjkPP57E4xDbTdE9XGeoPg4D09gGlQWRg1EQTu8mpvz5s0rXLjwtddeC6pf
euklAtKPP/64Y8eOc+bM2bJli/QD1YHAoL0JEyZgFCdPntSuItCufUMaWjeT
PnHOqYt1T/W33e0bum97Zp00ruif8+8VH+fhSazzETqtQtRcD6ybYBOw9e/f
n1D0mmuuueGGG6ZMmYKXJiUw3rBhgz6kfuDAAS5atmw5duxYiI35TNI/Honx
iHeYUeA3qrZ9nCdOfJyHJ3v27DGfje7atWuBAgVuueUWqAt4fuuttyAwmTNn
7tevHzevu+66Vq1aHT58WIwCukKapUuXVqlSReu1dF6c7VB9M7Ru3HgcDuPj
PDzxcR6eaEvmjh07vv76a9g4oWjx4sVLlCjRs2fPzp0747HTp09P7AmfGTBg
wH333ZcmTZo333wT9mI5a13q1q0LjdfqRBEV28W57dl461Wvea9Z+hLrrkRS
Ah/nQcTHeXiiUe7/uqIDtQAwXnrIkCHAGxinTZtW7pqQcNasWbly5QLty5cv
//7772vVqoWHR3s6d9ew8RjPVyDjx5uWj/Nwxcd5eGIGukE7LF0rr7755pvn
n3/edsbGufnwww+3a9eOC0yA2JP7ixYt2r59u5i5SLuULEojBcahK3EUG+uu
XbR8nIciPs7DE837aF+nvlsB5kHXvHnz9I1REuDDs2fPrlGUs2fP6gOjUJra
tWsfPHiQa3KQJxchlwLjn8sa570x7gf+fJwnXnychydbt26dMmWKVnBpxn/j
xo1oSSfL4astB2+ZMmWaO3euvlKkg3Ah7UOHDsXJc1Oz/Obbi5bnO5WB9Onj
PDzx91kEFwMqRJuXISr79u27+eabX375ZZ2+IiWImchpg3wt9GrQoMH7779v
O8jXqpVq1aqtXbvWdo4StZzZz/PO0UNG+fFV6hXveIuP88SLj/PgYrvnNfEX
J8xfUQ5wjksHq7t27QLVljPFCdTx8HhpbeQn0pw5c2apUqXMl3NHjhzZvXv3
X375BZ6j3RZmi5x9KZyrPD7OwxMf58HFdlyo0QzIxDPjq1955ZXjx4+nS5eu
TZs2YuPa9UnKkydPWs6GI/C2d+9eiIrm9MF/vnz54OdmFbri0Ph7nM2rvVrV
Tz7OwxMf58HFLJGyHSDpBH60sWLFCkLOXLlyZc6cGRJeo0YNyIw2BClE5YK/
QBofvnnzZpQ2YsSIhg0baqRRkamZ7tS7vM5cd7xajfUsBtBNH+eJFx/nwUXj
2xoD0cdAQXihQoX4CZ3AW77//vtXX331iSeeyJAhQ/ny5ffs2XPs2DFS4rdt
5/wKEpDDr7/+WrVq1XXr1ulT6RqisTzYjnXFSgjnxpP7OA9PfJwHF33KWQjE
OdvugAnoLVq0KMRj48aNwB7QcvOhhx7q06dPly5d4Cfc79GjR968eZctWwYh
X7BgQdOmTcmNTMzp/TIcr1gXH7FrrgPh3JTT9nEeVHycBxdzapBYOgykUaNG
MG3AfO2117700kslSpTYuXMnPw0aNKhXr16Q8w4dOjRu3JgH+/XrlzNnTrEU
FDhjxoxYZwI0xjkajsx//vlnw0biT4B6VWpwbsYVbR/noYiP8+AiBAJ1OfOe
PXv27t0bD587d+4zZ85Uq1btjjvuuP/++z/44AOutTmuSJEiIB+wYRFTpkxB
RVB3uI0W8fJf7R7Sroo46xKtoDiPcc+v0H0f54kXoxzz3xj3AHmNHgjVb7/9
9tdffx3j7rS1Lt6uZXLw/tfy8MzUKyhBOykUVEJIDh06NG7cuDFjxvzxxx/4
8K5duw4ePJhQ9Oabb+7bt+/48eOxhRjn0K3ixYv/6kiTJk2mTZumVVtaKoBF
WJ7jE70tEuiO4TYJatuLfy78fXNxJDjOLcer21cxzqEoVBPfyMUnn3wyatSo
mTNnpk+fHkIyYsQIeAugRVFwb/772GOP/fvf/9aZEh9//HHnzp25AG+lS5cW
6jSWqK9U2J7FWla8dSzx7ySIc++YpI/zIOLjPLhccD9QS1z55JNPfvrpp1SK
6zp16oD2bNmyDRs2DPD3799/3bp1BKfFihXD54P2AgUK7NixA2cO4HHy+qgK
XYD5Hq5GcoIMmMeRODi3Lt4Zavk4Dyo+zoOLWC44X7lyJeQkQ4YMNWvW3LNn
DyiFmXTq1Clt2rRQ9JEjR6KucuXKEagC6UmTJlWqVAmQw1Vw5lAdMRajOrEX
rchNJM4lcXBuIlPLx3lQCYJzLS7y4lxavapwLmMXSwec4BnWDeBr1aq1cOFC
nflZvnx5cAWqixYtCvjRAFEndgGSIfBt27ZVVvLkZthEa3Gjh3P/PC6vXBLn
ikavWpyfO3eOmBFCcuDAgfPONxAB9tKlSwsXLpwuXbo8efKsXr3acgwBWt6l
Sxeup06dWr16dXw417ly5bKd7dIwFs3yn3e/YaE9zonnLZLE4JybihHi5Hk1
SyCcW+6R3T7ONaKok5xBLBdaMQ6SGzVqlCZNmooVK/LfRYsW/egIznzJkiU8
O2TIkClTpmAj2pRh5ncE9UAgD16eS+LccmIKH+dxxMd5cKGaEBIugK4Z6Aal
2tqPl960aVOhQoXw7SdPnkQzy5Yta9KkCaZx+vRpvL2OrcA0RMWNJxcd8irK
SPDyJIhzbxxq+ThPSILj3Lo4Dr0Kca6PIUJUsmTJsnfvXhNO6vtxUhqYb9Om
ze233841Hn7ChAmkmThxIkrTXCqZmNES76xQGPrx+v9Ydw+dd7GZ/uvz8zji
4zy4UE34Sc6cOWvXrq2Prehbt/rSEDRGc6Dc7NOnzyOPPKIj/U+dOtW8eXOo
Oz/pc88x7q5P78xmGOXxcR6e+DgPLvDtyZMn68QhcA5uFyxYQLxZpEiREiVK
jB49WhslsAUu3n///c6dO6OZLVu2wF7Onj0b6yxoURov1L3MPCTxcR6e+DgP
Lnjjtm3bAhuu8dL46hdeeAHY8/fuu+9Onz79008/rUPnsAJYSt++fdFbrVq1
pk6dKtVxUyfLXXC/fns5UPdxHp74OA8ua9euvfHGGz/99FPLGQAfMGCARldw
4MSnY8aMyZo1a6ZMmTAHhaWoBYefN29erbnF/+tLFj7Ok1d8nAcXlIAbr1ev
ns55btmy5ciRI7VLYsOGDdzZs2fPo48+OnDgQNuZQca3V69enTSWs8dZk55a
0+LzlmQUH+fBheqcOXMGunLw4MHChQs/+OCDNWrUMEesyF2XL1/+q6++0p19
+/bVqVMHfq6N/xpp15pzPw5NRvFxHlzw24SiVBmWQn179uzZrl07sH3y5Mm5
c+dCV4BxyZIlN2/erHVZxKETJkyAwPzyyy9/OqIPEvnjiskrXqza7t52KdOL
c/rrOXPmSMPaf2E783rmtDQ1ou2uVzdz0JFBW/KJeLUwbDlUBORzp3379pkz
Z+7QoUO1atWGDh16/Phxnc0FMz969Kge/P3333XootmRZOjK5fBzqddy5oNM
IW13u6h0ThcDzs0dX3ycBxcttdKAie0wcEBLTaHljRo1eumll/r37y+EQ1QI
V0ePHm2OoQPn8urn3U+FxsaTUMvj4zw88XEeXAROzRBJXdoioe1FOkGUv7B3
LooXL85fEn///ff6ciKihRM+zpNXfJwHF9VLNbUcaGlzBDjXh87x2CgK7z1l
ypTatWtr3zQEXpvjtL3Cvng+1Md50ouP8yBiu5G1WSt+3vmqOEoTIdm3b5/i
8R9++AFo4czhKhpLRHSokXf9rY/z5BIf54HElD/WGdaQnHe/IqRNzXDys2fP
Auxhw4Y1b96clDpuTl5dDMdspvBxnozi4zyQGBWpamY80OwY3bt3r+UMPOLM
CxcuvHjxYvlzDc7oY+i25/QJH+fJKD7OA4lRkf7rhaVqB7y1mW7lypV16tTR
ADt8RhrQ3JB98a58H+fJJYnE+dtvv/3NN98YrV4NOA8uZscE8G7WrNmiRYuo
+PHjx3Uwi47x50IBKUGrAlJ96Jk0uP3z7l5Rw2piPEcVBXqv7e6kMH+Nzn2c
BxEf5+HJ4cOHBdE1a9bky5cPun7y5Ekd+Kwxdp0pZztuP8b5aJeYjNldri9c
WI6312yUlxcFeq/t4zws8XEenhw5cgTogmEi0HHjxp06dQoYa/s/f7nWDgu5
fQ0w8l/L4fM64f+C+3U5M99q4lwf5xEXH+fhCcRDx7M0aNCA8PPMmTO6w0WM
s+s5xj3YFuoi1w3CuRak9a0iOf+/HRHshXPD5+OL7eM8LPFxHp7EOsehd+zY
cfjw4aqyFpyDefNfdHvgwIHGjRtPnz5906ZNoB22g6u3XYQbnRt1xTpzr1pL
k6DYPs7DEh/n4Ql4PnjwYMGCBfUNC2jM2bNnNWCubXTcnzNnTq5cuT7++OMP
PvigXr16q1atwuHroIwLzjkw4jDgX6e7aAYq1j2nIkGxfZyHJT7OwxNcbokS
JZ599tkZM2bs3bsXoOq7FdoNKlretGnT6667znI2Ir3++us1a9a0HK1qmS4c
ZtCgQVoYY9YGmGg00HttH+dhiY/z8ITAs06dOtOmTWvZsuUbb7zx/vvvz507
d8WKFRppQQknTpyYNGnSwoUL5bQ3bNiQKVOmH3/8Mdb5LgZ/QXi2bNnat2//
1VdfcW1WC5hR9wTF9nEelliBD9/WCJjQ3qJFC50janlwrqlw29W8nvJOf8TJ
NjWKvocoR205NTp69Ch6GDNmzLvvvqszKxYvXjxz5szBgweXK1euWLFiW7du
1SO//PJLjPNxFqRSpUo5c+bEh3Nz165dqKtPnz4333wzuXXp0qVQoUJt27bd
t2+fbAQKxIVZNqBtp0b5ahdFsrbzPVMdmuQtNt3H8ePHfZwbsXycBxVVUw7z
zJkzse4BZfnz51+3bh0k/OTJk7qjQxTnz59P4AmSgTSJ16xZs3Pnzt69e992
220AWyvVLWd08d577+3UqRMQXbZsGQ/27du3ePHi7dq1w4K0iQltw4V4O32H
7ZzZSx+hERuxep7lv9J8HKrj4zyOWD7Ogwp1ERWxHSSLVPTr169y5coaEtS3
cYU6lNC6despU6bgkIE06C1atOgTTzyRPXv2ESNG6JOLPMLfXr163XXXXZAZ
2OD//M//AHgwTCbcgcaXLl169OjR7733HmrndeRmolQueB03dZS65fQ4ZvWv
KTY4h7cY9uiL5eM8qIi3aLUtonNEX3vttW3btmkyyHY+jKuPnpMAn3zo0CE8
MLoiMW556NChjRo1QmlQFM0BodJ8+fKhUn59/vnn8+bNO2rUqBdeeKFDhw50
BLzryJEjkBmC3CxZsmzcuPHAgQOAVid98YgAr88b6XRT4dxbbPlzH+dGLB/n
QcUMbsc6G//B8JdfflmmTBnticNpK67UXOfSpUsrVqw4fPjwZ555hsSa1p83
b961116LLZAG/HMTMnP99dd/++23hw8fxqvrhNKJEyfedNNNtWrVeuqpp1A1
/wXDCxYsAPlqC7LCmoB6rLP6V4thiAX0vXUvPye9z1viiOXjPKjY7oLDWHf/
coMGDWbMmAEx5iczHq49pPXq1Vu+fHmVKlUyZswIhkkALKEimTNn/uGHH0Rm
wDnhKm4cQ8AiIC2FCxdGvVWrViVnEEs0+uSTT95www0Qe5Fzy1lmAG4JeMlh
//79dCVAnZ9IcM4RH+fBxfJxHlTMUhMNg+grch9//LF2z2kcRku2cPX8hBN+
7rnnBg4cSGJBtHnz5oAWu+COZpceeOABLAUTePjhh3U4BrrNmTMnTL5nz57E
njj5OXPm8LgmRrEjrRmoU6fO+vXrAbC2eFAMfXva8qzRtXycJySWj/OgYlRk
uVwdZj5o0KA33njj7bffnj9/vr4CACC/+OKLt956izQAuFq1akSjkAooN6Al
qNSzQJ0YEyoOtseOHXvrrbfC3sHzuHHjuAmGMQoAD6sxCOdBiL0KQP65c+fm
Di6dt1x33XUwKH1UPcb9Conl4tyPQ71iBca5WlBop01nzpxpNr+bhXYG5/En
hmIv/or3FSagffbs2W3btoWEDB48GNvv0aPHwoULtdti9+7db775JoiFn4Bn
TeujopUrV6ZLlw48o1uc85AhQ/r06VOqVKmHHnqoadOmWrJYuXJlnrUdUoSY
lY3oE5zfeOONEHtygyPdd999mzZtoo+w3A3atjMOQ2HKly9PRJBEGEoNYvk4
DyqB9CaeAOsG0sOGDStbtmyOHDkOHDigsUfApuF025noIWKFXaxduxZH/c03
33C/X79+3ISNkxhvT6AKvIsVK9a7d+80adLAjlA7zIRXkJ7EP/74o4555C3a
fH3NNdd07dqVHEgJF3rttdcIWsE88OYprG/Pnj1qQV/s0HFuOUs7fJxDGyxn
AERTP5Dnzz///P333wfwwH7jxo3nnS8CaLKSBLD3V199FW6D9viVjgDmgyeH
3hQoUKBx48bElTDzTJkyEcaS2BwOg+2A4bx585Lyo48+gs9DSHDpd95559Sp
UzGfWbNmPfjgg//+9795b6wrRYsW3b59uyGTvlih41wbvuyrA+eBRBwDeING
wAZENawNY4e9N2zYsFu3bitWrFDdsYXChQtPnjwZHW7ZssV2ohjwv3PnzgYN
GqRPn75Zs2ZawT5p0iQwjPngwLUpTxOgGzZsgNhUr169e/fuvKJIkSJwm7//
/hv//69//QsKhJNft26domZYDb0DRTJrA3yxguLcclZzgeE4OI8fh16pOI8N
IESU4sMi5LYDXVFlEYmRI0cSvMM0xowZg2vVEQE4/GeffbZChQpgXhOp/Fq8
eHG8dJ48eYgx77333sOHD6uPgPmAWOgKf7V3yXYW1GEX2bNnJ3OcNng+fvy4
qLiWzXCBjZQoUYKbvj83Yl0K55prQ730jz7OjWhkW0e1aAORAA8mNUcpK1i2
bBkut2LFisSbKFC750A1EWWNGjVg5hkyZBgxYgSYxHDgM6QkPZwfS9EH7HgE
5OvUL9w+YewNN9xw11133X333S+88ELr1q3Fw7EC7TmF21MASBEdhI9zI1YA
nFvOoJZ1Mc5j3ZW3cXBuJ7QQN3XhPBCeA6UXtMzGCqH6vHN8tFaeSHtm2cmc
OXPw7Q8//DDdIu5do+5Q+qxZs3bo0GHTpk3AEqYBRNUpxDjf/yI33gJ6iTGz
ZcsGJ4e3PPXUU7Vq1WrXrh2vgPCTJ449c+bMQ4YMwfS0FIcwAWMhqyQBUSoQ
y8e5I6HiXMDWYVyWy+60htxyv66rOVOzwp8E+N533nmHIBQCs3DhQk0ATZgw
oWbNmuXKlQPw0Hie0mJFkE8QSo9QrFix++67DzPBV9MF3HrrrWvXri1ZsqR2
LfGK1atXV61albBUSyuxC319I2kglKol1lmnZ7lfywXns2fP9uIhifB3KQmE
z0hJkFeb8ygsz6n7XtE+FO2e0JcvRD9A4IwZM1q2bAlW4TMKOZcuXQoteeWV
V1q1akWy9evXf/TRR7ly5YK3N27cGCQrzgXwEB5ed9NNN2E1ZpJInpxX6F1a
TpbcIEoFEgjnKQ2HgcofntXEl+AqinE/S2G7JzHGr7hWgsnh69vQmvoBlrhr
HHvdunXr168P8ukd4DzEp8C1du3an3zyCSYA5ok0bWcCCPZy7bXXrly5Eobz
xBNPfPjhh1rQpYhAKxN03Hr58uV5Knj5fbEjh/NoS3LrKbFidrpp8ETWYY5q
QbeVKlWqUqUKF8eOHTtx4oS+hUFKLXokJVyocuXK+fPn18FHUPSMGTOSxnAn
hcPqRODnRK+pSD/JJZHCebTLGe33JqZqiXyjd++bNtNpx7S8MRBdt24dYWah
QoWaNGkCb1Hsg9uHqENLVqxYAWkZNGiQ1sDDZPhv165dSaPzS83HCMi2RIkS
+/fvj5QSrmDxcS4JQpkszwHp3v9eUhuWJ0gH+RBsAkxvGLtkyZKXX365QoUK
xP4KJyEtePt06dLpGuF+wYIF06ZNO2fOHH2i9IL7DQL+EodCiiKlhCtYUgvO
Q5VQyx8I5DEhfp/C++AF56A5jbRrU56+9mKOW9Quua1bt/bq1atAgQJvvPHG
zJkzcfUDBgzAKARggP3VV1/dddddefPmnTx5sqJdDYVxAW/Zt29fcis7FUhq
wXmo+AxVEmMC3juB0tju8SxKYziMvpkOPkG7pkF1MJ3INoyFaxgL7L1o0aIj
RozYtWsXOezcuVMZQmMIS82RR8qc/5YsWZKUSaD/1C6BcJ4YAEQDb4HkQogS
av6B6mV7GItXaQlKnJPl9F8dq0smZmWj9lPrjCME6IJ/KI3tfAVp4cKF4Lxi
xYqdO3eeN28evEW7k3iKvwo/ZUpkUqpUqd27dycHcFKZyKXwV6u5iIxmzJhh
TiWKL4mEfcQlVNzGhCiRsgtTVGV7SXvUuV6aHsUQtHzx7NmzW7Zs0bp3AE8Q
evDgQQ2eW87yLQN1/PnevXv9ef9LSqzjKs3SxKZNm06aNEkEMkGJ03wGJ5FH
dkLvTTw+k1er8csfKGWM+4lnM4piu4OTRJ0g/9ChQz179syTJ0/9+vXXrFmj
fdnYgmLSypUra1I1qWqWWiXWpQSxzpEjzZs3J9ixQx/fiB7Cw5Pk4jkhdROW
Qxc1hHLB3UzEBV59//796mF1DgzX06ZNw7cDbLi6zpojfZkyZU6fPh2k//VF
on5TRBFH8eGHHxLya9F1gqKU/71YgpxvHG0JVK9I5ROqBMo2kI1o+MWMNNqe
I6NlApZjOzo7nYujR49269atWbNmAwYM2LFjB3Gr1hhEqvxXsCi0ueDsJvjg
gw9q1KhRpUqV8gEEf/JGPEnwZmSlcgAJlL5iiBKovoGkXAAJVKpKAYSfKlSo
wIOvv/46F96aVqtWjYbQ/GnNmjW5U6JEiapVq7Zu3fq111576qmnbrnllhdf
fBHfbo5Y9yWQKAI1gfzq1avnzp07a9asFQFkkSPfubLIlaVRlmUBJFD6lSHK
mgiJyTCQAhHve/nvqlWreJC/qg539F9vRfiJvxs2bEDny5cv16kXa9eunTdv
nvrT5MZRShdNZGiNnObs1AkGYZXx+acVOh8OVf4JIIHSnw9RQi1PpPIxn2W0
L14wJqIu9eKFFHva7m4m7fWwnDXV3PF5yyXlgjMMKx4o3y6iGFI4Zkc/Dg21
XtEuTyLlkuWx3V1aMZ4lkeaCdlGL2O5OAX1mneszZ85oEB7M+/7cSPBRgvgS
Z9wgkF81oWgi7SJsCdVPpjRJ7Dj+pSRQhsmNr5QicdxLnPtBHFEic4h8iX1J
SIK3UfD0iZFolz/aEohyJEYS429D1WeoEql+Idr5R1sClT+58ZVYiXZRA2km
SLsn2G8Gir+i3b6R4g+B4tmoKj+InkOVUPMPVc+RKmfiJdp6Dq6faLdXqBJZ
baSceoUqofL5UPOPNv4DZRipdgy15JF6b0qT1F7fS+InFUk09B8ot0uYX6I1
GalyBpJwxiZC8W+ppfxJg5PoSfzCR6rkkviaCS7B9RDZsiVGIqXnpC95ZCVQ
XaJd30jp34vDSJUtvFoEr1egHCLaoSWDRAongZ6KBEaCSajlvAolJKUF0nNy
4TBSkuoKHEeSDC2pVHy9SVI78CJe/uStTsQlUvWNuD+MI0mpE9ujlvAejEaR
fLl8iY/kq83ejUEFGd9IjAR6NsnKHyWJdvmTRi4fsaHaRXLZUaD8IzXuF0hS
i35C1VtqKX+CVUiCl6Y0iXY7Rlui7c+jLSmtfQOVMxpt55Vo6yG1S7T1H+3+
LlJ6CLRuOTG4jVQZUrJEGyeBJDreMfISbZxHSgIhNjH6Vw7B1/uFuk8tVIm2
fqJd/mjjPFLrOZNLIqXn2IRWFATxM5c0h2T0gdGQqHYWdvTHQ6Ktn2j7mUhJ
IIUEahdjaHEeT9CIguxHjpREux2Tq/yh2kugfKKNn+hoPVoSqj4v6ZeMHkJt
r1Al2v4w2uUP1CKhljMQDqNd/mhLpNoxjlouqT1TAMvdWyS/lEi1R1yi7W8D
6S3anidS7ZuMEE1REihyVCt7GYhEB5399ddff/755x9//PG7I7/99tuvHvnF
FZ3pHVX5JZkk2vWKlCSXfiIlkdKDl057/Vgch+mNWxOU+A5W6VO7P4+2346U
v4p2/sklkdKzF+FCTvB+MFA+oaaPlKQWPSdXvaJdzvAZVeIkUuU0jjFpYGkk
UvWKFB6SCyepvfypTlJI+0Yqn9Qi0fZ7yV2/lC6h4i1U/acWfx5tCbW+wfVw
JWkmshIpPQfXf+qVaOsnUv5c4o3Qw/MboUpyt09iJZDao13f1KK3kBs+RAk0
jhQ2wuMMl0W7/MndPomVaOshVP1EKp8rVT+JLHCSlT8SOk5OCbW+gfxMqPpJ
aXoOtTzJK8axJwFjSRqJdvsGklDx7MuVLdHGW3KVM9rvjVT+kZJQeXKoktz1
u1y5PBQnP96S672Ryj9ScnmtlHT69CW4JFe7pJZ29/35lSGX543Cx2dqwXmk
9JNa6nulSiDNR7td/Hb3JSklVIxFqv+NFM4T5zV9iZaE2l7JJaEWOKXVN0ka
05eAklztHqqEXdoUUt8kb1hfLpLkavdAEryciechKW2sICnb1JcrQOKAJxCu
UtrgWHKrzZfUIQarcZbJJSN0Q5Lk1p8vqVtCRVr0kJyYt/viS3BJ7fN0ya0/
X65MSW5cx5Xk1ocvqVgSg5/kBvj/kyTQhi9Xofh49uVqEB/nvlxJckm8RQm3
Ps59SYFySST7uPUlJUug8cZQ84mUn/fFlxQroYLcx7kvSSyXicMwEO7j3JdU
Jz6efbmqxMe5L7744osvvvjiiy+++OKLL7744osvvvjiiy9Xg+hT4OfPn//x
xx8ty/rrr7+4iHG+h67N1Bob1yekbXedjP5LYl3/8ccfJPvvf/+rBTO///47
2XJBgr///luPkO25c+e4STIS//LLL+ZbvdzkRUppXq37ZMU1f7n/559/kiGP
67PClnuOAT+ROT95M6F4vE5lVtn0ajIhDZnz9+eff1YhlUxf0ZVayISbYaz/
CbSOiCrwIpVEL6LMejullWb0uW1V1pRcVfZWVhMW2guplwaZv/jLEd7obVZe
QfVRBf/ljSohd5SVEvAIf7lz8OBB7vBfikdDK1uK9NNPPwkAccqjtlNR9RSv
+O2331Rf7/dt9V89pfayPcckUjzeQiZ6kfBpPmETaruoRuRANdUKqrhu8lfN
zQUJ9AouqC9//+uIEgiW+mC0qbtecfbs2cOHD6sduabMtgNsk78+Nk2GXJOz
MhEapQ01AT+hLtN8ejuYF7ZJya8oR3+pF391n2yplBBOGYQ0cqAwPG4aTqiW
4YeqxsQI7fXDDz+QuZSmFpc2qBqFEZC4+f333+umoIiidC3wSNtk4v0gciD7
AqXSLddUlhx4C+nREv8lW1k0BTtx4oRwa4DKfaGCxGoO0qNJr42YFheq9S6V
VoDRg1z87ApvMfCW8OupU6fkB3gWSJOhwTbaUFaUh2yFtFCFolI8HqcVlAnV
FxiEQ9kUf9UiUqwaiOoLKtzBGKUZFUPQAmwokPtnzpwhf7X1P47wlByX7XYW
+mucKm9UNyHQ2q7rEzxkkqTn4ujRo3IFlMd83FyllZtSU8pYeIraoVW5JlXZ
uG7lbxouDJUGwhsaUIujMcpJjQQ5ORAZuNpUgJHnkUnK2FVBZSIdKmfpMMiS
jJMnT9IWvFda4q/ppgGSNKM3cl+q5hXy+ZSHliKNEGs7zoqUx48fJ0OjwDgd
iuV+l9yAU40lK1bbyREZd6quX5Yod8qvvMtkrrKJRah3DklMlXkcbZh8BDnp
XAVAyfJFgr0UbqzemIzt6blMG8nHHjlyRBACZrbLE1Rrk63RAMUQFJW50bDK
ICeDqr1p1CJqJhpXbkdencwNsEnGg2JEtuM2VQxjpCqS0UxIEghsttOvcXH6
9Gm1oOCtWssNco1TFeqkKNWFEqqXUedl+J7wYHq9BEWWhXtRMQQk/sru1NYU
RnqT35C/5RHZhfpi3k4xZFPSGI2oWujthrqY+qpsyhBsqDy0i1yQegpUoTyN
B5OnxY7UFmo72ZSEB2WMIQlVW7JkiYCnMhsGpVaQSxSJVXNwLecvtfNS2cUX
X3yxf/9+OU/1awIkKiX/Dz/8UPUVJgU8/Akeg1qY+qpIanp5cgGyX79+y5Yt
w3X/5ojsferUqW+++aZQIe8nJZOtcpAD/MUR0XUKo96Qkhw7dkytJkSRRsU2
vCUMf34hgMyZM2fWrFm8gqIuXrxY4Qnp1d+hGfRACXUTtMsTmr4JFRmoqGlQ
C60gZcYGPrekYcOG4tKyFDlzUQuuBRj1LPJOAuHGjRvPOIJrIg0pZREUEjul
JLSFHI7RlYCqjsYwSXXittOPCzAiJPyXplRbGxdkejdTjEOHDhkg8SCvRl16
KtR2OXDgQKlSpaZPny60qKjiXdJzrHu0l3Eswg/XPDVgwIBBgwZRawywUKFC
3377rTFJ0kg/pKTADz/88Hfffcc12QIwEWNDVlGm2nH37t0mxuRXEVrqfv/9
9wMPmlvNhHBdvXr1Vq1a2U5fLC8kJ6msli9fPnLkyHHjxg0ZMgQb/Pzzz4cP
H859ioFpr1mzZu3atZs2baJNFy1axPWWLVtEERWzmNAsJAmEt2nTpr300kv4
Ror93HPP1alTh0LScOp35BLlWnn7WUeoiCiW7Fdt/asj6gUUffMsaRL8aCmS
I0cOGkgGJZ4AwNRporQ9e/boLegEDO/atYvybNu2bceOHTK0DRs2KF6QIdCO
ZcqUmTBhAr9iBbQm/kcYGDp06KeffoqSP/vss1GjRqH5iRMn9urVi59Gjx7d
u3fv/v37f/zxx9wHLbxaHk+kl1rs3buXZDQEsMHMqb4cvjAvT8VLKYn6plDb
haply5Zt5syZtjvoYVAt21QEAQxoqRkzZrRr165kyZKAtmDBglmyZHnllVf6
9OljOwb7xBNPgBlRSgVKctFc7Nu3b+DAgXnz5pWDAnWVKlVq1KhRlSpVSpcu
Xa1aNfJ8/vnnCxcuXK9ePVVWj2OGpAf8Tz31FPqXUdgOEcKmcubMuXPnTt5F
28lRKI6QW+jatSuGgHr79u2Let9///0CBQpgjy1btnzttdeKFy9esWLF2267
rVy5crQdSihfvjz4V+Bgu91KqPoMJGPGjKG+CvMpXuPGjak7arGdfoQ30oK0
QpEiRbAC/S1btiwae/LJJylqsWLFXnzxRS5QF/bywgsvPPPMMzgWEKVxg0Dv
7dat27PPPqsaGTJsOyRKrYPH7tixY+7cufPnz897eQU587oHHniAB4sWLYq7
UPAIPilS/fr1MU/UKPZeoUIFmpIWpOGaNWv29ttvU7XatWvzeIsWLRo0aFCr
Vq233nqrZs2aTZo0IQ1NjJlQBmoNcrhTuXJlbtL6VOqTTz6BErzhCC1OYYAZ
haEYIG3FihXUFKSZri3xwiOgBecmWqLAU3Ay/AHrfvfdd19++WXgQcl5e926
dXEmcnfYOKjDpYBz/lIM8T2NHvAsWCXqR10fffQRiMWWQSx17NKlCxij4TB2
2osWwTNkz5590qRJioux68mTJ69atap9+/aPP/447mLu3LlffvklqKacgwcP
vvvuu7/55htyxh2tW7cOlFIqEx/BlIC6Oj6EZym/7Xg2kVv+0mqUWbZD86mr
Ei/VmFKo+tweQDp06ECDLly4kGu8KOZJu+Mtt27dinOgkJSBwvfo0QPDxCXy
F9vEOYxyRA6Bvgl7wYVS9549e3bq1EldJKjrEUBoOJwSJoaSKQPYA2b41WHD
hgFvHuRxFIIh8F+aFd1SGIoE2vFsKBNjBOSQLsCGiwASGpnxegPj0/gv+qR2
WCVVM7RWKhXtFy1HCXgegM17wbDGEHgctPzv//4vBcC10qZ0skuXLqWbwORp
ayE2SLuYCBEbpLSoVNyJfuq+++4D5woZOnfuLHIoyie0k5JksiOE9kJd2KNG
LcQS0QZVA8Yao6ZTUy9JY+GRMIH//Oc/GCxIo9VUZRLUqFEDKCrEFgIxuvnz
54sxkhWOAktHw/i3fPnyYdo4XiwLq8cbk5g8MYGHHnoI54N+6PvEOigePSbv
5RU0H44dF4HfsJ0wRCHV6tWrcUcK5KmXBtxMXyYbN1FVIoWQ4a677qJrePXV
VwEYZabA9BePPvoohcEVc4HHoDqoi7bLkycPHEZloPpijLbL21UY6oJXBNu0
nSxRtinWLVXDwwEz0QqVxcBz5crFu9q0aUP14aW0F74CT0symB6dMk4YMwFs
IntkhTf+4IMPNBZE/pRN3Q1ca/z48Th8fI4Gb0UsFSWZqRPvfASqxsTErMhZ
dEsMVtASXSEBL6Kb4F1iiYoIaEoNgIhf2Q5b4CY4l0cyviu+YJjiEvgQOBuF
R5P8F9cKzqmRojCQgNfVSC9aNXMWxrlRFxSCPkG+EKVBVzJ88MEHYUFGDxqz
4hpYKuLDSHkX5qk4hZ/oB/EtykShJTCAHQlp/Becd+/endxwCBo5wV4oLe6F
C8VKPCi9ARgKLwMhQ1wZTUnFcaEYICaAPqkXid955x26Evp9CkAycIivI1vv
qNd5d/4rJJxTU5WW9lIcQUlwknRSdMH8RAFIgyNVwI668GCKQHkdfQo1Qre2
QyMVnnCNPaIoDZ5oOJH6Cjaa0BFO1BmhWLpdVKEy8F/y5NU0RIwzJ6VBYCgx
v/J2klFlvGvbtm1BPulBBZYilo6N4KlQIPqhIjJJ/qsCUCR6YegKz+IkucCl
ZM2aFddEX4n+sammTZvCT7iAz9A7y6fRxWtMcvPmzRidNMNPuFwwwH8piYJl
jUKDcxyg6h6kRczo95QpU+BOZiQTg8qYMSM9vsJhTAZXo/DEdvpuOW0yV9+K
ZvAPFFjxpoZENJmFHyOxGdzTADh35C1JDOEBTsYV8AhNT6gijcl/4pzh5yYO
RT94JzMIz8Xrr79O8agCRZXORXp5EbqlHyRb8WqIAQ6NR2gUfqXTx8dqZpCU
9CM4KJwJHphukVqjcHWpchcaCw0V52pEHBodLtdmnHnEiBF33HEHyFGBEfLn
7YQqiu4Vb/IrdgqhJYjTVItGKvDVVE3BuxpCQRBPKcBEObJNMXAqCLGx3GkX
23GJeruGjrmJa1JhqDjOBy+ByVvOuD3pwRXApglA5vr1600YC9iwIJKRoQJD
OiaACu2EC3EByafrIfaHkKBkujM6EWgqHv6aa65B2+pByPy9996jc6GrouuB
jMFj+UtT0sdpXNHMhnBNhwJKNfokMCco6qzhJLhi+i/hULOx+GG4K3cwcJQA
MeONVMqMO1Ej6YpHwJh6RimEHIRqFA7Lwp/HOBO1MgEzcEqxgRn9iO3MwEK9
ROABHsRGxEy54XJxv/KH5ImKcBf8hCeRC4KczJs3DzUShyqCo2yyFFw0Paw6
UBIPHTqUImEXGCZOBtcN/EAdOeMe1WV/9dVXmrjBvvCi6kfIk9ykzFBDe1QE
5GhiSIs6UHVw2BSvoKWomjjkggUL0qdPDzzUGfFSzVEi9KrwcPVf8lHE6fhb
DRSAEDEcDQrRpvJ7Gq9DGzxIUDl8+HDFSrbDaeU3qKMaUX2B0EvTgEwaBbdA
h0J3w1PoGV5n+krVi/aFfdGhUwx6B6EOZwV+xGCBLvZCnpom4A74VC/PNayV
PCkwBB7mif/H4YNG+g6u8Ut05bS+6KWhZHI7oBRj1KRGkHFFElMSOgU4LTXS
cA3Vx6gpCb5RixAwT3pYWsS7PgRjpHZgBhrMX1xf5syZIcaY4SOPPEIB+Ita
sGuyAqjQgNtuu43+DqCqgwOZxIzUggwBNteacYM5TJ8+XQ5EPg1HjVqELsoD
MsGMugaNrxYoUEB8iYpgAjQcVUAhZMhPuEGVWdQI3Wr4i+qr17adWAmfs2nT
JoUD6JwXEQXIN4pBxbpreBJUZhDwo0Yy4b34xqeffhpMarge1BFiw7UoMJZF
QEo3SvkplWGtqjI5QOCpCNck1owkMREZ4ngJzb51BNcHE7MdpoQAHvl52cWd
d95Jk8ES7733XlrtscceQ7FcUABaik5EMxc4ZzRJXwObxQGSOYCnRXAROFWK
RzHww2ievgCvDoHp27eviATqAiFckHLOnDnglrrAXmApGqIEsSCTutAWpISo
EK2QuRgLUSrej5ITcQMq7EK91aeffoq/whLlLdWCAIDCE3TLg5lh+fii6IYK
UirNkug++QPUr7/+2nhsdI5Lx2NrVB9tU+axY8dCeDBbonV6VWwWT0gtUDhv
R//4H7SK5tEVzpbqoBapnRphsNSRPguHjPmjFpFY3M6KFSvMqhU0cP/991N3
TUshGDtOhlaAMZIhFoqV4ROoL/+FyFEj2+kj0C3oXb58Odojc9pl8eLFWBlu
Eyvj/sqVKzFnbI30OBYSoBMKRk9BQ2Ch6jLUT6GEQJ1jcCZjhvhAOMEFapQ7
6t27N4EzPQv0AzVSTYAqTq6xCBrCzLzgZ2DjZikXhaEDeuqpp3AsFBjzATz4
FvwJutICLUV5Go9FA5jtZ599hqMGyZMdofo0Gc0HVVD5URrKR6XYIGUjDqLL
qFq1KjqHWmfIkIFrCGrr1q1BwrRp03CzNNxhR9C2xnmANzZIA2l6FH6F76Li
tDKlpdFhazAfdVjFihUbNWqUZoXEmig/tkPYTiujMeyaVqDnxdxIqRF1yjxz
5kzIAE0pgsF7A+lfFI4coG0oEJcitiCcAwP0Q5mxFAqMCVNCWQ3IpDkEeOVD
RaDZYhrqJjTRhr/StLIaSNMZGCaeH0aHJjNlykRNsQLNL1MvQKs5L3XBwJLC
KCJW5rAOXJBGWrBQSKOcpFoK0N5zzz00osZncP60psIZWgpSRNOQA8/i36BA
+A2KgYaFcwgMdaHk+Ha8H0pWwWLdZWkJjp8Hxzla0go9niVDFEuedEk333wz
rwaNt9xyCxAFGKLlZlxOOdOOVJ8+kappOELjfpjwBx98oNkZrblCZKFmDkU9
ERniecSuNWeqiF7NRyRCi5MSeOMHQI6GCHBigJyOe+PGjWiG99I7E2JoFBHH
kiVLFo2CyvGSOWBT/0iegIQ7vALegjPhQZ4SNcUlgnMeQe1cY1nUCFdPwTSB
yIsAOeaPKdEWPEL1eSNdCY4Ue4fPEN6iPfyD1jAEwTltR+bQCQ2Q6g4F47+o
HferpWiic9zEfHAIQiyFlJ/HddB2OCX6NdtlfUrAqwEkeqAhbGf2gZRcAyQo
KI4aG6dLgmc2aNBA3Ji6QBvMWAGC08bRoWTFbtzHP8DcKLCYJNkCSI1kKprA
+WBHmjlFY7Nnz5ZHVclpNY0FgflYd+0ivohMKDNNDB7IinrRrdO+GgMxo+sJ
4jk4zlEUhRfIUS8dJSZWs2ZNuntiNF7NBe1IHc87a6EVYtO+XIgr0hDYI+1u
u6PB3MFn4m//cMR25n9VDLW4zESGw18cIL5UNEA/aRIN9XJzriN0u0AOfYJJ
ekZKgu3jgjSWTstSBpqJckJFIOQHDhxAXSoe/lDRk9wvNkK706eDbVwNwbXm
T2kvIEccqgk+0oNbdbgyVS4gybyULoOsADaZUFqxd3VPCO8FP7xapiqIBhKq
+c4775QuXVpT9uqdeZbXAS36BcXvtrvyhA6LxCbk1wgJpcUA6TppPqUUwVBw
ROSFZjQOzF+N+FFHfiINIITkUEj4G5SMeuFAcLaW+807lIMjIhNgqTu8ggT4
MTMgQ/XxbCSQ7yIB7YVf0sAOHQrdHDd5NS0F16KNeCNRSYkSJVQ7jbDxIhKg
2DRp0uB/UDicSs7caMZ21xpREhKYNWnBF1fI4mgXniVCue6663DmKBCngaWL
qMCEIcyk8XoP24n3eYpODd5Ir63RJHWXUFZcpeBqeLjIgBJoeaEWjdSoUaN5
8+bq9bQwUmNxBAUUALcGkdNgI14dFOGo0RJ6wJRIyR3F++pqKRs+XJNZwABv
MGjQIHSLTigMnBaskiGPozSQTCZc0xD4eWqBFyIllSIxHo+bJKOceAMwTxPg
7jSUDVS4Q0pwThpclnoiMucn2ldjKXLIgfQPs6LHpAexHWJGXTQaQIbUSPe1
klYjOZg8weaSJUtIxqttd5UalA93RHnUHchd8BRape2weo0JG/3LW5IJjp06
ymRksNdffz0XVIQqyJFSZRyRmLkWVNSrV48oif+KVKB5ogANF6i7V6moBQqH
1mK2WmpOqQBGr169SIC3QdtAnSamg8AXUX1aiv/CWCBFRBygjubgQZrAREDC
uZaa2O6yNDvoPIVIF/0j2iMuBhWispSEXltz5eTGG0mA2rV8iJuWu7SMXykt
kEBRFENrU7Hurl27ag2Pam2UL/CTTCEb7pQa4RjJVg2nMRMEvVFNTAZ4g4fj
jpAVjgK94ROAk9Yx8hSxD/6EulAqmhWo8xR/IfM4cBoC5MvL0U3jNxTC4wCx
ArJFsbggrLt48eIo4aQjVAHvDTZoaB4HRZpJhIcrAOdFVIRXACeUQ9loLDoF
TV+SP38vBN0gAFrgDFrmpK5ZOORZQnKKpxVWctG8i6LCiOiwRLQ0Eks+dGeQ
c+qrEXgNN9nOuCJeSFMe2jujISBtGUCwAmon2sB/CQHISi2lEVEKgxKg33JZ
Mjf8OXrjXTSQBrdx+ArZRC1kqhoTBufYlPprHsGdFi1alKfwKmibGmkKBg3D
1Qnr6LgxNx6H/JAS3SoM5NVmaRwZEtFA+83EtNxjID2TJ3ySLo82xUDIh3IC
mIEDB8JbbHcNOYUkAZQGY5T7okEtZ9UuyiegIBATt1GR8BLcMascLXdZvgbS
tfxM1I6K8DhPyYWed9f2q5smE3pqPCR0BXIOw8E/0CK4X5qDR1AR/0XbeEW8
OuqiGBoYGTZsGEEl2iAB3kCBA2jEF40ZMwY0AmyINHEuj+AhNdtIrclNU2Na
QUS3judBJ1988QVdCX4bm+IOafiLMRJE0x/JWDA9NEO0RbGpDhlqIiyQ/jWY
o2kI2908dcHZHwFyiMo1jWgIg5qYmqrXFnsBOUT6lM12hrPk7lCFwkAgiqK0
AE85qKOnbFyI7ZjO4tZbb8WNaIiY92LypNRaLzWf7TAENIOFavEz+aAH8KnQ
2HancrQYGG0Qw6J/kgEwTRvhUckT1eG6KZgmbngFajSLPzXsXKVKFQiSHLJW
XGvIF88MHYJoKY7QpG0QnMNJNI9AMq031lTyu+++C/w0pGP2NIE0+q8nn3wS
/2A7wwiK4vHngEoj4dKDKqK9LfIhopHawmCmVgnoCDQwWI0hGLKhTKhX1apV
W7ZsOWvWLKiFRvYwYfgMZaOnk8vSGiEKpulmsuLBWrVqwW8J+bEIOgt5eJSM
8iltly5dFDKgRlwT1RQZo1nRBrYAMMjkoYceQp/0C1zzdtoRtwDVAeeaxiJb
vGju3Lk1woaP1QQx/QXeGG4pD2Z2gcUXafsfd9sOFk3r0xwEOHfffbdZOEcT
GIcjq9EFNcL/gGSMkfdSKS1d0Hoe0gOzTJkymWEE292tQGU1GgBtQEX8Spkz
ZMgAqROYZ8yYAX/GBOj+aCPohFyThm6gmnny5AGZNLTWh/AXnyDCia4oD3rj
WWyQNNzXKjIoH16a4hGBYhrEGjQ65kx/jf/E6rGyeY7wdlSNSnFx9Djav6Yo
horQLvfccw8457/4Mc0LB1KyRDPL6m5AsoyO4Ags8RYZvgZGSEY74iG5oBaE
MHBIKkvshipy5MiBwm+77Taide4DBjBD9ek3tZiHBPgBsIeeQQ4R7u23304+
ohMaKMY6oItoCXdRt25dfBqsQK5A7hqgwi60SkpeTgDQCg1+pQogvGDBgjSu
1iGAB5peS2QpP4WBKaF8CANFpRZcP/fcczQWzhz/RuZaBnDzzTdTDEqLIZCb
prrGjx9PMsrPTVonY8aM06ZNA07ATK5G/RoEgCrTarZnACS+aOGxKAGgyp8/
P94PhAM/uKJop9al/OPsFjSuWE4DP4CeP/nkE7Ea7eAT91aHThdDCSGHtKDG
bTRiZnK+66676CVRLFQT2qB5f9oX10phCPbLlClDD0gFhWH1IxUqVOAmBVak
QyPCDM1KJ8JnakGGKJYWpweUAQInrANN0umgKFBaqlQpQALgSQm9QfmkL1u2
LNyMVsAW+BVQ8QrL2W4jHyg80IhDhw4Vx7OdlUJB1uuaJiA9ZkhzY/4Uksw1
a0DZjNLULtohQutQO3o6+CoO4StHcLw4MS54lsrieL/88kuAQfgGvPkVKOKs
QALVgQXhaTWrjnATKKJb8AYnRwNaLCRObjZW0CI1a9YE/Fr3Ik6IB86aNSvF
o4PANKDH2mQhlqg1SzxLXVARqm7fvj2eWeHn+vXrcQ50E7gsPBKQ0KJuSDi9
KmWOcXaDogHamtxoWQxWMW+WLFnAGDWSQ9AMoByFJqTwXcHnieSg1DEJY9RX
A1kaS+FFIvkaeNESLPl57hNGUWBuUjYNuGnGX1xIy4Eg8xpv0eyztg+gNPDG
BeWn7uRGv6DNU6IBWgxJenKWh1dEo90o/fr1o1kpidlprqgTkfPRagGNGJBe
O+kQ1A4qBDzFHVoogg5td9+xNhkpT0qunSa2E1aLWojWEj8CNrPZwWwPDORP
1COIUfA6NAN3lYenxTVkyutEP2hBraLR+KdYpVi6ljTIrMiWVjDEUqRL81kq
P62D49VyBQ1lxzibnW13qbniJuWgFWsKikmAkiEJirk0hqMJXBpCa/AUSsse
bWfYWQGylt2iHO1iFlpsZxGs5mtsh4wpKOO9WkStMERZkYYEUHpKiKuEOmq0
QQOY0qEQyOMYEaUyA1+B/IxWeKJ50RLb4SQaSaMuiphMyP+Pu0de4wO2s85c
Y26aByG9iJBWxIn+2e4uyAvuQQGarYMnqAxmDIELzefylLilisdfuUS91wyW
6qYWIsrK1BwCqhlzUGetyXStr5BhalGQZse0F0kU13aIqwmEKYyqr2ETXkdX
0rFjRzMWLeQE6Te1PEZBh8i57TBeLkTCtULbduKC8+75D8YnKApWN6qBAo2W
qAnMSi3b3aqscioUFSRgGpZ7LIBepwkdjdsoVv3b3WFNSbRAznIPlxAnMaEr
F1Bry92dIWuVB1BfQAItOdAIHr9SAFNUTdaYnbmaG9I4vCYK5Tooodbn8F+g
IoWI1GnBp5bsCkvevaLxxUrlEpuEYl4X4+4yNgvyrXBPeg+1vpHKP4I6SfZ2
8YqP88sXy8d5QjpJ9nbxio/zyxfLx3lCOkn2dvGKj/PLF8vHeUI6SfZ28cr/
Adpla8I=
    "], {{0, 252.}, {248., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{283.99999999999994`, Automatic},
  ImageSizeRaw->{248., 252.},
  PlotRange->{{0, 248.}, {0, 252.}}]], "Input",ExpressionUUID->"65af7047-9540-\
439a-a820-fdd208e63372"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GeometricScene", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], "}"}], 
    ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"{", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"GeometricAssertion", "[", 
       RowBox[{
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "]"}], ",", 
        "\"\<Regular\>\""}], "]"}], ",", "\[IndentingNewLine]", "\t", 
      RowBox[{"e", "\[Element]", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "]"}]}], ",", 
      " ", 
      RowBox[{"f", "\[Element]", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "]"}]}], ",", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"GeometricAssertion", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{"a", ",", "e"}], "}"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{"e", ",", "f"}], "}"}], "]"}]}], "}"}], ",", 
        "\"\<Perpendicular\>\""}], "]"}], ",", "\[IndentingNewLine]", "\t", 
      RowBox[{"GeometricAssertion", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{"e", ",", "f"}], "}"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{"f", ",", "c"}], "}"}], "]"}]}], "}"}], ",", 
        "\"\<Perpendicular\>\""}], "]"}], ",", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{"a", ",", "e"}], "]"}], "\[Equal]", "9"}], ",", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{"e", ",", "f"}], "]"}], "\[Equal]", "5"}], ",", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{"f", ",", "c"}], "]"}], "\[Equal]", "3"}]}], 
     "\[IndentingNewLine]", "\t", "}"}]}], "\[IndentingNewLine]", "]"}], "//",
   "RandomInstance"}]], "Input",
 CellChangeTimes->{{3.8302713217807693`*^9, 3.830271596969134*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"f638053b-f64a-46ba-9d49-e793ac21b569"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ = 
    1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 0, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {
     C["GeometricPoint"][
      C["Unspecified"][
      "regular", 
       "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = {$CellContext`a, \
$CellContext`b, $CellContext`c, $CellContext`d, $CellContext`e, \
$CellContext`f}, PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {
    PlaneGeometry`GeometrySceneDrawer`Dump`var4427, 
     PlaneGeometry`GeometrySceneDrawer`Dump`var4428, 
     PlaneGeometry`GeometrySceneDrawer`Dump`var4429}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c], 
     C["GeometricPoint"][$CellContext`d], 
     C["GeometricPoint"][$CellContext`e], 
     C["GeometricPoint"][$CellContext`f]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4, 5, 6},
     PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c], 
     C["GeometricPoint"][$CellContext`d], 
     C["GeometricPoint"][$CellContext`e], 
     C["GeometricPoint"][$CellContext`f], 
     C["GeometricPoint"][
      C["Unspecified"][
      "regular", 
       "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {
     C["GeometricQuantity"][
      C["Unspecified"][
      "regular orientation", 
       "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]], 
     C["GeometricQuantity"][
      C["Unspecified"][
      "regular radius", 
       "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]], 
     C["GeometricQuantity"][
      C["Unspecified"][
      "regular theta", 
       "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var4413, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4414}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4415, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4416}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4417, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4418}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4419, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4420}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4421, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4422}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4423, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4424}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4425, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4426}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {
    PlaneGeometry`GeometrySceneDrawer`Dump`var4427, 
     PlaneGeometry`GeometrySceneDrawer`Dump`var4428, 
     PlaneGeometry`GeometrySceneDrawer`Dump`var4429}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = \
{{{-0.08566272553481506, 7.344606265827502}, {-6.274225150321999, 
    0.5474233850663704}, {0.5229577304391317, -5.641139039720812}, {
    6.711520155226315, 
    1.156043841040318}, {-3.1544646752655123`, -1.1160352342792763`}, {
    1.5458917136826975`, -2.820925206351886}, {0.21864750245215803`, 
    0.8517336130533446}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{1., 6.5, 
    1.6176304042872502`}}, 
    PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {"Step 1"}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 2, 3, 4, 5, 
    6}}, PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = {{
    7}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{1, 2, 3}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
      False, False, False, False, False, False}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4, 5, 6}, 
    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{(-81 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4413 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4421)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4422)^2)^2 + (-9 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var4417 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4423)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var4418 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4424)^2)^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4413 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4421) (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4421 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4423) + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4422) (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4422 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4424))^2 + ((
          PlaneGeometry`GeometrySceneDrawer`Dump`var4417 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4423) (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4421 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4423) + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var4418 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4424) (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4422 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4424))^2 + (-25 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4421 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4423)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4422 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4424)^2)^2 + (-1 + 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4427^2)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4413 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4415) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4430)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4416) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4431)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4413 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4417) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4432)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4418) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4433)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4413 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4419) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4434)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4420) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4435)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4415 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4417) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4436)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4416 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4418) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4437)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4415 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4419) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4438)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4416 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4420) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4439)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4417 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4419) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4440)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4418 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4420) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4441)^2 + (
         1 - ((-(-PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var4416)) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4415 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4417) + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4413 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4415) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4416 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4418)) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4442)^2 (
         1 - ((-(-PlaneGeometry`GeometrySceneDrawer`Dump`var4416 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var4418)) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4417 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4419) + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4415 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4417) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4418 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4420)) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4443)^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var4413 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4425 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4428 
        Cos[PlaneGeometry`GeometrySceneDrawer`Dump`var4429])^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var4415 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4425 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4428 
        Cos[(Rational[1, 2] Pi) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4427 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4429])^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var4417 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4425 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4428 
        Cos[Pi PlaneGeometry`GeometrySceneDrawer`Dump`var4427 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4429])^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var4419 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4425 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4428 
        Cos[(Rational[3, 2] Pi) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4427 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4429])^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4426 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4428 
        Sin[PlaneGeometry`GeometrySceneDrawer`Dump`var4429])^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var4416 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4426 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4428 
        Sin[(Rational[1, 2] Pi) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4427 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4429])^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var4418 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4426 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4428 
        Sin[Pi PlaneGeometry`GeometrySceneDrawer`Dump`var4427 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4429])^2 + (
        PlaneGeometry`GeometrySceneDrawer`Dump`var4420 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4426 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4428 
        Sin[(Rational[3, 2] Pi) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4427 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4429])^2, {(
         Rational[
          1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4421 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4413 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4422) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4415 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4422))) ((
           PlaneGeometry`GeometrySceneDrawer`Dump`var4416 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4418) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4421 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4415 (
           PlaneGeometry`GeometrySceneDrawer`Dump`var4418 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4422) + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4417 (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4422)) >= 
       0.01, (Rational[
          1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4421 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4413 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4422) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4415 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4422))) ((
           PlaneGeometry`GeometrySceneDrawer`Dump`var4418 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4420) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4421 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4417 (
           PlaneGeometry`GeometrySceneDrawer`Dump`var4420 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4422) + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4419 (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4418 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4422)) >= 
       0.01, (Rational[
          1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4421 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4413 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4422) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4415 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4422))) ((-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4420) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4421 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4419 (
           PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4422) + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4413 (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4420 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4422)) >= 
       0.01, (Rational[
          1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4417 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4413 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4418) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4415 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4418))) ((
           PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4416) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4421 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4413 (
           PlaneGeometry`GeometrySceneDrawer`Dump`var4416 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4422) + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4415 (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4422)) >= 
       0.01, (Rational[
          1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4423 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4413 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4424) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4415 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4424))) ((
           PlaneGeometry`GeometrySceneDrawer`Dump`var4416 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4418) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4423 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4415 (
           PlaneGeometry`GeometrySceneDrawer`Dump`var4418 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4424) + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4417 (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4424)) >= 
       0.01, (Rational[
          1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4423 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4413 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4424) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4415 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4424))) ((
           PlaneGeometry`GeometrySceneDrawer`Dump`var4418 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4420) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4423 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4417 (
           PlaneGeometry`GeometrySceneDrawer`Dump`var4420 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4424) + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4419 (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4418 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4424)) >= 
       0.01, (Rational[
          1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4423 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4413 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4424) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4415 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4424))) ((-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4420) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4423 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4419 (
           PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4424) + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4413 (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4420 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4424)) >= 
       0.01, (Rational[
          1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4417 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4413 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var4416 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4418) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4415 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4418))) ((
           PlaneGeometry`GeometrySceneDrawer`Dump`var4414 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4416) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4423 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4413 (
           PlaneGeometry`GeometrySceneDrawer`Dump`var4416 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4424) + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4415 (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4424)) >= 0.01, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4428 >= 
       0.5, (-PlaneGeometry`GeometrySceneDrawer`Dump`var4413 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4421)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4414 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4422)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var4421 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4423)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4422 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4424)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var4417 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4423)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var4418 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4424)^2 >= 0.03}, {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var4413, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4414, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4415, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4416, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4417, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4418, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4419, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4420, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4421, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4422, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4423, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4424, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4425, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4426, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4427, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4428, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4429}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var4430, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4431, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4432, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4433, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4434, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4435, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4436, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4437, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4438, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4439, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4440, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4441, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4442, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4443}, {{}, {}, {}}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(-1 + 
       C["GeometricQuantity"][
          C["Unspecified"][
          "regular orientation", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]^2)^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4399] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4400] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4401] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4402] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4405] (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4406] (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4403] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4404] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4407] (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4408] (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4409] (
         C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4410] (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
        "notVar"[
         PlaneGeometry`GeometrySceneDrawer`Dump`var4411] ((-(-
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`b][2])) (-
            C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`c][1]) + (-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`b][1]) (-
            C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`c][2])))^2 (1 - 
        "notVar"[
         PlaneGeometry`GeometrySceneDrawer`Dump`var4412] ((-(-
             C["GeometricPoint"][$CellContext`b][2] + 
            C["GeometricPoint"][$CellContext`c][2])) (-
            C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`d][1]) + (-
            C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`c][1]) (-
            C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`d][2])))^2 + (-81 + (-
          C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`e][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`e][2])^2)^2 + (-9 + (
         C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`f][1])^2 + (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`f][
         2])^2)^2 + ((-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`e][1]) (-
          C["GeometricPoint"][$CellContext`e][1] + 
         C["GeometricPoint"][$CellContext`f][1]) + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`e][2]) (-
          C["GeometricPoint"][$CellContext`e][2] + 
         C["GeometricPoint"][$CellContext`f][2]))^2 + ((
         C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`f][
         1]) (-C["GeometricPoint"][$CellContext`e][1] + 
         C["GeometricPoint"][$CellContext`f][1]) + (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`f][
         2]) (-C["GeometricPoint"][$CellContext`e][2] + 
         C["GeometricPoint"][$CellContext`f][2]))^2 + (-25 + (-
          C["GeometricPoint"][$CellContext`e][1] + 
         C["GeometricPoint"][$CellContext`f][1])^2 + (-
          C["GeometricPoint"][$CellContext`e][2] + 
         C["GeometricPoint"][$CellContext`f][2])^2)^2 + ((-Cos[
           C["GeometricQuantity"][
            C["Unspecified"][
            "regular theta", 
             "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]]) 
        C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
       C["GeometricPoint"][$CellContext`a][1] - C["GeometricPoint"][
        C["Unspecified"][
        "regular", 
         "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][
       1])^2 + ((-Cos[(Rational[1, 2] Pi) C["GeometricQuantity"][
              C["Unspecified"][
              "regular orientation", 
               "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
           C["GeometricQuantity"][
             C["Unspecified"][
             "regular theta", 
              "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]]) 
        C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
       C["GeometricPoint"][$CellContext`b][1] - C["GeometricPoint"][
        C["Unspecified"][
        "regular", 
         "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][
       1])^2 + ((-Cos[Pi C["GeometricQuantity"][
              C["Unspecified"][
              "regular orientation", 
               "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
           C["GeometricQuantity"][
             C["Unspecified"][
             "regular theta", 
              "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]]) 
        C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
       C["GeometricPoint"][$CellContext`c][1] - C["GeometricPoint"][
        C["Unspecified"][
        "regular", 
         "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][
       1])^2 + ((-Cos[(Rational[3, 2] Pi) C["GeometricQuantity"][
              C["Unspecified"][
              "regular orientation", 
               "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
           C["GeometricQuantity"][
             C["Unspecified"][
             "regular theta", 
              "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]]) 
        C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
       C["GeometricPoint"][$CellContext`d][1] - C["GeometricPoint"][
        C["Unspecified"][
        "regular", 
         "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][1])^2 + ((-Sin[
           C["GeometricQuantity"][
            C["Unspecified"][
            "regular theta", 
             "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]]) 
        C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
       C["GeometricPoint"][$CellContext`a][2] - C["GeometricPoint"][
        C["Unspecified"][
        "regular", 
         "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][
       2])^2 + ((-Sin[(Rational[1, 2] Pi) C["GeometricQuantity"][
              C["Unspecified"][
              "regular orientation", 
               "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
           C["GeometricQuantity"][
             C["Unspecified"][
             "regular theta", 
              "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]]) 
        C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
       C["GeometricPoint"][$CellContext`b][2] - C["GeometricPoint"][
        C["Unspecified"][
        "regular", 
         "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][
       2])^2 + ((-Sin[Pi C["GeometricQuantity"][
              C["Unspecified"][
              "regular orientation", 
               "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
           C["GeometricQuantity"][
             C["Unspecified"][
             "regular theta", 
              "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]]) 
        C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
       C["GeometricPoint"][$CellContext`c][2] - C["GeometricPoint"][
        C["Unspecified"][
        "regular", 
         "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][
       2])^2 + ((-Sin[(Rational[3, 2] Pi) C["GeometricQuantity"][
              C["Unspecified"][
              "regular orientation", 
               "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
           C["GeometricQuantity"][
             C["Unspecified"][
             "regular theta", 
              "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]]) 
        C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
       C["GeometricPoint"][$CellContext`d][2] - C["GeometricPoint"][
        C["Unspecified"][
        "regular", 
         "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][2])^2}, 
    PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{(
        Rational[
         1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`e][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`e][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`e][2]))) ((
          C["GeometricPoint"][$CellContext`b][2] - C[
          "GeometricPoint"][$CellContext`c][2]) 
         C["GeometricPoint"][$CellContext`e][1] + 
        C["GeometricPoint"][$CellContext`b][1] (
          C["GeometricPoint"][$CellContext`c][2] - C[
          "GeometricPoint"][$CellContext`e][2]) + 
        C["GeometricPoint"][$CellContext`c][
          1] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`e][2])) >= 
      0.01, (Rational[
         1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`e][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`e][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`e][2]))) ((
          C["GeometricPoint"][$CellContext`c][2] - C[
          "GeometricPoint"][$CellContext`d][2]) 
         C["GeometricPoint"][$CellContext`e][1] + 
        C["GeometricPoint"][$CellContext`c][1] (
          C["GeometricPoint"][$CellContext`d][2] - C[
          "GeometricPoint"][$CellContext`e][2]) + 
        C["GeometricPoint"][$CellContext`d][
          1] (-C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`e][2])) >= 
      0.01, (Rational[
         1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`e][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`e][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`e][2]))) ((-
           C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`d][2]) 
         C["GeometricPoint"][$CellContext`e][1] + 
        C["GeometricPoint"][$CellContext`d][1] (
          C["GeometricPoint"][$CellContext`a][2] - C[
          "GeometricPoint"][$CellContext`e][2]) + 
        C["GeometricPoint"][$CellContext`a][
          1] (-C["GeometricPoint"][$CellContext`d][2] + 
          C["GeometricPoint"][$CellContext`e][2])) >= 
      0.01, (Rational[
         1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))) ((
          C["GeometricPoint"][$CellContext`a][2] - C[
          "GeometricPoint"][$CellContext`b][2]) 
         C["GeometricPoint"][$CellContext`e][1] + 
        C["GeometricPoint"][$CellContext`a][1] (
          C["GeometricPoint"][$CellContext`b][2] - C[
          "GeometricPoint"][$CellContext`e][2]) + 
        C["GeometricPoint"][$CellContext`b][
          1] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`e][2])) >= 
      0.01, (Rational[
         1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`f][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`f][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`f][2]))) ((
          C["GeometricPoint"][$CellContext`b][2] - C[
          "GeometricPoint"][$CellContext`c][2]) 
         C["GeometricPoint"][$CellContext`f][1] + 
        C["GeometricPoint"][$CellContext`b][1] (
          C["GeometricPoint"][$CellContext`c][2] - C[
          "GeometricPoint"][$CellContext`f][2]) + 
        C["GeometricPoint"][$CellContext`c][
          1] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`f][2])) >= 
      0.01, (Rational[
         1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`f][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`f][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`f][2]))) ((
          C["GeometricPoint"][$CellContext`c][2] - C[
          "GeometricPoint"][$CellContext`d][2]) 
         C["GeometricPoint"][$CellContext`f][1] + 
        C["GeometricPoint"][$CellContext`c][1] (
          C["GeometricPoint"][$CellContext`d][2] - C[
          "GeometricPoint"][$CellContext`f][2]) + 
        C["GeometricPoint"][$CellContext`d][
          1] (-C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`f][2])) >= 
      0.01, (Rational[
         1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`f][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`f][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`f][2]))) ((-
           C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`d][2]) 
         C["GeometricPoint"][$CellContext`f][1] + 
        C["GeometricPoint"][$CellContext`d][1] (
          C["GeometricPoint"][$CellContext`a][2] - C[
          "GeometricPoint"][$CellContext`f][2]) + 
        C["GeometricPoint"][$CellContext`a][
          1] (-C["GeometricPoint"][$CellContext`d][2] + 
          C["GeometricPoint"][$CellContext`f][2])) >= 
      0.01, (Rational[
         1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))) ((
          C["GeometricPoint"][$CellContext`a][2] - C[
          "GeometricPoint"][$CellContext`b][2]) 
         C["GeometricPoint"][$CellContext`f][1] + 
        C["GeometricPoint"][$CellContext`a][1] (
          C["GeometricPoint"][$CellContext`b][2] - C[
          "GeometricPoint"][$CellContext`f][2]) + 
        C["GeometricPoint"][$CellContext`b][
          1] (-C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`f][2])) >= 0.01, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "regular radius", 
         "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] >= 
      0.5, (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`e][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`e][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`e][1] + 
         C["GeometricPoint"][$CellContext`f][1])^2 + (-
          C["GeometricPoint"][$CellContext`e][2] + 
         C["GeometricPoint"][$CellContext`f][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`f][1])^2 + (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`f][2])^2 >= 0.03}}, 
    PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
       C["GeometricPoint"][$CellContext`a][1], 
       C["GeometricPoint"][$CellContext`a][2], 
       C["GeometricPoint"][$CellContext`b][1], 
       C["GeometricPoint"][$CellContext`b][2], 
       C["GeometricPoint"][$CellContext`c][1], 
       C["GeometricPoint"][$CellContext`c][2], 
       C["GeometricPoint"][$CellContext`d][1], 
       C["GeometricPoint"][$CellContext`d][2], 
       C["GeometricPoint"][$CellContext`e][1], 
       C["GeometricPoint"][$CellContext`e][2], 
       C["GeometricPoint"][$CellContext`f][1], 
       C["GeometricPoint"][$CellContext`f][2], 
       C["GeometricPoint"][
        C["Unspecified"][
        "regular", 
         "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][1], 
       C["GeometricPoint"][
        C["Unspecified"][
        "regular", 
         "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][2], 
       C["GeometricQuantity"][
        C["Unspecified"][
        "regular orientation", 
         "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]], 
       C["GeometricQuantity"][
        C["Unspecified"][
        "regular radius", 
         "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]], 
       C["GeometricQuantity"][
        C["Unspecified"][
        "regular theta", 
         "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]}, {
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4399], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4400], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4401], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4402], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4403], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4404], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4405], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4406], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4407], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4408], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4409], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4410], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4411], 
       "notVar"[
       PlaneGeometry`GeometrySceneDrawer`Dump`var4412]}, {{}, {}, {}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{
     C["GeometricQuantity"][
         C["Unspecified"][
         "regular orientation", 
          "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]^2 == 1, 
      C["GeometricPoint"][$CellContext`a][1] == Cos[
          C["GeometricQuantity"][
           C["Unspecified"][
           "regular theta", 
            "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]] C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + C["GeometricPoint"][
         C["Unspecified"][
         "regular", 
          "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][1], 
      C["GeometricPoint"][$CellContext`a][2] == Sin[
          C["GeometricQuantity"][
           C["Unspecified"][
           "regular theta", 
            "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]] C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + C["GeometricPoint"][
         C["Unspecified"][
         "regular", 
          "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][2], 
      C["GeometricPoint"][$CellContext`b][1] == 
      Cos[(Rational[1, 2] Pi) C["GeometricQuantity"][
             C["Unspecified"][
             "regular orientation", 
              "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
          C["GeometricQuantity"][
            C["Unspecified"][
            "regular theta", 
             "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]] C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + C["GeometricPoint"][
         C["Unspecified"][
         "regular", 
          "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][1], 
      C["GeometricPoint"][$CellContext`b][2] == 
      Sin[(Rational[1, 2] Pi) C["GeometricQuantity"][
             C["Unspecified"][
             "regular orientation", 
              "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
          C["GeometricQuantity"][
            C["Unspecified"][
            "regular theta", 
             "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]] C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + C["GeometricPoint"][
         C["Unspecified"][
         "regular", 
          "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][2], 
      C["GeometricPoint"][$CellContext`c][1] == Cos[Pi C["GeometricQuantity"][
             C["Unspecified"][
             "regular orientation", 
              "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
          C["GeometricQuantity"][
            C["Unspecified"][
            "regular theta", 
             "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]] C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + C["GeometricPoint"][
         C["Unspecified"][
         "regular", 
          "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][1], 
      C["GeometricPoint"][$CellContext`c][2] == Sin[Pi C["GeometricQuantity"][
             C["Unspecified"][
             "regular orientation", 
              "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
          C["GeometricQuantity"][
            C["Unspecified"][
            "regular theta", 
             "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]] C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + C["GeometricPoint"][
         C["Unspecified"][
         "regular", 
          "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][2], 
      C["GeometricPoint"][$CellContext`d][1] == 
      Cos[(Rational[3, 2] Pi) C["GeometricQuantity"][
             C["Unspecified"][
             "regular orientation", 
              "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
          C["GeometricQuantity"][
            C["Unspecified"][
            "regular theta", 
             "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]] C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + C["GeometricPoint"][
         C["Unspecified"][
         "regular", 
          "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][1], 
      C["GeometricPoint"][$CellContext`d][2] == 
      Sin[(Rational[3, 2] Pi) C["GeometricQuantity"][
             C["Unspecified"][
             "regular orientation", 
              "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + 
          C["GeometricQuantity"][
            C["Unspecified"][
            "regular theta", 
             "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]] C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] + C["GeometricPoint"][
         C["Unspecified"][
         "regular", 
          "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][
        2], (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`e][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`e][2])^2 == 
      81, (C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`f][1])^2 + (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`f][2])^2 == 
      9, (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`e][1]) (-
          C["GeometricPoint"][$CellContext`e][1] + 
         C["GeometricPoint"][$CellContext`f][1]) + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`e][2]) (-
          C["GeometricPoint"][$CellContext`e][2] + 
         C["GeometricPoint"][$CellContext`f][2]) == 
      0, (C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`f][
         1]) (-C["GeometricPoint"][$CellContext`e][1] + 
         C["GeometricPoint"][$CellContext`f][1]) + (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`f][
         2]) (-C["GeometricPoint"][$CellContext`e][2] + 
         C["GeometricPoint"][$CellContext`f][2]) == 
      0, (-C["GeometricPoint"][$CellContext`e][1] + 
         C["GeometricPoint"][$CellContext`f][1])^2 + (-
          C["GeometricPoint"][$CellContext`e][2] + 
         C["GeometricPoint"][$CellContext`f][2])^2 == 25}}, 
    PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
    1, 1, 0, {{{-0.08566272553481506, 7.344606265827502}, {-6.274225150321999,
      0.5474233850663704}, {0.5229577304391317, -5.641139039720812}, {
     6.711520155226315, 
     1.156043841040318}, {-3.1544646752655123`, -1.1160352342792763`}, {
     1.5458917136826975`, -2.820925206351886}, {0.21864750245215803`, 
     0.8517336130533446}}}, {{1., 6.5, 
     1.6176304042872502`}}, {{{-0.08566272553481506, 
     7.344606265827502}, {-6.274225150321999, 0.5474233850663704}, {
     0.5229577304391317, -5.641139039720812}, {6.711520155226315, 
     1.156043841040318}, {-3.1544646752655123`, -1.1160352342792763`}, {
     1.5458917136826975`, -2.820925206351886}}}, {{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Polygon[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
        PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]] -> Rational[1, 2] Pi], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
        PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]] -> Rational[1, 2] Pi], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
        PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d], 
           C["GeometricPoint"][$CellContext`a]] -> Rational[1, 2] Pi], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
        PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
           C["GeometricPoint"][$CellContext`d], 
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b]] -> Rational[1, 2] Pi], {
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`e]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`e], 
           C["GeometricPoint"][$CellContext`f]}]}, {
         Line[{
           C["GeometricPoint"][$CellContext`f], 
           C["GeometricPoint"][$CellContext`c]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`f]]}, 
         Inset[
          Style[" f ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`f]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`f]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}}, {}}}, {{{
       C["GeometricPoint"][$CellContext`a] -> {-0.08566272553481506, 
         7.344606265827502}, 
        C["GeometricPoint"][$CellContext`b] -> {-6.274225150321999, 
         0.5474233850663704}, 
        C["GeometricPoint"][$CellContext`c] -> {
         0.5229577304391317, -5.641139039720812}, 
        C["GeometricPoint"][$CellContext`d] -> {6.711520155226315, 
         1.156043841040318}, 
        C["GeometricPoint"][$CellContext`e] -> {-3.1544646752655123`, \
-1.1160352342792763`}, 
        C["GeometricPoint"][$CellContext`f] -> {
         1.5458917136826975`, -2.820925206351886}, C["GeometricPoint"][
          C["Unspecified"][
          "regular", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> {
         0.21864750245215803`, 0.8517336130533446}}, {C["GeometricQuantity"][
          C["Unspecified"][
          "regular orientation", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 1., 
        C["GeometricQuantity"][
          C["Unspecified"][
          "regular radius", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 6.5, 
        C["GeometricQuantity"][
          C["Unspecified"][
          "regular theta", 
           "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 
        1.6176304042872502`}}}, {{{
       False, False, False, False, False, False}}}, {{{}}}, False, 
     True, {}, {}, {{{-0.08566272553481506, 
     7.344606265827502}, {-6.274225150321999, 0.5474233850663704}, {
     0.5229577304391317, -5.641139039720812}, {6.711520155226315, 
     1.156043841040318}, {-3.1544646752655123`, -1.1160352342792763`}, {
     1.5458917136826975`, -2.820925206351886}}}, {{{-7.872799680876831, 
     8.310094685781145}, {-7.239713570275644, 8.943180796382332}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-7.872799680876831, 8.310094685781145}, {-7.239713570275644, 
    8.943180796382332}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = \
{{{-0.08566272553481506, 7.344606265827502}, {-6.274225150321999, 
    0.5474233850663704}, {0.5229577304391317, -5.641139039720812}, {
    6.711520155226315, 
    1.156043841040318}, {-3.1544646752655123`, -1.1160352342792763`}, {
    1.5458917136826975`, -2.820925206351886}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`picPart$$, 
    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = \
{{{-0.08566272553481506, 7.344606265827502}, {-6.274225150321999, 
    0.5474233850663704}, {0.5229577304391317, -5.641139039720812}, {
    6.711520155226315, 
    1.156043841040318}, {-3.1544646752655123`, -1.1160352342792763`}, {
    1.5458917136826975`, -2.820925206351886}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
      C["GeometricPoint"][$CellContext`a], 
      C["GeometricPoint"][$CellContext`b], 
      C["GeometricPoint"][$CellContext`c], 
      C["GeometricPoint"][$CellContext`d], 
      C["GeometricPoint"][$CellContext`e], 
      C["GeometricPoint"][$CellContext`f], 
      C["GeometricPoint"][
       C["Unspecified"][
       "regular", 
        "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{
      C["GeometricQuantity"][
       C["Unspecified"][
       "regular orientation", 
        "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]], 
      C["GeometricQuantity"][
       C["Unspecified"][
       "regular radius", 
        "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]], 
      C["GeometricQuantity"][
       C["Unspecified"][
       "regular theta", 
        "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]]}}, 
    PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
    PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{
      AbsoluteThickness[2], 
      GrayLevel[0.7], 
      EdgeForm[{
        GrayLevel[0.7], 
        Thickness[Large]}], {{
        Opacity[0.2], 
        Polygon[{
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricPoint"][$CellContext`b], 
          C["GeometricPoint"][$CellContext`c], 
          C["GeometricPoint"][$CellContext`d]}]}, 
       PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
       PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricPoint"][$CellContext`b], 
          C["GeometricPoint"][$CellContext`c]] -> Rational[1, 2] Pi], 
       PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
       PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
          C["GeometricPoint"][$CellContext`b], 
          C["GeometricPoint"][$CellContext`c], 
          C["GeometricPoint"][$CellContext`d]] -> Rational[1, 2] Pi], 
       PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
       PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
          C["GeometricPoint"][$CellContext`c], 
          C["GeometricPoint"][$CellContext`d], 
          C["GeometricPoint"][$CellContext`a]] -> Rational[1, 2] Pi], 
       PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[
       PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
          C["GeometricPoint"][$CellContext`d], 
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricPoint"][$CellContext`b]] -> Rational[1, 2] Pi], {
        Line[{
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricPoint"][$CellContext`e]}]}, {
        Line[{
          C["GeometricPoint"][$CellContext`e], 
          C["GeometricPoint"][$CellContext`f]}]}, {
        Line[{
          C["GeometricPoint"][$CellContext`f], 
          C["GeometricPoint"][$CellContext`c]}]}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`e]]}, 
        Inset[
         Style[" e ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`e]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`e]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`f]]}, 
        Inset[
         Style[" f ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`f]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`f]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`a]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`b]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`c]]}, 
        Inset[
         Style[" c ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`c]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`c]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`d]]}, 
        Inset[
         Style[" d ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`d]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`d]]}}}, {}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
      C["GeometricPoint"][$CellContext`a][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4413}, {
      C["GeometricPoint"][$CellContext`a][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4414}, {
      C["GeometricPoint"][$CellContext`b][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4415}, {
      C["GeometricPoint"][$CellContext`b][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4416}, {
      C["GeometricPoint"][$CellContext`c][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4417}, {
      C["GeometricPoint"][$CellContext`c][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4418}, {
      C["GeometricPoint"][$CellContext`d][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4419}, {
      C["GeometricPoint"][$CellContext`d][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4420}, {
      C["GeometricPoint"][$CellContext`e][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4421}, {
      C["GeometricPoint"][$CellContext`e][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4422}, {
      C["GeometricPoint"][$CellContext`f][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4423}, {
      C["GeometricPoint"][$CellContext`f][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4424}, {
      C["GeometricPoint"][
       C["Unspecified"][
       "regular", 
        "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4425}, {
      C["GeometricPoint"][
       C["Unspecified"][
       "regular", 
        "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4426}, {
      C["GeometricQuantity"][
       C["Unspecified"][
       "regular orientation", 
        "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4427}, {
      C["GeometricQuantity"][
       C["Unspecified"][
       "regular radius", 
        "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4428}, {
      C["GeometricQuantity"][
       C["Unspecified"][
       "regular theta", 
        "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4429}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4399], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4430}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4400], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4431}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4401], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4432}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4402], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4433}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4403], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4434}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4404], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4435}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4405], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4436}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4406], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4437}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4407], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4438}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4408], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4439}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4409], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4440}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4410], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4441}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4411], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4442}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4412], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4443}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var4413, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4414}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4415, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4416}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4417, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4418}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4419, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4420}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4421, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4422}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4423, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4424}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var4425, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4426}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var4427, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4428, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4429}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var4413, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4414} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4415, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4416} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4417, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4418} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4419, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4420} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4421, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4422} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4423, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4424} -> 1], 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var4413, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4414} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4415, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4416} -> 
     2, {PlaneGeometry`GeometrySceneDrawer`Dump`var4417, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4418} -> 
     3, {PlaneGeometry`GeometrySceneDrawer`Dump`var4419, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4420} -> 
     4, {PlaneGeometry`GeometrySceneDrawer`Dump`var4421, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4422} -> 
     5, {PlaneGeometry`GeometrySceneDrawer`Dump`var4423, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4424} -> 
     6, {PlaneGeometry`GeometrySceneDrawer`Dump`var4425, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4426} -> 7], 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[
    PlaneGeometry`GeometrySceneDrawer`Dump`var4427 -> 1, 
     PlaneGeometry`GeometrySceneDrawer`Dump`var4428 -> 2, 
     PlaneGeometry`GeometrySceneDrawer`Dump`var4429 -> 3], 
    PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
      C["GeometricPoint"][$CellContext`a] -> {-0.08566272553481506, 
        7.344606265827502}, 
       C["GeometricPoint"][$CellContext`b] -> {-6.274225150321999, 
        0.5474233850663704}, 
       C["GeometricPoint"][$CellContext`c] -> {
        0.5229577304391317, -5.641139039720812}, 
       C["GeometricPoint"][$CellContext`d] -> {6.711520155226315, 
        1.156043841040318}, 
       C["GeometricPoint"][$CellContext`e] -> {-3.1544646752655123`, \
-1.1160352342792763`}, 
       C["GeometricPoint"][$CellContext`f] -> {
        1.5458917136826975`, -2.820925206351886}, C["GeometricPoint"][
         C["Unspecified"][
         "regular", 
          "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> {
        0.21864750245215803`, 0.8517336130533446}}, {C["GeometricQuantity"][
         C["Unspecified"][
         "regular orientation", 
          "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 1., 
       C["GeometricQuantity"][
         C["Unspecified"][
         "regular radius", 
          "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 6.5, 
       C["GeometricQuantity"][
         C["Unspecified"][
         "regular theta", 
          "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 
       1.6176304042872502`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
    PlaneGeometry`GeometrySceneDrawerDump`constraint$$, 
    PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
     Tooltip[
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
          Line[{{-0.75, 0}, {0.75, 0}}], 
          Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
       AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
     "Hide Controls" :> (
       PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
      Delimiter, Row[{
         Dynamic[
          RawBoxes[
           FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], "  ", 
         "Initial Settings"}] :> ({
        PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
         PlaneGeometry`GeometrySceneDrawerDump`step$$, 
         PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
         PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`current$$, 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
         PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
         PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
       PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
      "Paste Current Graphics" :> CellPrint[
        ExpressionCell[
         Append[
          PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
           Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
            If[
             And[
             False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
             PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
      "Paste Current GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          MapThread[Construct, {
            Map[ReplaceAll, {
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
            MapThread[Cases, {
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
              Map[HoldPattern, 
               Thread[Apply[Alternatives, 
                  Apply[Join, 
                   Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                  1}] -> Blank[]]]}]}], 
          If[False, 
           ReplaceAll[
            Take[
             ReplaceAll[
              Hold[{
                GeometricAssertion[
                 
                 Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], "Regular"], 
                Element[$CellContext`e, 
                 
                 Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
                Element[$CellContext`f, 
                 
                 Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`e}], 
                  Line[{$CellContext`e, $CellContext`f}]}, "Perpendicular"], 
                GeometricAssertion[{
                  Line[{$CellContext`e, $CellContext`f}], 
                  Line[{$CellContext`f, $CellContext`c}]}, "Perpendicular"], 
                EuclideanDistance[$CellContext`a, $CellContext`e] == 9, 
                EuclideanDistance[$CellContext`e, $CellContext`f] == 5, 
                EuclideanDistance[$CellContext`f, $CellContext`c] == 3}], 
              Hold[{
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  BlankNullSequence[GeometricStep]]}] :> 
              Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               BlankNullSequence[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
           Hold[{
             GeometricAssertion[
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], "Regular"], 
             Element[$CellContext`e, 
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
             Element[$CellContext`f, 
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
             GeometricAssertion[{
               Line[{$CellContext`a, $CellContext`e}], 
               Line[{$CellContext`e, $CellContext`f}]}, "Perpendicular"], 
             GeometricAssertion[{
               Line[{$CellContext`e, $CellContext`f}], 
               Line[{$CellContext`f, $CellContext`c}]}, "Perpendicular"], 
             EuclideanDistance[$CellContext`a, $CellContext`e] == 9, 
             EuclideanDistance[$CellContext`e, $CellContext`f] == 5, 
             EuclideanDistance[$CellContext`f, $CellContext`c] == 3}]], 
          If[
           And[
           False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
           Replace[
            Part[
             Hold[{}], {1}, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               Blank[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], "Input"]],
       Delimiter, "Paste Complete GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          If[False, Identity, First][
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{
            GeometricAssertion[
             
             Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], "Regular"], 
            Element[$CellContext`e, 
             
             Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
            Element[$CellContext`f, 
             
             Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`e}], 
              Line[{$CellContext`e, $CellContext`f}]}, "Perpendicular"], 
            GeometricAssertion[{
              Line[{$CellContext`e, $CellContext`f}], 
              Line[{$CellContext`f, $CellContext`c}]}, "Perpendicular"], 
            EuclideanDistance[$CellContext`a, $CellContext`e] == 9, 
            EuclideanDistance[$CellContext`e, $CellContext`f] == 5, 
            EuclideanDistance[$CellContext`f, $CellContext`c] == 3}], 
          Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          First[
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{
            GeometricAssertion[
             
             Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], "Regular"], 
            Element[$CellContext`e, 
             
             Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
            Element[$CellContext`f, 
             
             Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`e}], 
              Line[{$CellContext`e, $CellContext`f}]}, "Perpendicular"], 
            GeometricAssertion[{
              Line[{$CellContext`e, $CellContext`f}], 
              Line[{$CellContext`f, $CellContext`c}]}, "Perpendicular"], 
            EuclideanDistance[$CellContext`a, $CellContext`e] == 9, 
            EuclideanDistance[$CellContext`e, $CellContext`f] == 5, 
            EuclideanDistance[$CellContext`f, $CellContext`c] == 3}], 
          Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
      "Paste Parameters" :> CellPrint[
        ExpressionCell[
         If[False, Identity, First][
          Transpose[
           MapThread[Construct, {
             Map[ReplaceAll, {
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
             Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
         "Input"]], "Paste Hypotheses" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{
            GeometricAssertion[
             
             Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], "Regular"], 
            Element[$CellContext`e, 
             
             Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
            Element[$CellContext`f, 
             
             Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`e}], 
              Line[{$CellContext`e, $CellContext`f}]}, "Perpendicular"], 
            GeometricAssertion[{
              Line[{$CellContext`e, $CellContext`f}], 
              Line[{$CellContext`f, $CellContext`c}]}, "Perpendicular"], 
            EuclideanDistance[$CellContext`a, $CellContext`e] == 9, 
            EuclideanDistance[$CellContext`e, $CellContext`f] == 5, 
            EuclideanDistance[$CellContext`f, $CellContext`c] == 3}]], 
         "Input"]], "Paste Conclusions" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
        ExpressionCell[
         FindGeometricConjectures[
          PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
           If[
           False, {{{$CellContext`a -> {-0.08566272553481506, 
                7.344606265827502}, $CellContext`b -> {-6.274225150321999, 
                0.5474233850663704}, $CellContext`c -> {
                0.5229577304391317, -5.641139039720812}, $CellContext`d -> {
                6.711520155226315, 
                1.156043841040318}, $CellContext`e -> {-3.1544646752655123`, \
-1.1160352342792763`}, $CellContext`f -> {
                1.5458917136826975`, -2.820925206351886}, C["GeometricPoint"][
                 C["Unspecified"][
                 "regular", 
                  "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> {
                0.21864750245215803`, 0.8517336130533446}}, {
              C["GeometricQuantity"][
                 C["Unspecified"][
                 "regular orientation", 
                  "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 1., 
               C["GeometricQuantity"][
                 C["Unspecified"][
                 "regular radius", 
                  "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 6.5, 
               C["GeometricQuantity"][
                 C["Unspecified"][
                 "regular theta", 
                  "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 
               1.6176304042872502`}}}, 
            
            First[{{{$CellContext`a -> {-0.08566272553481506, 
                 7.344606265827502}, $CellContext`b -> {-6.274225150321999, 
                 0.5474233850663704}, $CellContext`c -> {
                 0.5229577304391317, -5.641139039720812}, $CellContext`d -> {
                 6.711520155226315, 
                 1.156043841040318}, $CellContext`e -> {-3.1544646752655123`, \
-1.1160352342792763`}, $CellContext`f -> {
                 1.5458917136826975`, -2.820925206351886}, C["GeometricPoint"][
                  C["Unspecified"][
                  "regular", 
                   "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> {
                 0.21864750245215803`, 0.8517336130533446}}, {
               C["GeometricQuantity"][
                  C["Unspecified"][
                  "regular orientation", 
                   "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 1., 
                C["GeometricQuantity"][
                  C["Unspecified"][
                  "regular radius", 
                   "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 6.5, 
                C["GeometricQuantity"][
                  C["Unspecified"][
                  "regular theta", 
                   "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 
                1.6176304042872502`}}}]], 
           Hold[{
             GeometricAssertion[
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], "Regular"], 
             Element[$CellContext`e, 
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
             Element[$CellContext`f, 
              
              Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
             GeometricAssertion[{
               Line[{$CellContext`a, $CellContext`e}], 
               Line[{$CellContext`e, $CellContext`f}]}, "Perpendicular"], 
             GeometricAssertion[{
               Line[{$CellContext`e, $CellContext`f}], 
               Line[{$CellContext`f, $CellContext`c}]}, "Perpendicular"], 
             EuclideanDistance[$CellContext`a, $CellContext`e] == 9, 
             EuclideanDistance[$CellContext`e, $CellContext`f] == 5, 
             EuclideanDistance[$CellContext`f, $CellContext`c] == 3}]]], 
         "Input"]]}, Appearance -> None, MenuAppearance -> "Menu"], 
    PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              2], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        ActionMenu[
         Tooltip[
          Graphics[{{
             GrayLevel[0.9], 
             Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], {
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
           AspectRatio -> Full, PlotRangePadding -> None], 
          "Controls/Paste"], {
         "Hide Controls" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
          Delimiter, Row[{
             Dynamic[
              RawBoxes[
               FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
             "  ", "Initial Settings"}] :> ({
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`current$$, 
             PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
           PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
          "Paste Current Graphics" :> CellPrint[
            ExpressionCell[
             Append[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                If[
                 And[
                 False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]],
           "Paste Current GeometricScene" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                MapThread[Cases, {
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                  Map[HoldPattern, 
                   Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
              If[False, 
               ReplaceAll[
                Take[
                 ReplaceAll[
                  Hold[{
                    GeometricAssertion[
                    
                    Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], "Regular"], 
                    Element[$CellContext`e, 
                    
                    Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
                    Element[$CellContext`f, 
                    
                    Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
                    GeometricAssertion[{
                    Line[{$CellContext`a, $CellContext`e}], 
                    Line[{$CellContext`e, $CellContext`f}]}, "Perpendicular"], 
                    GeometricAssertion[{
                    Line[{$CellContext`e, $CellContext`f}], 
                    Line[{$CellContext`f, $CellContext`c}]}, "Perpendicular"],
                     EuclideanDistance[$CellContext`a, $CellContext`e] == 9, 
                    EuclideanDistance[$CellContext`e, $CellContext`f] == 5, 
                    EuclideanDistance[$CellContext`f, $CellContext`c] == 3}], 
                  Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                  Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   BlankNullSequence[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
               Hold[{
                 GeometricAssertion[
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], "Regular"], 
                 Element[$CellContext`e, 
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
                 Element[$CellContext`f, 
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
                 GeometricAssertion[{
                   Line[{$CellContext`a, $CellContext`e}], 
                   Line[{$CellContext`e, $CellContext`f}]}, "Perpendicular"], 
                 GeometricAssertion[{
                   Line[{$CellContext`e, $CellContext`f}], 
                   Line[{$CellContext`f, $CellContext`c}]}, "Perpendicular"], 
                 EuclideanDistance[$CellContext`a, $CellContext`e] == 9, 
                 EuclideanDistance[$CellContext`e, $CellContext`f] == 5, 
                 EuclideanDistance[$CellContext`f, $CellContext`c] == 3}]], 
              If[
               And[
               False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
               Replace[
                Part[
                 Hold[{}], {1}, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   Blank[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
             "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
          CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              If[False, Identity, First][
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{
                GeometricAssertion[
                 
                 Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], "Regular"], 
                Element[$CellContext`e, 
                 
                 Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
                Element[$CellContext`f, 
                 
                 Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`e}], 
                  Line[{$CellContext`e, $CellContext`f}]}, "Perpendicular"], 
                GeometricAssertion[{
                  Line[{$CellContext`e, $CellContext`f}], 
                  Line[{$CellContext`f, $CellContext`c}]}, "Perpendicular"], 
                EuclideanDistance[$CellContext`a, $CellContext`e] == 9, 
                EuclideanDistance[$CellContext`e, $CellContext`f] == 5, 
                EuclideanDistance[$CellContext`f, $CellContext`c] == 3}], 
              Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              First[
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{
                GeometricAssertion[
                 
                 Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], "Regular"], 
                Element[$CellContext`e, 
                 
                 Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
                Element[$CellContext`f, 
                 
                 Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`e}], 
                  Line[{$CellContext`e, $CellContext`f}]}, "Perpendicular"], 
                GeometricAssertion[{
                  Line[{$CellContext`e, $CellContext`f}], 
                  Line[{$CellContext`f, $CellContext`c}]}, "Perpendicular"], 
                EuclideanDistance[$CellContext`a, $CellContext`e] == 9, 
                EuclideanDistance[$CellContext`e, $CellContext`f] == 5, 
                EuclideanDistance[$CellContext`f, $CellContext`c] == 3}], 
              Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
          "Paste Parameters" :> CellPrint[
            ExpressionCell[
             If[False, Identity, First][
              Transpose[
               MapThread[Construct, {
                 Map[ReplaceAll, {
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                 Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]],
              "Input"]], "Paste Hypotheses" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{
                GeometricAssertion[
                 
                 Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], "Regular"], 
                Element[$CellContext`e, 
                 
                 Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
                Element[$CellContext`f, 
                 
                 Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`e}], 
                  Line[{$CellContext`e, $CellContext`f}]}, "Perpendicular"], 
                GeometricAssertion[{
                  Line[{$CellContext`e, $CellContext`f}], 
                  Line[{$CellContext`f, $CellContext`c}]}, "Perpendicular"], 
                EuclideanDistance[$CellContext`a, $CellContext`e] == 9, 
                EuclideanDistance[$CellContext`e, $CellContext`f] == 5, 
                EuclideanDistance[$CellContext`f, $CellContext`c] == 3}]], 
             "Input"]], "Paste Conclusions" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
            ExpressionCell[
             FindGeometricConjectures[
              PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
              GeometricScene][
               If[
               False, {{{$CellContext`a -> {-0.08566272553481506, 
                    7.344606265827502}, $CellContext`b -> {-6.274225150321999,
                     0.5474233850663704}, $CellContext`c -> {
                    0.5229577304391317, -5.641139039720812}, $CellContext`d -> \
{6.711520155226315, 
                    1.156043841040318}, $CellContext`e -> \
{-3.1544646752655123`, -1.1160352342792763`}, $CellContext`f -> {
                    1.5458917136826975`, -2.820925206351886}, 
                   C["GeometricPoint"][
                    C["Unspecified"][
                    "regular", 
                    "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> {
                    0.21864750245215803`, 0.8517336130533446}}, {
                  C["GeometricQuantity"][
                    C["Unspecified"][
                    "regular orientation", 
                    "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 1., 
                   C["GeometricQuantity"][
                    C["Unspecified"][
                    "regular radius", 
                    "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 6.5, 
                   C["GeometricQuantity"][
                    C["Unspecified"][
                    "regular theta", 
                    "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 
                   1.6176304042872502`}}}, 
                
                First[{{{$CellContext`a -> {-0.08566272553481506, 
                    7.344606265827502}, $CellContext`b -> {-6.274225150321999,
                     0.5474233850663704}, $CellContext`c -> {
                    0.5229577304391317, -5.641139039720812}, $CellContext`d -> \
{6.711520155226315, 
                    1.156043841040318}, $CellContext`e -> \
{-3.1544646752655123`, -1.1160352342792763`}, $CellContext`f -> {
                    1.5458917136826975`, -2.820925206351886}, 
                    C["GeometricPoint"][
                    C["Unspecified"][
                    "regular", 
                    "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> {
                    0.21864750245215803`, 0.8517336130533446}}, {
                   C["GeometricQuantity"][
                    C["Unspecified"][
                    "regular orientation", 
                    "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 1., 
                    C["GeometricQuantity"][
                    C["Unspecified"][
                    "regular radius", 
                    "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 6.5, 
                    C["GeometricQuantity"][
                    C["Unspecified"][
                    "regular theta", 
                    "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 
                    1.6176304042872502`}}}]], 
               Hold[{
                 GeometricAssertion[
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], "Regular"], 
                 Element[$CellContext`e, 
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
                 Element[$CellContext`f, 
                  
                  Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
                 GeometricAssertion[{
                   Line[{$CellContext`a, $CellContext`e}], 
                   Line[{$CellContext`e, $CellContext`f}]}, "Perpendicular"], 
                 GeometricAssertion[{
                   Line[{$CellContext`e, $CellContext`f}], 
                   Line[{$CellContext`f, $CellContext`c}]}, "Perpendicular"], 
                 EuclideanDistance[$CellContext`a, $CellContext`e] == 9, 
                 EuclideanDistance[$CellContext`e, $CellContext`f] == 5, 
                 EuclideanDistance[$CellContext`f, $CellContext`c] == 3}]]], 
             "Input"]]}, Appearance -> None, MenuAppearance -> "Menu"], 
        "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
     Grid[{{
        PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
        If[False, 
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 37.5},
             Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"],
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 1.5]], 
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
          Dynamic[
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
        PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
         Opacity[0]]}, 
       If[
        And[False, False], {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
        Nothing]}, Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              10], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        EventHandler[
         Dynamic[
          If[
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
         "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
           Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
        "LinkHand"], 
       MouseAppearance[
        Dynamic[
         Which[
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          EventHandler[
           Dynamic[PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
           "MouseClicked" :> (
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
             PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}, 
           Method -> "Queued"], True, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{0, -1}, {1, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Line[{{-0.5, 0}, {0.5, 0}}], 
             Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
          AspectRatio -> Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
               PlaneGeometry`GeometrySceneDrawerDump`q}, {
              PlaneGeometry`GeometrySceneDrawerDump`q, 
               Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {0, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
          Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                PlaneGeometry`GeometrySceneDrawerDump`q}, {
               PlaneGeometry`GeometrySceneDrawerDump`q, 
                Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Arrowheads[{{1, 1, 
                Graphics[
                 Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
             Arrow[
              BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
          ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
          None], {"MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
           PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
             PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
        "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
       Grid[{{
          Graphics[{{
             GrayLevel[1], 
             
             Rectangle[{-
               Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                 10], -1}, {
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style["", Larger, 
               GrayLevel[0]], {0, 0}]}}, 
           ImageSize -> {
            20 Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
             20}, AspectRatio -> Full, PlotRangePadding -> None], 
          MouseAppearance[
           EventHandler[
            Dynamic[
             If[
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
            "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
              Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
           "LinkHand"], 
          MouseAppearance[
           Dynamic[
            Which[
            PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             EventHandler[
              Dynamic[
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
                PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)\
}, Method -> "Queued"], True, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]]\
, "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{0, -1}, {1, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.5, 0}, {0.5, 0}}], 
                Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {0, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                   PlaneGeometry`GeometrySceneDrawerDump`q}, {
                  PlaneGeometry`GeometrySceneDrawerDump`q, 
                   Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Arrowheads[{{1, 1, 
                   Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                Arrow[
                 BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
             ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
             None], {"MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
              PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
           "LinkHand"]}}, Spacings -> {0, 0}]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
     Grid[
      If[False, {{
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
         Grid[{{
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Style["Conclusion", Larger, Bold, 
              GrayLevel[0.6]], 5], 
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
             Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}}, 
          Spacings -> {0, 0}]}, {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
          Pane[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
            PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
           ImageSize -> {
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5}, 
           Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"], 
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 1.5]}}, {{}}
       ], Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
     MouseAppearance[
      Piecewise[{{
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
            False)}, PassEventsDown -> True], 
         And[
          Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
          PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
            Null)}, PassEventsDown -> True], 
         And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
        True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
          PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
        PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
         PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
          PlaneGeometry`GeometrySceneDrawerDump`step$$, 
          PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
          TimeConstrained[
           Fold[
           PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
            PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            
            Transpose[{
             PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
              PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
              PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
           PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
           Flatten[
            ReplaceAll[
             ReplaceAll[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 C["GeometricPoint"][
                  BlankNullSequence[]]] -> 
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                 Blank[]]) :> 
              Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                 PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                PlaneGeometry`GeometrySceneDrawerDump`c]], 
             Apply[
             Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
          Flatten[
           ReplaceAll[
            ReplaceAll[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                C["GeometricPoint"][
                 BlankNullSequence[]]] -> 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                Blank[]]) :> 
             Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                PlaneGeometry`GeometrySceneDrawerDump`x] -> 
               PlaneGeometry`GeometrySceneDrawerDump`c]], 
            Apply[
            Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
       PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
        ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
            And[
            False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
        ReplaceAll[{
          PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Apply[Rule, 
           Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
           1}]]; Part[
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
          ReplaceAll[
           Normal[
            AssociationMap[
            PlaneGeometry`GeometrySceneDrawerDump`point, 
             PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
          Select[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
           PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
            First[#]]& ]}; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
       PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
      "DragGraphics"], SynchronousUpdating -> False], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
     Panel[
      Grid[{{
         Text[
          Style["Points", Bold]]}, {
         Grid[{{
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 1]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 2]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 3]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 4]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 5]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   5], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 6]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   6], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], Not]}, 
              PassEventsUp -> False], "LinkHand"]}}]}, {
         Grid[{{
            Graphics[{
              Hue[0.64, 0.71, 0.37], 
              AbsolutePointSize[11], 
              Point[{0, 0}], 
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
            Graphics[{
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
       Alignment -> Left, Dividers -> False], Background -> GrayLevel[0.9]], {
     "MouseClicked" :> (
       PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
       NotebookDelete[
        PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
    PlaneGeometry`GeometrySceneDrawerDump`display$$, 
    PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = MouseAppearance[
     Dynamic[
      EventHandler[
       Tooltip[
        Append[
         PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
          Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           If[
            And[
            False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
         PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
          PlaneGeometry`GeometrySceneDrawerDump`size$$}], "Show Controls"], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
       PassEventsUp -> False]], "LinkHand"], 
    PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1.5}, {1, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1.5}, {0, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
       RGBColor[0.161, 0.667, 0.887], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
    Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {1, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Line[{{-0.5, 0}, {0.5, 0}}], 
        Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {0, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Arrowheads[{{1, 1, 
           Graphics[
            Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
        Arrow[
         BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
     ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4, 5, 
    6}}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" a ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" b ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" c ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" d ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" e ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" f ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Polygon[{{-0.08566272553481506, 
          7.344606265827502}, {-6.274225150321999, 0.5474233850663704}, {
          0.5229577304391317, -5.641139039720812}, {6.711520155226315, 
          1.156043841040318}}]}, {{
          Opacity[0], 
          Circle[{-6.274225150321999, 0.5474233850663704}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         Line[{
           
           Offset[{8.092735478567853, 8.88862376714917}, {-6.274225150321999, 
            0.5474233850663704}], 
           
           Offset[{16.981359245717023`, 
            0.795888288581315}, {-6.274225150321999, 0.5474233850663704}], 
           
           Offset[{8.888623767149172, -8.092735478567855}, \
{-6.274225150321999, 0.5474233850663704}]}]}, {{
          Opacity[0], 
          Circle[{0.5229577304391317, -5.641139039720812}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         Line[{
           
           Offset[{-8.888623767149172, 8.092735478567855}, {
            0.5229577304391317, -5.641139039720812}], 
           
           Offset[{-0.7958882885813168, 16.981359245717027`}, {
            0.5229577304391317, -5.641139039720812}], 
           
           Offset[{8.092735478567855, 8.888623767149172}, {
            0.5229577304391317, -5.641139039720812}]}]}, {{
          Opacity[0], 
          Circle[{6.711520155226315, 1.156043841040318}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         Line[{
           
           Offset[{-8.092735478567855, -8.888623767149172}, {
            6.711520155226315, 1.156043841040318}], 
           
           Offset[{-16.981359245717027`, -0.795888288581315}, {
            6.711520155226315, 1.156043841040318}], 
           
           Offset[{-8.888623767149172, 8.092735478567857}, {6.711520155226315,
             1.156043841040318}]}]}, {{
          Opacity[0], 
          Circle[{-0.08566272553481506, 7.344606265827502}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         Line[{
           
           Offset[{8.888623767149172, -8.092735478567857}, \
{-0.08566272553481506, 7.344606265827502}], 
           
           Offset[{0.7958882885813185, -16.981359245717027`}, \
{-0.08566272553481506, 7.344606265827502}], 
           
           Offset[{-8.092735478567853, -8.88862376714917}, \
{-0.08566272553481506, 7.344606265827502}]}]}, {
         Line[{{-0.08566272553481506, 
          7.344606265827502}, {-3.1544646752655123`, \
-1.1160352342792763`}}]}, {
         Line[{{-3.1544646752655123`, -1.1160352342792763`}, {
          1.5458917136826975`, -2.820925206351886}}]}, {
         Line[{{1.5458917136826975`, -2.820925206351886}, {
          0.5229577304391317, -5.641139039720812}}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-3.1544646752655123`, -1.1160352342792763`}]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-3.1544646752655123`, -1.1160352342792763`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-3.1544646752655123`, -1.1160352342792763`}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{1.5458917136826975`, -2.820925206351886}]}, 
         Inset[
          Style[" f ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          1.5458917136826975`, -2.820925206351886}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{1.5458917136826975`, -2.820925206351886}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-0.08566272553481506, 7.344606265827502}]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-0.08566272553481506, 7.344606265827502}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-0.08566272553481506, 7.344606265827502}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-6.274225150321999, 0.5474233850663704}]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-6.274225150321999, 0.5474233850663704}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-6.274225150321999, 0.5474233850663704}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{0.5229577304391317, -5.641139039720812}]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          0.5229577304391317, -5.641139039720812}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{0.5229577304391317, -5.641139039720812}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{6.711520155226315, 1.156043841040318}]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          6.711520155226315, 1.156043841040318}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{6.711520155226315, 1.156043841040318}]}}}, {}}}, Background -> 
     GrayLevel[1], {
     PlotRange -> {{-7.872799680876831, 
       8.310094685781145}, {-7.239713570275644, 8.943180796382332}}, 
      ImageSize -> {{380, 380}, {380, 380}}}], 
    PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[589105]}, 
    StyleBox[
     FrameBox[
      PaneBox[
       PaneSelectorBox[{False->
        DynamicBox[ToBoxes[
          If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
           Column[{
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
             Pane[
             PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
              Dynamic[PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                   First[#], 205] {1, 1})& ], ImageSizeAction -> 
              "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
           PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
          StandardForm],
         ImageSizeCache->{414., {235.3340332872234, 241.06596671277657`}}], 
        True->
        TagBox[
         DynamicBox[ToBoxes[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
           StandardForm],
          ImageSizeCache->{380., {217.3340332872234, 223.06596671277657`}}],
         MouseAppearanceTag["Arrow"]]}, Dynamic[
         CurrentValue["MouseOver"]],
        FrameMargins->0,
        ImageSize->All],
       ImageSize->Dynamic[
        PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
             And[False, False], 30, 0] + If[False, 50, 0]}],
       ScrollPosition->{0., 3.5}],
      FrameStyle->GrayLevel[0.9],
      StripOnInput->False],
     StripOnInput->False,
     DynamicEvaluationTimeout->20,
     ImageSize->Automatic,
     BaseStyle -> {
      SetterBoxOptions -> {ImageSize -> Automatic}, 
       PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
    DynamicModuleValues:>{},
    Initialization:>(GeometricScene; 
     PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  GeometricScene[{{$CellContext`a -> {-0.08566272553481506, 
      7.344606265827502}, $CellContext`b -> {-6.274225150321999, 
      0.5474233850663704}, $CellContext`c -> {
      0.5229577304391317, -5.641139039720812}, $CellContext`d -> {
      6.711520155226315, 
      1.156043841040318}, $CellContext`e -> {-3.1544646752655123`, \
-1.1160352342792763`}, $CellContext`f -> {
      1.5458917136826975`, -2.820925206351886}, C["GeometricPoint"][
       C["Unspecified"][
       "regular", 
        "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> {
      0.21864750245215803`, 0.8517336130533446}}, {C["GeometricQuantity"][
       C["Unspecified"][
       "regular orientation", 
        "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 1., 
     C["GeometricQuantity"][
       C["Unspecified"][
       "regular radius", 
        "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 6.5, 
     C["GeometricQuantity"][
       C["Unspecified"][
       "regular theta", 
        "{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][c], C[\"GeometricPoint\"][d]}"]] -> 
     1.6176304042872502`}}, {
    GeometricAssertion[
     Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}], "Regular"], 
    Element[$CellContext`e, 
     Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
    Element[$CellContext`f, 
     Polygon[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d}]], 
    GeometricAssertion[{
      Line[{$CellContext`a, $CellContext`e}], 
      Line[{$CellContext`e, $CellContext`f}]}, "Perpendicular"], 
    GeometricAssertion[{
      Line[{$CellContext`e, $CellContext`f}], 
      Line[{$CellContext`f, $CellContext`c}]}, "Perpendicular"], 
    EuclideanDistance[$CellContext`a, $CellContext`e] == 9, 
    EuclideanDistance[$CellContext`e, $CellContext`f] == 5, 
    EuclideanDistance[$CellContext`f, $CellContext`c] == 3}, {}],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.830271601777012*^9, 3.8302716616021*^9, {3.8302830844445906`*^9, 
   3.8302830870680847`*^9}, 3.830352164313051*^9, 3.830352263966474*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"f5c13a4b-de3f-486c-993b-08b7f07d0608"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "[", "\"\<Points\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8302716136553698`*^9, 3.8302716164381204`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"fe929204-c1e3-4d4d-99d2-885729c9ca50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.08566272553481506`"}], ",", "7.344606265827502`"}], 
     "}"}]}], ",", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6.274225150321999`"}], ",", "0.5474233850663704`"}], 
     "}"}]}], ",", 
   RowBox[{"c", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.5229577304391317`", ",", 
      RowBox[{"-", "5.641139039720812`"}]}], "}"}]}], ",", 
   RowBox[{"d", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"6.711520155226315`", ",", "1.156043841040318`"}], "}"}]}], ",", 
   RowBox[{"e", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.1544646752655123`"}], ",", 
      RowBox[{"-", "1.1160352342792763`"}]}], "}"}]}], ",", 
   RowBox[{"f", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1.5458917136826975`", ",", 
      RowBox[{"-", "2.820925206351886`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{
     TemplateBox[{"\"GeometricPoint\""},
      "C"], "[", 
     RowBox[{
      TemplateBox[{"\"Unspecified\""},
       "C"], "[", 
      RowBox[{"\<\"regular\"\>", 
       ",", "\<\"{C[\\\"GeometricPoint\\\"][a], C[\\\"GeometricPoint\\\"][b], \
C[\\\"GeometricPoint\\\"][c], C[\\\"GeometricPoint\\\"][d]}\"\>"}], "]"}], 
     "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.21864750245215803`", ",", "0.8517336130533446`"}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.830271616758969*^9, {3.8302716489803886`*^9, 3.830271665216936*^9}, 
   3.830283094927349*^9, 3.830352268906416*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"f19cb5c5-073c-479b-96b9-1cd917921675"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Area", "[", 
  RowBox[{
   RowBox[{"Polygon", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "]"}], "/.", "%54"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.830271764090353*^9, 3.8302717750731635`*^9}, {
   3.830271836092556*^9, 3.8302718414369946`*^9}, {3.8302831029736767`*^9, 
   3.830283107286995*^9}, 3.830352280559989*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"3150d87f-0156-47b0-8036-f7244ae10ea1"],

Cell[BoxData["84.5`"], "Output",
 CellChangeTimes->{{3.8302831043068323`*^9, 3.8302831078021746`*^9}, {
  3.8303522723005576`*^9, 3.83035228172729*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"7c22dfb4-72ab-4e15-afe5-08c1dbe8d963"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4b24fc4d-c72a-44e3-ad71-a20cc0b8a8b7"],

Cell[CellGroupData[{

Cell["\:7248\:672c12.3\:65b0\:529f\:80fd\:ff1aGeometricTest", "Section",
 CellChangeTimes->{{3.8302743831481295`*^9, 
  3.8302744099906883`*^9}},ExpressionUUID->"8df39070-61d7-4ba0-a5fe-\
e5828ab358fd"],

Cell[TextData[StyleBox["\:7ed9\:51fa\:5177\:4f53\:5750\:6807\:ff0c\:5224\:65ad\
\:662f\:5426\:6ee1\:8db3\:7ed9\:51fa\:7684\:6761\:4ef6\:ff1a",
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0.5019607843137255, 1.]]], "Text",
 CellChangeTimes->{{3.8302744676952486`*^9, 3.830274508432606*^9}, {
  3.8302747107468014`*^9, 3.8302747314580946`*^9}},
 FontSize->18,
 FontColor:>Dynamic[
   CurrentValue[{
    StyleHints, "ColorSet", 
     "Display3"}]],ExpressionUUID->"d5c56d3f-a9bc-4e97-8b06-3c8766016eb7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeometricTest", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "}"}], ",", "\"\<Collinear\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.830274414242153*^9, 3.830274422739741*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"2fc7a7a3-4649-47e9-9ba9-f37ea29fee7c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.830274424700261*^9, 3.8303521319130955`*^9, 
  3.8303522904667764`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"8852307f-4da9-4acb-87cd-38eadc21d5ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeometricTest", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"InfiniteLine", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"InfiniteLine", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
   "\"\<Parallel\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.825089280592108*^9, 3.8250893448008537`*^9}},
 CellLabel->"In[58]:=",
 CellID->1224787729,ExpressionUUID->"f1f20cb5-e449-4ad0-ab68-d4b5839be5c2"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8302747976722765`*^9, 3.8303521339994087`*^9, 
  3.8303522927339334`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"1495476c-0fc3-44d6-8217-3bfbd3d0520e"]
}, Open  ]],

Cell[TextData[{
 "\n",
 StyleBox["\:5bf9\:4e8e\:4e00\:4e2a\:62bd\:8c61\:7684\:70b9\:ff0c\:5f97\:5230\
\:6ee1\:8db3\:6761\:4ef6\:7684\:8868\:8fbe\:5f0f\:ff1a",
  FontWeight->"Bold",
  FontColor->RGBColor[0., 0.5019607843137255, 1.]]
}], "Text",
 CellChangeTimes->{{3.8302746649739428`*^9, 3.830274698063763*^9}, 
   3.830274831337621*^9},
 FontSize->18,
 FontColor:>Dynamic[
   CurrentValue[{
    StyleHints, "ColorSet", 
     "Display3"}]],ExpressionUUID->"a3d8f385-0a34-40e6-836f-05fb53fc4ec3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeometricTest", "[", 
  RowBox[{
   RowBox[{"Polygon", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "7"}], "}"}]}], "}"}], "]"}], ",", 
   "\"\<Convex\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8248136940020475`*^9, 3.824813729606705*^9}, {
  3.8248646109784408`*^9, 3.8248646312960453`*^9}, {3.824864806048169*^9, 
  3.824864824597325*^9}, {3.824864971919942*^9, 3.8248649968816347`*^9}, {
  3.824865028367326*^9, 3.824865040141301*^9}},
 CellLabel->"In[59]:=",
 CellID->38960964,ExpressionUUID->"78c7d770-b2c2-4cc1-934b-fbd7dee6b58b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1", "+", 
    RowBox[{"5", " ", "a"}]}], "<", 
   RowBox[{"3", " ", "b"}]}], "&&", 
  RowBox[{
   RowBox[{"3", "+", "a"}], "<", 
   RowBox[{"2", " ", "b"}]}], "&&", 
  RowBox[{
   RowBox[{"4", " ", "a"}], "<", 
   RowBox[{"9", "+", "b"}]}]}]], "Output",
 CellChangeTimes->{
  3.824813731430854*^9, {3.824864620089299*^9, 3.8248646322236385`*^9}, 
   3.8248648257602143`*^9, {3.824864980348401*^9, 3.8248649978581514`*^9}, {
   3.8248650320257654`*^9, 3.824865041113701*^9}, 3.825089044845992*^9, 
   3.82569408313239*^9, 3.830274801393648*^9, 3.8303522949785476`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"d36f8e13-b26e-4a9d-b9f8-bdd2fa60b452"]
}, Open  ]],

Cell[TextData[{
 "\n",
 StyleBox["\:5bf9\:4e8e\:62bd\:8c61\:7684\:51e0\:4f55\:6982\:5ff5\:ff0c\:5f97\
\:5230\:6ee1\:8db3\:6761\:4ef6\:7684\:8868\:8fbe\:5f0f\:ff1a",
  FontWeight->"Bold",
  FontColor->RGBColor[0., 0.5019607843137255, 1.]]
}], "Text",
 CellChangeTimes->{{3.8302745269543552`*^9, 3.830274562444809*^9}, 
   3.830274834133091*^9},
 FontSize->18,
 FontColor:>Dynamic[
   CurrentValue[{
    StyleHints, "ColorSet", 
     "Display3"}]],ExpressionUUID->"73db771b-74d1-4516-9a20-23ebcc8a83b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeometricTest", "[", 
  RowBox[{
   RowBox[{"Point", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Inside\>\"", ",", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"c", ",", "d"}], "}"}], ",", "r"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.830274414242153*^9, 3.83027443486841*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"56b4f589-cb24-4939-bb39-e5990781240f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"a", "-", "c"}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"b", "-", "d"}], ")"}], "2"]}], "\[LessEqual]", 
  SuperscriptBox["r", "2"]}]], "Output",
 CellChangeTimes->{3.8302744357524405`*^9, 3.8303522976494436`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"f0e91b80-893a-460c-b88c-5c94c5b1ebae"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellChangeTimes->{{3.830274369915546*^9, 3.8302743724606543`*^9}},
 CellTags->{
  "SlideShowHeader", 
   "2020928172014.0081744"},ExpressionUUID->"8a5ce841-a395-4b45-a907-\
8d19b3db1c84"],

Cell[CellGroupData[{

Cell["\:51e0\:4f55\:5b9e\:4f53\:6982\:8ff0 \:548c \:6b27\:51e0\:91cc\:5f97\
\:7684\:53ef\:8ba1\:7b97\:7248\:672c", "Section",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 
     0.039999999999999994` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.029289639344262295` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.07 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{
  3.559948400406288*^9, {3.699269571766136*^9, 3.699269573578824*^9}, {
   3.7099080105038958`*^9, 3.7099080108133383`*^9}, {3.727189496068931*^9, 
   3.7271894962748613`*^9}, {3.809975105604204*^9, 3.809975105930004*^9}, {
   3.809976802465493*^9, 3.8099768111381454`*^9}, {3.8103156107152605`*^9, 
   3.8103156129758825`*^9}, {3.81031865659543*^9, 3.8103186567983074`*^9}, {
   3.830274886205118*^9, 3.8302748898691173`*^9}, {3.8302751810032606`*^9, 
   3.8302751967805295`*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"8f435092-f1a4-4814-97c1-\
a76dc3f5ca14"],

Cell[CellGroupData[{

Cell["Wolfram\:77e5\:8bc6\:5e93\:5185\:7684\:51e0\:4f55\:5b9e\:4f53", \
"Subsection",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 
     0.039999999999999994` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.029289639344262295` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.07 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.781021597421727*^9, 3.781021632450542*^9}, {
  3.830275219609306*^9, 3.830275262568843*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"81da86ba-5cbb-466d-b7a7-\
dee0bc1e9648"],

Cell["\:6211\:4eec\:6301\:7eed\:5730\:5411\:77e5\:8bc6\:5e93\:5185\:6dfb\:52a0\
\:7ecf\:5178\:5e73\:9762\:51e0\:4f55\:5b9a\:7406", "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.781020992014144*^9, 3.7810210289714317`*^9}, {
   3.781021068497176*^9, 3.781021089996278*^9}, {3.781021137235029*^9, 
   3.7810211561176987`*^9}, {3.781021188745716*^9, 3.781021236385388*^9}, 
   3.781021661551169*^9, {3.8099788414246397`*^9, 3.809978855317103*^9}, 
   3.810318711770937*^9, {3.830275269357257*^9, 3.8302752894662085`*^9}, {
   3.830283206790601*^9, 3.8302832088785944`*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"a897c1af-bd2c-4285-bfa0-\
66ddd9afab01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{"\"\<GeometricScene\>\"", ",", "\"\<EntityCount\>\""}], 
  "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.781020995727317*^9, 3.78102100675141*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->"In[63]:=",ExpressionUUID->"20090602-7437-4fcd-aaba-f1a0b988c0b2"],

Cell[BoxData["483"], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{
  3.781021009051491*^9, 3.781282735912199*^9, 3.8099786381525335`*^9, 
   3.811072093724558*^9, {3.8303565314435606`*^9, 3.830356536561181*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->"Out[63]=",ExpressionUUID->"bc30fc2d-72db-4955-8198-fc103c0997de"]
}, Open  ]],

Cell[TextData[{
 "\:6bcf\:4e2a",
 Cell[BoxData[
 "Entity"],ExpressionUUID->"a06374d5-fe4a-42fa-9cfa-715335e29f4a"],
 "\:7528\:6765\:8868\:8fbe\:4e00\:4e2a\:573a\:666f\:3002\:4f7f\:7528",
 Cell[BoxData[
 "EntityValue"],ExpressionUUID->"67dbaa9c-b37e-4d1d-89dc-41bc24921134"],
 "\:53ef\:5f97\:4e00\:4e2a\:5b8c\:6574\:7684\:5217\:8868:"
}], "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.781021239929715*^9, 3.781021288864091*^9}, {
  3.8302753279078283`*^9, 3.8302753693697796`*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"01b8911a-b462-4443-ba12-\
708ef613a1db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityValue", "[", 
   RowBox[{"\"\<GeometricScene\>\"", ",", "\"\<Entities\>\""}], "]"}], "//", 
  "Shallow"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.7810212908943863`*^9, 3.781021310060226*^9}, {
  3.809978885983241*^9, 3.809978899767761*^9}, {3.809982015193116*^9, 
  3.809982015484936*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->"In[64]:=",ExpressionUUID->"8c468b11-f689-44b8-86fa-d36d0cd9a2ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"AAA theorem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"AAATheorem\""}], "]"}], 
     "\"Entity[\\\"GeometricScene\\\", \\\"AAATheorem\\\"]\"", 
     "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"AAA theorem converse\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"AAATheoremConverse\""}], "]"}], 
     "\"Entity[\\\"GeometricScene\\\", \\\"AAATheoremConverse\\\"]\"", 
     "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"AAS theorem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"AASTheorem\""}], "]"}], 
     "\"Entity[\\\"GeometricScene\\\", \\\"AASTheorem\\\"]\"", 
     "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"area principle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"AreaPrinciple\""}], "]"}], 
     "\"Entity[\\\"GeometricScene\\\", \\\"AreaPrinciple\\\"]\"", 
     "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"ASA theorem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"ASATheorem\""}], "]"}], 
     "\"Entity[\\\"GeometricScene\\\", \\\"ASATheorem\\\"]\"", 
     "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"ASS theorem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"ASSTheorem\""}], "]"}], 
     "\"Entity[\\\"GeometricScene\\\", \\\"ASSTheorem\\\"]\"", 
     "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Apollonius' theorem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"ApolloniusTheorem\""}], "]"}], 
     "\"Entity[\\\"GeometricScene\\\", \\\"ApolloniusTheorem\\\"]\"", 
     "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Archimedes' midpoint theorem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"ArchimedesMidpointTheorem\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"ArchimedesMidpointTheorem\
\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Barrow's equality\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"BarrowsEquality\""}], "]"}], 
     "\"Entity[\\\"GeometricScene\\\", \\\"BarrowsEquality\\\"]\"", 
     "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Barrow's equality converse\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"BarrowsEqualityConverse\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"BarrowsEqualityConverse\\\
\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   RowBox[{"\[LeftSkeleton]", "473", "\[RightSkeleton]"}]}], "}"}]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{
  3.781021310373775*^9, 3.7812827391310062`*^9, {3.8099788758614655`*^9, 
   3.809978900231476*^9}, 3.8099820167171745`*^9, 3.811072097486141*^9, 
   3.830356539677907*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "Out[64]//Shallow=",ExpressionUUID->"3956ea48-b6ce-425d-9963-e2b669c3862d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellChangeTimes->{{3.8099821987347827`*^9, 3.8099822057254663`*^9}},
 CellTags->{
  "SlideShowHeader", 
   "2020928172014.0081744"},ExpressionUUID->"ab627d15-d3c5-4b89-9c2c-\
25f6fb2a4328"],

Cell[CellGroupData[{

Cell["\:5b9e\:4f53\:7684\:5c5e\:6027", "Subsubsection",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0073224 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.809983094965801*^9, 3.8099831093319273`*^9}, {
  3.8302753944140177`*^9, 3.8302753959143353`*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"03429a65-def9-4648-b1d9-\
0d5af131da02"],

Cell[TextData[{
 "\:901a\:8fc7 ",
 Cell[BoxData[
 "EntityValue"],ExpressionUUID->"96586084-b12b-4d6e-9c78-f8a77b3245f3"],
 " \:6216\:8005 ",
 Cell[BoxData[
 "EntityProperties"],ExpressionUUID->"5d49d265-3683-40ba-9b20-e73ffab4aad9"],
 " \:53ef\:4ee5\:5f97\:5230\:5b9e\:4f53\:6761\:76ee\:7684\:5c5e\:6027:"
}], "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.810318848979353*^9, 3.810318938051785*^9}, {
  3.8302754355051727`*^9, 3.8302754550787697`*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"4e781cd4-0d52-45e2-8d34-\
b97d4987aa3b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"Entity", "[", "\"\<GeometricScene\>\"", "]"}], ",", 
   "\"\<Properties\>\""}], "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8099792834512672`*^9, 3.8099792954239073`*^9}, {
  3.8099830589750223`*^9, 3.8099830611676674`*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->"In[65]:=",ExpressionUUID->"40b48c17-f9ee-4c18-84da-654e02c815f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"alternate names\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"AlternateNames\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"AlternateNames\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"alternate scenes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"AlternateScenes\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"AlternateScenes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"alternate statements\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"AlternateStatements\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \
\\\"AlternateStatements\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"entity classes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EntityClasses\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"EntityClasses\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"eponymous people\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EponymousPeople\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"EponymousPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"formulation dates\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"FormulationDates\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"FormulationDates\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"formulation sources\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"FormulationSources\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"FormulationSources\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"formulators\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Formulators\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"Formulators\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"statement in Greek\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"GreekStatement\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"GreekStatement\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Heath's translation of Greek statement\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"HeathsStatement\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"HeathsStatement\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"related MathWorld terms\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"MathWorld\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"MathWorld\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Name\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"Name\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"proof dates\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"ProofDates\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"ProofDates\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"proof sources\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"ProofSources\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"ProofSources\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"provers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Provers\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"Provers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"related Wolfram Demonstrations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"RelatedDemonstrations\""}], 
       "]"}], "\"EntityProperty[\\\"GeometricScene\\\", \
\\\"RelatedDemonstrations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"related geometric scenes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"RelatedScenes\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"RelatedScenes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"scene\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Scene\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"Scene\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"statement\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Statement\""}], "]"}], 
     "\"EntityProperty[\\\"GeometricScene\\\", \\\"Statement\\\"]\""},
    "EntityProperty"]}], "}"}]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8099792867282486`*^9, 3.8099792959575787`*^9}, 
   3.809983061750307*^9, 3.8110721004831305`*^9, 3.8303565453409853`*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->"Out[65]=",ExpressionUUID->"fd315080-7a92-40de-87b7-ee941b21b43e"]
}, Open  ]],

Cell[TextData[{
 "\:901a\:8fc7 ",
 Cell[BoxData[
 "RandomEntity"],ExpressionUUID->"13f2ca63-240c-4c8e-956d-361c559b63c1"],
 " \:6216\:8005 ",
 Cell[BoxData[
 "EntityValue"],ExpressionUUID->"ef2b191f-1c78-4e7f-8c6c-dd835fd11379"],
 " \:53ef\:4ee5\:83b7\:5f97\:4e00\:4e2a\:968f\:673a\:7684\:5b9e\:4f53:"
}], "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.781021437760222*^9, 3.781021499351502*^9}, {
  3.830275467750108*^9, 3.8302754893208847`*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"725febc4-7b28-4294-8920-\
3c68a44853a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"entity", "=", 
  RowBox[{"RandomEntity", "[", "\"\<GeometricScene\>\"", "]"}]}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.809983357026945*^9, 3.809983377867082*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "In[108]:=",ExpressionUUID->"9163d795-035f-49af-b825-24702f385294"],

Cell[BoxData[
 TemplateBox[{"\"Pythagorean theorem\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"GeometricScene\"", ",", "\"PythagoreanTheorem\""}], "]"}], 
   "\"Entity[\\\"GeometricScene\\\", \\\"PythagoreanTheorem\\\"]\"", 
   "\"geometric scene\""},
  "Entity"]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.80998337024879*^9, 3.809983413160412*^9}, {
   3.809983459079219*^9, 3.809983485097975*^9}, 3.8101602579950876`*^9, {
   3.8103142156855373`*^9, 3.8103142226057167`*^9}, {3.8103145718848047`*^9, 
   3.8103148027140093`*^9}, {3.8110721039768467`*^9, 3.811072116881793*^9}, {
   3.830275720301753*^9, 3.830275768813162*^9}, {3.8302759724482317`*^9, 
   3.8302761036931753`*^9}, 3.8303565279532986`*^9, {3.8303565594524384`*^9, 
   3.830356675783978*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "Out[108]=",ExpressionUUID->"ed8ab860-077b-4bb9-a931-13db05abafdf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{"\"\<GeometricScene\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<RandomEntities\>\"", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019523390754912103` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.03660632078593589 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.811072251467819*^9, 3.811072251589742*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"697fe191-a5db-402e-a681-b073d06553d0"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"\"Oppenheim-Mordell equality converse\"", 
    RowBox[{"Entity", "[", 
      RowBox[{
       "\"GeometricScene\"", ",", "\"Oppenheim-MordellEqualityConverse\""}], 
      "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"Oppenheim-MordellEqualityConverse\\\"]\"", "\"geometric scene\""},
   "Entity"], "}"}]], "Output",
 CellChangeTimes->{3.8303566535400643`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"1db289b7-b0c3-4623-8ae5-6c8ec8d6ef65"]
}, Closed]],

Cell["\:5b9e\:4f53\:5c5e\:6027\[LongDash]\[LongDash]\:9648\:8ff0:", "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8099836269826126`*^9, 3.8099836445907364`*^9}, 
   3.8099837582764816`*^9, {3.810320358549384*^9, 3.8103203734281836`*^9}, {
   3.830275581974244*^9, 3.8302755982150106`*^9}, {3.830275711864215*^9, 
   3.830275713968026*^9}, 3.8302794998977566`*^9},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"ca5b1f80-2d45-4915-aa03-\
f32a3e1476c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityValue", "[", 
   RowBox[{"entity", ",", "\"\<Statement\>\""}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8099833393568583`*^9, 3.8099833404351945`*^9}, {
  3.8099834024510746`*^9, 3.8099834040041156`*^9}, {3.810160261249077*^9, 
  3.81016026402936*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "In[109]:=",ExpressionUUID->"fbdd6b4a-ad6e-4dfc-b88d-9e9377d52703"],

Cell[BoxData[
 FormBox[
  InterpretationBox[Cell["\<\
The square of the hypotenuse of a right triangle is equal to the sum of the \
squares of the other two sides.\
\>",
    TextJustification->0,ExpressionUUID->
    "c163a36d-368c-4376-9e0c-fc333fbffc09"],
   TextCell[
    Row[{"The square of the hypotenuse of a right triangle is equal to the \
sum of the squares of the other two sides."}], TextJustification -> 0]], 
  TraditionalForm]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{
  3.8099833413686156`*^9, {3.8099834047686434`*^9, 3.809983425580738*^9}, {
   3.809983477891425*^9, 3.8099834875914345`*^9}, 3.81016026524161*^9, 
   3.8103142284021125`*^9, 3.810314579044368*^9, 3.8103146206765733`*^9, {
   3.8103146589485483`*^9, 3.810314719772873*^9}, {3.8103147813492274`*^9, 
   3.810314805866059*^9}, {3.811072109164977*^9, 3.8110721247529664`*^9}, 
   3.830275738117377*^9, 3.8302757739998274`*^9, {3.8302759028567944`*^9, 
   3.8302759074581485`*^9}, {3.8302760161840844`*^9, 3.8302760280776386`*^9}, 
   3.8302760629486904`*^9, {3.830276095281463*^9, 3.8302761071905565`*^9}, 
   3.830356555970116*^9, 3.8303566075298123`*^9, 3.830356685473308*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "Out[109]//TraditionalForm=",ExpressionUUID->"9836a922-7583-43ad-adfe-\
57bb1458f128"]
}, Open  ]],

Cell["\:5b9e\:4f53\:5c5e\:6027\[LongDash]\[LongDash]\:573a\:666f:", "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8099836269826126`*^9, 3.8099836445907364`*^9}, 
   3.8099837582764816`*^9, {3.810320358549384*^9, 3.8103203734281836`*^9}, {
   3.830275581974244*^9, 3.8302755982150106`*^9}, {3.830275711864215*^9, 
   3.830275713968026*^9}, 3.8302794998977566`*^9, {3.830279546310186*^9, 
   3.830279560437797*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"beb75a0b-be89-4d1b-8a64-\
10787655c6a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"entityscene", "=", 
  RowBox[{"EntityValue", "[", 
   RowBox[{"entity", ",", "\"\<Scene\>\""}], "]"}]}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.809983235633462*^9, 3.809983316787158*^9}, {
   3.809983432944192*^9, 3.8099834334828587`*^9}, 3.830276117883391*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "In[110]:=",ExpressionUUID->"6e88ae40-7a9a-4e95-bcb2-2f56d50d01eb"],

Cell[BoxData[
 RowBox[{"GeometricScene", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[FormalCapitalA]", ",", "\[FormalCapitalB]", ",", 
       "\[FormalCapitalC]"}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Triangle", "[", 
      RowBox[{"{", 
       RowBox[{
       "\[FormalCapitalA]", ",", "\[FormalCapitalB]", ",", 
        "\[FormalCapitalC]"}], "}"}], "]"}], ",", 
     RowBox[{
      RowBox[{"PlanarAngle", "[", 
       RowBox[{"{", 
        RowBox[{
        "\[FormalCapitalA]", ",", "\[FormalCapitalB]", ",", 
         "\[FormalCapitalC]"}], "}"}], "]"}], "\[Equal]", 
      RowBox[{"90", " ", "\[Degree]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{"\[FormalCapitalA]", ",", "\[FormalCapitalB]"}], "]"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{"\[FormalCapitalB]", ",", "\[FormalCapitalC]"}], "]"}], 
       "2"]}], "\[Equal]", 
     SuperscriptBox[
      RowBox[{"EuclideanDistance", "[", 
       RowBox[{"\[FormalCapitalA]", ",", "\[FormalCapitalC]"}], "]"}], "2"]}],
     "}"}]}], "]"}]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.809983260590046*^9, 3.8099833173518095`*^9}, 
   3.8099834344004602`*^9, 3.809983491290148*^9, 3.8103142330502253`*^9, 
   3.8103145822833595`*^9, 3.8103146298928614`*^9, 3.810314695391979*^9, 
   3.8103148100774527`*^9, 3.811072128161804*^9, 3.830276120489101*^9, 
   3.8303566897494245`*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "Out[110]=",ExpressionUUID->"6a75c4aa-b3d2-4fe5-ac22-517542736613"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInstance", "[", "entityscene", "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.809983301202151*^9, 3.80998332154222*^9}, {
  3.8103143053672643`*^9, 3.810314321838025*^9}, {3.810314590505265*^9, 
  3.810314594201977*^9}, {3.8103148343079967`*^9, 3.8103148346158047`*^9}, {
  3.8110721352969885`*^9, 3.811072148469804*^9}, {3.8302761336839914`*^9, 
  3.830276146434188*^9}, {3.8303566978309317`*^9, 3.830356699947021*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "In[113]:=",ExpressionUUID->"5cbbb703-0486-4dd6-9fe4-db2c7282fb5b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ = 
    1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = {\
\[FormalCapitalA], \[FormalCapitalB], \[FormalCapitalC]}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
     C["GeometricPoint"][\[FormalCapitalA]], 
     C["GeometricPoint"][\[FormalCapitalB]], 
     C["GeometricPoint"][\[FormalCapitalC]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
     C["GeometricPoint"][\[FormalCapitalA]], 
     C["GeometricPoint"][\[FormalCapitalB]], 
     C["GeometricPoint"][\[FormalCapitalC]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var4815, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4816}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4817, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4818}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var4819, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4820}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = {{{
    4.3426985524968575`, 0.2659644129947389}, {-4.029770567865099, 
    1.2900975664169285`}, {-4.28897896064433, -0.8289767522211186}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {"Step 1"}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 2, 3}}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
      False, False, False}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3}, 
    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{((
          PlaneGeometry`GeometrySceneDrawer`Dump`var4815 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4817) (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4817 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4819) + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var4816 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4818) (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4818 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4820))^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4815 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4817) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4821)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4816 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4818) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4822)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4815 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4819) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4823)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4816 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4820) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4824)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4817 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4819) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4825)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var4818 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4820) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var4826)^2 + (
        1 - (-(-PlaneGeometry`GeometrySceneDrawer`Dump`var4816 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4818) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4817 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4819) + (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4815 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4817) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var4818 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4820)) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4827)^2, {
      Rational[1, 
          4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var4816 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4818) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4819 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4815 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var4818 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4820) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4817 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4816 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4820))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var4816 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4818) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4819 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4815 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var4818 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4820) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4817 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4816 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4820))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var4816 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4818) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var4819 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4815 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var4818 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4820) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4817 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var4816 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var4820))^2 >= 
       0.1, (-PlaneGeometry`GeometrySceneDrawer`Dump`var4815 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4817)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4816 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4818)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var4817 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4819)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var4818 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var4820)^2 >= 0.03}, {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var4815, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4816, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4817, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4818, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4819, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4820}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var4821, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4822, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4823, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4824, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4825, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4826, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var4827}, {{}, {}}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4808] (
         C["GeometricPoint"][\[FormalCapitalA]][1] - C[
         "GeometricPoint"][\[FormalCapitalB]][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4809] (
         C["GeometricPoint"][\[FormalCapitalA]][2] - C[
         "GeometricPoint"][\[FormalCapitalB]][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4810] (
         C["GeometricPoint"][\[FormalCapitalA]][1] - C[
         "GeometricPoint"][\[FormalCapitalC]][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4811] (
         C["GeometricPoint"][\[FormalCapitalA]][2] - C[
         "GeometricPoint"][\[FormalCapitalC]][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4812] (
         C["GeometricPoint"][\[FormalCapitalB]][1] - C[
         "GeometricPoint"][\[FormalCapitalC]][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4813] (
         C["GeometricPoint"][\[FormalCapitalB]][2] - C[
         "GeometricPoint"][\[FormalCapitalC]][2]))^2 + ((
         C["GeometricPoint"][\[FormalCapitalA]][1] - C[
         "GeometricPoint"][\[FormalCapitalB]][
         1]) (-C["GeometricPoint"][\[FormalCapitalB]][1] + 
         C["GeometricPoint"][\[FormalCapitalC]][1]) + (
         C["GeometricPoint"][\[FormalCapitalA]][2] - C[
         "GeometricPoint"][\[FormalCapitalB]][
         2]) (-C["GeometricPoint"][\[FormalCapitalB]][2] + 
         C["GeometricPoint"][\[FormalCapitalC]][2]))^2 + (1 - 
       "notVar"[
        PlaneGeometry`GeometrySceneDrawer`Dump`var4814] (-(-
           C["GeometricPoint"][\[FormalCapitalA]][2] + 
          C["GeometricPoint"][\[FormalCapitalB]][2]) (-
           C["GeometricPoint"][\[FormalCapitalB]][1] + 
          C["GeometricPoint"][\[FormalCapitalC]][1]) + (-
           C["GeometricPoint"][\[FormalCapitalA]][1] + 
          C["GeometricPoint"][\[FormalCapitalB]][1]) (-
           C["GeometricPoint"][\[FormalCapitalB]][2] + 
          C["GeometricPoint"][\[FormalCapitalC]][2])))^2}, 
    PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
     Rational[1, 
         4] ((C["GeometricPoint"][\[FormalCapitalA]][2] - C[
           "GeometricPoint"][\[FormalCapitalB]][2]) 
          C["GeometricPoint"][\[FormalCapitalC]][1] + 
         C["GeometricPoint"][\[FormalCapitalA]][1] (
           C["GeometricPoint"][\[FormalCapitalB]][2] - C[
           "GeometricPoint"][\[FormalCapitalC]][2]) + 
         C["GeometricPoint"][\[FormalCapitalB]][
           1] (-C["GeometricPoint"][\[FormalCapitalA]][2] + 
           C["GeometricPoint"][\[FormalCapitalC]][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][\[FormalCapitalA]][2] - C[
           "GeometricPoint"][\[FormalCapitalB]][2]) 
          C["GeometricPoint"][\[FormalCapitalC]][1] + 
         C["GeometricPoint"][\[FormalCapitalA]][1] (
           C["GeometricPoint"][\[FormalCapitalB]][2] - C[
           "GeometricPoint"][\[FormalCapitalC]][2]) + 
         C["GeometricPoint"][\[FormalCapitalB]][
           1] (-C["GeometricPoint"][\[FormalCapitalA]][2] + 
           C["GeometricPoint"][\[FormalCapitalC]][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][\[FormalCapitalA]][2] - C[
           "GeometricPoint"][\[FormalCapitalB]][2]) 
          C["GeometricPoint"][\[FormalCapitalC]][1] + 
         C["GeometricPoint"][\[FormalCapitalA]][1] (
           C["GeometricPoint"][\[FormalCapitalB]][2] - C[
           "GeometricPoint"][\[FormalCapitalC]][2]) + 
         C["GeometricPoint"][\[FormalCapitalB]][
           1] (-C["GeometricPoint"][\[FormalCapitalA]][2] + 
           C["GeometricPoint"][\[FormalCapitalC]][2]))^2 >= 
      0.1, (-C["GeometricPoint"][\[FormalCapitalA]][1] + 
         C["GeometricPoint"][\[FormalCapitalB]][1])^2 + (-
          C["GeometricPoint"][\[FormalCapitalA]][2] + 
         C["GeometricPoint"][\[FormalCapitalB]][2])^2 >= 
      0.03, (-C["GeometricPoint"][\[FormalCapitalB]][1] + 
         C["GeometricPoint"][\[FormalCapitalC]][1])^2 + (-
          C["GeometricPoint"][\[FormalCapitalB]][2] + 
         C["GeometricPoint"][\[FormalCapitalC]][2])^2 >= 0.03}}, 
    PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
       C["GeometricPoint"][\[FormalCapitalA]][1], 
       C["GeometricPoint"][\[FormalCapitalA]][2], 
       C["GeometricPoint"][\[FormalCapitalB]][1], 
       C["GeometricPoint"][\[FormalCapitalB]][2], 
       C["GeometricPoint"][\[FormalCapitalC]][1], 
       C["GeometricPoint"][\[FormalCapitalC]][2]}, {
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4808], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4809], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4810], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4811], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4812], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4813], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4814]}, {{}, {}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{(
         C["GeometricPoint"][\[FormalCapitalA]][1] - C[
         "GeometricPoint"][\[FormalCapitalB]][
         1]) (-C["GeometricPoint"][\[FormalCapitalB]][1] + 
         C["GeometricPoint"][\[FormalCapitalC]][1]) + (
         C["GeometricPoint"][\[FormalCapitalA]][2] - C[
         "GeometricPoint"][\[FormalCapitalB]][
         2]) (-C["GeometricPoint"][\[FormalCapitalB]][2] + 
         C["GeometricPoint"][\[FormalCapitalC]][2]) == 0}}, 
    PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
    1, 1, 1, {{{4.3426985524968575`, 0.2659644129947389}, {-4.029770567865099,
      1.2900975664169285`}, {-4.28897896064433, -0.8289767522211186}}}, {{}}, \
{{{4.3426985524968575`, 0.2659644129947389}, {-4.029770567865099, 
     1.2900975664169285`}, {-4.28897896064433, -0.8289767522211186}}}, {{{
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][\[FormalCapitalA]], 
            C["GeometricPoint"][\[FormalCapitalB]], 
            C["GeometricPoint"][\[FormalCapitalC]]}]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][\[FormalCapitalA]], 
             C["GeometricPoint"][\[FormalCapitalB]], 
             C["GeometricPoint"][\[FormalCapitalC]]], 
            Polygon[{
              C["GeometricPoint"][\[FormalCapitalA]], 
              C["GeometricPoint"][\[FormalCapitalB]], 
              C["GeometricPoint"][\[FormalCapitalC]]}]} -> 90 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][\[FormalCapitalA]], 
            C["GeometricPoint"][\[FormalCapitalB]]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][\[FormalCapitalB]], 
            C["GeometricPoint"][\[FormalCapitalC]]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][\[FormalCapitalA]]]}, 
          Inset[
           Style[" \[FormalCapitalA] ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][\[FormalCapitalA]]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][\[FormalCapitalA]]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][\[FormalCapitalB]]]}, 
          Inset[
           Style[" \[FormalCapitalB] ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][\[FormalCapitalB]]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][\[FormalCapitalB]]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][\[FormalCapitalC]]]}, 
          Inset[
           Style[" \[FormalCapitalC] ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][\[FormalCapitalC]]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][\[FormalCapitalC]]]}}}, {}}}}, {{{
       C["GeometricPoint"][\[FormalCapitalA]] -> {4.3426985524968575`, 
         0.2659644129947389}, 
        C["GeometricPoint"][\[FormalCapitalB]] -> {-4.029770567865099, 
         1.2900975664169285`}, 
        C["GeometricPoint"][\[FormalCapitalC]] -> {-4.28897896064433, \
-0.8289767522211186}}, {}}}, {{{False, False, False}}}, {{{}}}, False, 
     True, {}, {}, {{{4.3426985524968575`, 
     0.2659644129947389}, {-4.029770567865099, 
     1.2900975664169285`}, {-4.28897896064433, -0.8289767522211186}}}, \
{{{-5.452146711958449, 5.5058663038109765`}, {-5.248446100786807, 
     5.709566914982617}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-5.452146711958449, 5.5058663038109765`}, {-5.248446100786807, 
    5.709566914982617}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {
     PlaneGeometry`AssertionWrapper[
     EuclideanDistance[\[FormalCapitalA], \[FormalCapitalB]]^2 + 
       EuclideanDistance[\[FormalCapitalB], \[FormalCapitalC]]^2 == 
      EuclideanDistance[\[FormalCapitalA], \[FormalCapitalC]]^2, {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = {{{
    4.3426985524968575`, 0.2659644129947389}, {-4.029770567865099, 
    1.2900975664169285`}, {-4.28897896064433, -0.8289767522211186}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`picPart$$, 
    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = {{{
    4.3426985524968575`, 0.2659644129947389}, {-4.029770567865099, 
    1.2900975664169285`}, {-4.28897896064433, -0.8289767522211186}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
      C["GeometricPoint"][\[FormalCapitalA]], 
      C["GeometricPoint"][\[FormalCapitalB]], 
      C["GeometricPoint"][\[FormalCapitalC]]}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
    PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Polygon[{
           C["GeometricPoint"][\[FormalCapitalA]], 
           C["GeometricPoint"][\[FormalCapitalB]], 
           C["GeometricPoint"][\[FormalCapitalC]]}]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][\[FormalCapitalA]], 
            C["GeometricPoint"][\[FormalCapitalB]], 
            C["GeometricPoint"][\[FormalCapitalC]]], 
           Polygon[{
             C["GeometricPoint"][\[FormalCapitalA]], 
             C["GeometricPoint"][\[FormalCapitalB]], 
             C["GeometricPoint"][\[FormalCapitalC]]}]} -> 90 Degree], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][\[FormalCapitalA]], 
           C["GeometricPoint"][\[FormalCapitalB]]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][\[FormalCapitalB]], 
           C["GeometricPoint"][\[FormalCapitalC]]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][\[FormalCapitalA]]]}, 
         Inset[
          Style[" \[FormalCapitalA] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][\[FormalCapitalA]]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][\[FormalCapitalA]]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][\[FormalCapitalB]]]}, 
         Inset[
          Style[" \[FormalCapitalB] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][\[FormalCapitalB]]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][\[FormalCapitalB]]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][\[FormalCapitalC]]]}, 
         Inset[
          Style[" \[FormalCapitalC] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][\[FormalCapitalC]]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][\[FormalCapitalC]]]}}}, {}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
      C["GeometricPoint"][\[FormalCapitalA]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4815}, {
      C["GeometricPoint"][\[FormalCapitalA]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4816}, {
      C["GeometricPoint"][\[FormalCapitalB]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4817}, {
      C["GeometricPoint"][\[FormalCapitalB]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4818}, {
      C["GeometricPoint"][\[FormalCapitalC]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4819}, {
      C["GeometricPoint"][\[FormalCapitalC]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4820}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4808], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4821}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4809], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4822}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4810], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4823}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4811], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4824}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4812], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4825}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4813], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4826}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var4814], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var4827}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var4815, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4816}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4817, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4818}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var4819, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4820}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var4815, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4816} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4817, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4818} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4819, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4820} -> 1], 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var4815, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4816} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var4817, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4818} -> 
     2, {PlaneGeometry`GeometrySceneDrawer`Dump`var4819, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var4820} -> 3], 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[], 
    PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
      C["GeometricPoint"][\[FormalCapitalA]] -> {4.3426985524968575`, 
        0.2659644129947389}, 
       C["GeometricPoint"][\[FormalCapitalB]] -> {-4.029770567865099, 
        1.2900975664169285`}, 
       C["GeometricPoint"][\[FormalCapitalC]] -> {-4.28897896064433, \
-0.8289767522211186}}, {}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
    PlaneGeometry`GeometrySceneDrawerDump`constraint$$, 
    PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
     Tooltip[
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
          Line[{{-0.75, 0}, {0.75, 0}}], 
          Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
       AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
     "Hide Controls" :> (
       PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
      Delimiter, Row[{
         Dynamic[
          RawBoxes[
           FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], "  ", 
         "Initial Settings"}] :> ({
        PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
         PlaneGeometry`GeometrySceneDrawerDump`step$$, 
         PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
         PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`current$$, 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
         PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
         PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
       PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
      "Paste Current Graphics" :> CellPrint[
        ExpressionCell[
         Append[
          PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
           Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
            If[
             And[
             True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
             PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
      "Paste Current GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          MapThread[Construct, {
            Map[ReplaceAll, {
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
            MapThread[Cases, {
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
              Map[HoldPattern, 
               Thread[Apply[Alternatives, 
                  Apply[Join, 
                   Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                  1}] -> Blank[]]]}]}], 
          If[False, 
           ReplaceAll[
            Take[
             ReplaceAll[
              Hold[{
                
                Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], 
                PlanarAngle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}] == 90 Degree}], Hold[{
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  BlankNullSequence[GeometricStep]]}] :> 
              Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               BlankNullSequence[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
           Hold[{
             
             Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], 
             PlanarAngle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}] == 90 Degree}]], 
          If[
           And[
           True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
           Replace[
            Part[
             
             Hold[{EuclideanDistance[\[FormalCapitalA], \[FormalCapitalB]]^2 + 
                EuclideanDistance[\[FormalCapitalB], \[FormalCapitalC]]^2 == 
               EuclideanDistance[\[FormalCapitalA], \[FormalCapitalC]]^2}], {
             1}, PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               Blank[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], "Input"]],
       Delimiter, "Paste Complete GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          If[False, Identity, First][
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{
            
            Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], 
            PlanarAngle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}] == 90 Degree}], 
          
          Hold[{EuclideanDistance[\[FormalCapitalA], \[FormalCapitalB]]^2 + 
             EuclideanDistance[\[FormalCapitalB], \[FormalCapitalC]]^2 == 
            EuclideanDistance[\[FormalCapitalA], \[FormalCapitalC]]^2}]], 
         "Input"]], "Paste Algebraic Formulation" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          First[
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{
            
            Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], 
            PlanarAngle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}] == 90 Degree}], 
          Hold[{
           EuclideanDistance[\[FormalCapitalA], \[FormalCapitalB]]^2 + 
             EuclideanDistance[\[FormalCapitalB], \[FormalCapitalC]]^2 == 
            EuclideanDistance[\[FormalCapitalA], \[FormalCapitalC]]^2}]][
         "AlgebraicFormulation"], "Input"]], Delimiter, "Paste Parameters" :> 
      CellPrint[
        ExpressionCell[
         If[False, Identity, First][
          Transpose[
           MapThread[Construct, {
             Map[ReplaceAll, {
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
             Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
         "Input"]], "Paste Hypotheses" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{
            
            Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], 
            PlanarAngle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}] == 90 Degree}]], "Input"]], "Paste Conclusions" :> 
      CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          
          Hold[{EuclideanDistance[\[FormalCapitalA], \[FormalCapitalB]]^2 + 
             EuclideanDistance[\[FormalCapitalB], \[FormalCapitalC]]^2 == 
            EuclideanDistance[\[FormalCapitalA], \[FormalCapitalC]]^2}]], 
         "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
        ExpressionCell[
         FindGeometricConjectures[
          PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
           If[
           False, {{{\[FormalCapitalA] -> {4.3426985524968575`, 
                0.2659644129947389}, \[FormalCapitalB] -> {-4.029770567865099,
                 
                1.2900975664169285`}, \[FormalCapitalC] -> \
{-4.28897896064433, -0.8289767522211186}}, {}}}, 
            
            First[{{{\[FormalCapitalA] -> {4.3426985524968575`, 
                 0.2659644129947389}, \[FormalCapitalB] -> \
{-4.029770567865099, 
                 1.2900975664169285`}, \[FormalCapitalC] -> \
{-4.28897896064433, -0.8289767522211186}}, {}}}]], 
           Hold[{
             
             Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], 
             PlanarAngle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}] == 90 Degree}]]], "Input"]]}, Appearance -> None, 
     MenuAppearance -> "Menu"], 
    PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              2], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        ActionMenu[
         Tooltip[
          Graphics[{{
             GrayLevel[0.9], 
             Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], {
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
           AspectRatio -> Full, PlotRangePadding -> None], 
          "Controls/Paste"], {
         "Hide Controls" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
          Delimiter, Row[{
             Dynamic[
              RawBoxes[
               FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
             "  ", "Initial Settings"}] :> ({
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`current$$, 
             PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
           PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
          "Paste Current Graphics" :> CellPrint[
            ExpressionCell[
             Append[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                If[
                 And[
                 True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]],
           "Paste Current GeometricScene" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                MapThread[Cases, {
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                  Map[HoldPattern, 
                   Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
              If[False, 
               ReplaceAll[
                Take[
                 ReplaceAll[
                  Hold[{
                    
                    Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], 
                    PlanarAngle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}] == 90 Degree}], Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                  Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   BlankNullSequence[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
               Hold[{
                 
                 Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], 
                 PlanarAngle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}] == 90 Degree}]], 
              If[
               And[
               True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
               Replace[
                Part[
                 
                 Hold[{EuclideanDistance[\[FormalCapitalA], \
\[FormalCapitalB]]^2 + 
                    EuclideanDistance[\[FormalCapitalB], \[FormalCapitalC]]^2 == 
                   EuclideanDistance[\[FormalCapitalA], \
\[FormalCapitalC]]^2}], {1}, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   Blank[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
             "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
          CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              If[False, Identity, First][
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{
                
                Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], 
                PlanarAngle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}] == 90 Degree}], 
              
              Hold[{EuclideanDistance[\[FormalCapitalA], \[FormalCapitalB]]^2 + 
                 EuclideanDistance[\[FormalCapitalB], \[FormalCapitalC]]^2 == 
                EuclideanDistance[\[FormalCapitalA], \[FormalCapitalC]]^2}]], 
             "Input"]], "Paste Algebraic Formulation" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              First[
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{
                
                Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], 
                PlanarAngle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}] == 90 Degree}], 
              
              Hold[{EuclideanDistance[\[FormalCapitalA], \[FormalCapitalB]]^2 + 
                 EuclideanDistance[\[FormalCapitalB], \[FormalCapitalC]]^2 == 
                EuclideanDistance[\[FormalCapitalA], \[FormalCapitalC]]^2}]][
             "AlgebraicFormulation"], "Input"]], Delimiter, 
          "Paste Parameters" :> CellPrint[
            ExpressionCell[
             If[False, Identity, First][
              Transpose[
               MapThread[Construct, {
                 Map[ReplaceAll, {
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                 Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]],
              "Input"]], "Paste Hypotheses" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{
                
                Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], 
                PlanarAngle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}] == 90 Degree}]], "Input"]], "Paste Conclusions" :> 
          CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              
              Hold[{EuclideanDistance[\[FormalCapitalA], \[FormalCapitalB]]^2 + 
                 EuclideanDistance[\[FormalCapitalB], \[FormalCapitalC]]^2 == 
                EuclideanDistance[\[FormalCapitalA], \[FormalCapitalC]]^2}]], 
             "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
            ExpressionCell[
             FindGeometricConjectures[
              PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
              GeometricScene][
               If[
               False, {{{\[FormalCapitalA] -> {4.3426985524968575`, 
                    0.2659644129947389}, \[FormalCapitalB] -> \
{-4.029770567865099, 
                    1.2900975664169285`}, \[FormalCapitalC] -> \
{-4.28897896064433, -0.8289767522211186}}, {}}}, 
                
                First[{{{\[FormalCapitalA] -> {4.3426985524968575`, 
                    0.2659644129947389}, \[FormalCapitalB] -> \
{-4.029770567865099, 
                    1.2900975664169285`}, \[FormalCapitalC] -> \
{-4.28897896064433, -0.8289767522211186}}, {}}}]], 
               Hold[{
                 
                 Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], 
                 PlanarAngle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}] == 90 Degree}]]], "Input"]]}, Appearance -> None, 
         MenuAppearance -> "Menu"], "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
     Grid[{{
        PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
        If[False, 
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 37.5},
             Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"],
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 1.5]], 
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
          Dynamic[
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
        PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
         Opacity[0]]}, 
       If[
        And[False, False], {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
        Nothing]}, Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              10], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        EventHandler[
         Dynamic[
          If[
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
         "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
           Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
        "LinkHand"], 
       MouseAppearance[
        Dynamic[
         Which[
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          EventHandler[
           Dynamic[PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
           "MouseClicked" :> (
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
             PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}, 
           Method -> "Queued"], True, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{0, -1}, {1, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Line[{{-0.5, 0}, {0.5, 0}}], 
             Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
          AspectRatio -> Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
               PlaneGeometry`GeometrySceneDrawerDump`q}, {
              PlaneGeometry`GeometrySceneDrawerDump`q, 
               Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {0, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
          Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                PlaneGeometry`GeometrySceneDrawerDump`q}, {
               PlaneGeometry`GeometrySceneDrawerDump`q, 
                Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Arrowheads[{{1, 1, 
                Graphics[
                 Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
             Arrow[
              BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
          ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
          None], {"MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
           PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
             PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
        "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
       Grid[{{
          Graphics[{{
             GrayLevel[1], 
             Rectangle[{-
               Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                 10], -1}, {
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style["", Larger, 
               GrayLevel[0]], {0, 0}]}}, 
           ImageSize -> {
            20 Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
             20}, AspectRatio -> Full, PlotRangePadding -> None], 
          MouseAppearance[
           EventHandler[
            Dynamic[
             If[
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
            "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
              Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
           "LinkHand"], 
          MouseAppearance[
           Dynamic[
            Which[
            PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             EventHandler[
              Dynamic[
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
                PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)\
}, Method -> "Queued"], True, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]]\
, "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{0, -1}, {1, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.5, 0}, {0.5, 0}}], 
                Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {0, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                   PlaneGeometry`GeometrySceneDrawerDump`q}, {
                  PlaneGeometry`GeometrySceneDrawerDump`q, 
                   Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Arrowheads[{{1, 1, 
                   Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                Arrow[
                 BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
             ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
             None], {"MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
              PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
           "LinkHand"]}}, Spacings -> {0, 0}]}, {
       Grid[{{
          Graphics[{{
             GrayLevel[1], 
             Rectangle[{-5, -1}, {5, 1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style[
               Style["Conclusion", Larger, Bold, 
                GrayLevel[0.6]], Larger, 
               GrayLevel[0]], {0, 0}]}}, ImageSize -> {100, 20}, AspectRatio -> 
           Full, PlotRangePadding -> None], 
          Graphics[{{
             GrayLevel[1], 
             
             Rectangle[{-
               Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                 5], -1}, {
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5], 
               1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style["", Larger, 
               GrayLevel[0]], {0, 0}]}}, 
           ImageSize -> {
            20 Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5], 
             20}, AspectRatio -> Full, PlotRangePadding -> None]}}, 
        Spacings -> {0, 0}]}, {
       MouseAppearance[
        ActionMenu[
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5}, 
            Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"], 
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 1.5]], {
         PlaneGeometry`AssertionWrapper[
           EuclideanDistance[\[FormalCapitalA], \[FormalCapitalB]]^2 + 
             EuclideanDistance[\[FormalCapitalB], \[FormalCapitalC]]^2 == 
            EuclideanDistance[\[FormalCapitalA], \[FormalCapitalC]]^2, {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 1)}, 
         Appearance -> None], "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
     Grid[
      If[True, {{
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
         Grid[{{
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Style["Conclusion", Larger, Bold, 
              GrayLevel[0.6]], 5], 
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
             Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}}, 
          Spacings -> {0, 0}]}, {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
          Pane[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
            PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
           ImageSize -> {
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5}, 
           Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"], 
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
          1.5]}}, {{}}], Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
     MouseAppearance[
      Piecewise[{{
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; 
              NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
            False)}, PassEventsDown -> True], 
         And[
          Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
          PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
            Null)}, PassEventsDown -> True], 
         And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
        True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
          PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
        PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
         PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
          PlaneGeometry`GeometrySceneDrawerDump`step$$, 
          PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
          TimeConstrained[
           Fold[
           PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
            PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            
            Transpose[{
             PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
              PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
              PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
           PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
           Flatten[
            ReplaceAll[
             ReplaceAll[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 C["GeometricPoint"][
                  BlankNullSequence[]]] -> 
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                 Blank[]]) :> 
              Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                 PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                PlaneGeometry`GeometrySceneDrawerDump`c]], 
             Apply[
             Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
          Flatten[
           ReplaceAll[
            ReplaceAll[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                C["GeometricPoint"][
                 BlankNullSequence[]]] -> 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                Blank[]]) :> 
             Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                PlaneGeometry`GeometrySceneDrawerDump`x] -> 
               PlaneGeometry`GeometrySceneDrawerDump`c]], 
            Apply[
            Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
       PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
        ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
            And[
            True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
        ReplaceAll[{
          PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Apply[Rule, 
           Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
           1}]]; Part[
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
          ReplaceAll[
           Normal[
            AssociationMap[
            PlaneGeometry`GeometrySceneDrawerDump`point, 
             PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
          Select[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
           PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
            First[#]]& ]}; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
       PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
      "DragGraphics"], SynchronousUpdating -> False], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
     Panel[
      Grid[{{
         Text[
          Style["Points", Bold]]}, {
         Grid[{{
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 1]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 2]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 3]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
              PassEventsUp -> False], "LinkHand"]}}]}, {
         Grid[{{
            Graphics[{
              Hue[0.64, 0.71, 0.37], 
              AbsolutePointSize[11], 
              Point[{0, 0}], 
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
            Graphics[{
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
       Alignment -> Left, Dividers -> False], Background -> GrayLevel[0.9]], {
     "MouseClicked" :> (
       PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
       NotebookDelete[
        PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
    PlaneGeometry`GeometrySceneDrawerDump`display$$, 
    PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = MouseAppearance[
     Dynamic[
      EventHandler[
       Tooltip[
        Append[
         PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
          Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           If[
            And[
            True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
         PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
          PlaneGeometry`GeometrySceneDrawerDump`size$$}], "Show Controls"], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
       PassEventsUp -> False]], "LinkHand"], 
    PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1.5}, {1, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1.5}, {0, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
       RGBColor[0.161, 0.667, 0.887], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
    Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {1, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Line[{{-0.5, 0}, {0.5, 0}}], 
        Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {0, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Arrowheads[{{1, 1, 
           Graphics[
            Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
        Arrow[
         BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
     ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" \[FormalCapitalA] ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" \[FormalCapitalB] ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" \[FormalCapitalC] ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Polygon[{{4.3426985524968575`, 
          0.2659644129947389}, {-4.029770567865099, 
          1.2900975664169285`}, {-4.28897896064433, -0.8289767522211186}}]}, {{
          Opacity[0], 
          Circle[{-4.029770567865099, 1.2900975664169285`}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         Line[{
           
           Offset[{11.931881006725824`, -1.459525827567121}, \
{-4.029770567865099, 1.2900975664169285`}], 
           
           Offset[{10.472355179158702`, -13.391406834292948`}, \
{-4.029770567865099, 1.2900975664169285`}], 
           
           Offset[{-1.4595258275671212`, -11.931881006725826`}, \
{-4.029770567865099, 1.2900975664169285`}]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{4.3426985524968575`, 0.2659644129947389}, {-4.029770567865099,
           1.2900975664169285`}}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{-4.029770567865099, 
          1.2900975664169285`}, {-4.28897896064433, -0.8289767522211186}}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{4.3426985524968575`, 0.2659644129947389}]}, 
         Inset[
          Style[" \[FormalCapitalA] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          4.3426985524968575`, 0.2659644129947389}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{4.3426985524968575`, 0.2659644129947389}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-4.029770567865099, 1.2900975664169285`}]}, 
         Inset[
          Style[" \[FormalCapitalB] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-4.029770567865099, 1.2900975664169285`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-4.029770567865099, 1.2900975664169285`}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-4.28897896064433, -0.8289767522211186}]}, 
         Inset[
          Style[" \[FormalCapitalC] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-4.28897896064433, -0.8289767522211186}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-4.28897896064433, -0.8289767522211186}]}}}, {}}}, 
     Background -> GrayLevel[1], {
     PlotRange -> {{-5.452146711958449, 
       5.5058663038109765`}, {-5.248446100786807, 5.709566914982617}}, 
      ImageSize -> {{380, 380}, {380, 380}}}], 
    PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[610337]}, 
    StyleBox[
     FrameBox[
      PaneBox[
       PaneSelectorBox[{False->
        DynamicBox[ToBoxes[
          If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
           Column[{
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
             Pane[
             PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
              Dynamic[PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                   First[#], 205] {1, 1})& ], ImageSizeAction -> 
              "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
           PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
          StandardForm],
         ImageSizeCache->{380., {242.3340332872234, 248.06596671277657`}}], 
        True->
        TagBox[
         DynamicBox[ToBoxes[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
           StandardForm],
          ImageSizeCache->{380., {242.3340332872234, 248.06596671277657`}}],
         MouseAppearanceTag["Arrow"]]}, Dynamic[
         CurrentValue["MouseOver"]],
        FrameMargins->0,
        ImageSize->All],
       ImageSize->Dynamic[
        PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
             And[False, False], 30, 0] + If[True, 50, 0]}],
       ScrollPosition->{0., 0.}],
      FrameStyle->GrayLevel[0.9],
      StripOnInput->False],
     StripOnInput->False,
     DynamicEvaluationTimeout->20,
     ImageSize->Automatic,
     BaseStyle -> {
      SetterBoxOptions -> {ImageSize -> Automatic}, 
       PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
    DynamicModuleValues:>{{
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`display$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`display$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
             Blank[]]]] :> Dynamic[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$]]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`color, 
             RepeatedNull[
              Blank[], 1]]]] :> 
         PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
            Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
            Line[{{-0.75, 0}, {0.75, 0}}], 
            Line[{{-0.75, -0.5}, {0.75, -0.5}}]}, "both", 2, 1.5, 
           PlaneGeometry`GeometrySceneDrawerDump`color]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
             Blank[]], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
              Blank[]], 1], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
              Blank[]], 1]]] :> 
         PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
            Text[
             Style[
             PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
             0}], 
            
            Line[{{PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1.5, 
               0.25}, {
              PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1, -0.25}, {
              PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 0.5, 
               0.25}}]}, "both", 
           PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
           PlaneGeometry`GeometrySceneDrawerDump`heightFactor]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
             Blank[]], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
              Blank[]], 1], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
              Blank[]], 1]]] :> PlaneGeometry`GeometrySceneDrawerDump`makeIcon[
           Text[
            Style[
            PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
            0}], "both", PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
           PlaneGeometry`GeometrySceneDrawerDump`heightFactor, White]}}},
    Initialization:>(GeometricScene; 
     PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  GeometricScene[{{\[FormalCapitalA] -> {4.3426985524968575`, 
      0.2659644129947389}, \[FormalCapitalB] -> {-4.029770567865099, 
      1.2900975664169285`}, \[FormalCapitalC] -> {-4.28897896064433, \
-0.8289767522211186}}, {}}, {
    Triangle[{\[FormalCapitalA], \[FormalCapitalB], \[FormalCapitalC]}], 
    PlanarAngle[{\[FormalCapitalA], \[FormalCapitalB], \[FormalCapitalC]}] == 
    90 Degree}, {
   EuclideanDistance[\[FormalCapitalA], \[FormalCapitalB]]^2 + 
     EuclideanDistance[\[FormalCapitalB], \[FormalCapitalC]]^2 == 
    EuclideanDistance[\[FormalCapitalA], \[FormalCapitalC]]^2}],
  SelectWithContents->True]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{
  3.809983323806821*^9, {3.8099834449429493`*^9, 3.8099834534337034`*^9}, 
   3.809983495642459*^9, {3.8099842263941174`*^9, 3.809984231801777*^9}, 
   3.810314255350359*^9, {3.8103143020883026`*^9, 3.8103143271467237`*^9}, {
   3.8103145868365393`*^9, 3.810314595463195*^9}, 3.810314828898342*^9, 
   3.8103148956120667`*^9, {3.811072131797409*^9, 3.8110721492623825`*^9}, {
   3.8302761375757065`*^9, 3.830276148606945*^9}, {3.830356694891745*^9, 
   3.830356706402243*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "Out[113]=",ExpressionUUID->"071ba790-a067-4170-9610-9b58262ea99c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->{
  "SlideShowHeader", 
   "2020928172014.0081744"},ExpressionUUID->"074850b0-fb93-4b8e-b9bf-\
ab883ea3602d"],

Cell[CellGroupData[{

Cell["\:5b9e\:4f53\:7684\:5206\:7c7b", "Subsubsection",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0073224 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.781021597421727*^9, 3.781021607718109*^9}, {
  3.7812833007433777`*^9, 3.78128330118468*^9}, {3.830276876460328*^9, 
  3.83027689227382*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"00cff323-67d7-4fcf-8e42-\
5fe4765de140"],

Cell[TextData[{
 "\:901a\:8fc7 ",
 Cell[BoxData[
 "EntityValue"],ExpressionUUID->"d76e9d7f-bd5c-4be8-9c9e-8b180529b025"],
 " \:6216 ",
 Cell[BoxData[
 "EntityClassList"],ExpressionUUID->"12c562f1-600c-4369-b39b-15be6dcac197"],
 " \:53ef\:4ee5\:83b7\:5f97\:5177\:4f53\:5206\:7c7b:"
}], "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.781021653621935*^9, 3.7810217311853228`*^9}, {
  3.781021818692704*^9, 3.781021820182272*^9}, {3.809982272941961*^9, 
  3.8099823292357445`*^9}, {3.830276902931717*^9, 3.8302769552606077`*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"2f19e776-0147-4bde-976e-\
89c75b03e7fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityClassList", "[", "\"\<GeometricScene\>\"", "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8099823318031597`*^9, 3.8099823400736675`*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->"In[15]:=",ExpressionUUID->"b98e577e-c2d0-4613-b9be-80d9b6820335"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"geometric scenes\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "All"}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", All]\"", "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidsElements\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidsElements\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from MathWorld\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"MathWorld\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"MathWorld\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"plane geometry theorems\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Theorems\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"Theorems\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"plane geometry constructions\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Constructions\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"Constructions\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"geometric algebra scenes\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"GeometricAlgebra\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"GeometricAlgebra\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes about lines\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Lines\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"Lines\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes about triangles\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Triangles\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"Triangles\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes about quadrilaterals\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Quadrilaterals\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"Quadrilaterals\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes about polygons\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Polygons\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"Polygons\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes about circles\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Circles\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"Circles\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements book 1\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook1\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidBook1\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements book 2\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook2\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidBook2\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements book 3\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidBook3\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements book 4\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook4\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidBook4\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements book 5\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook5\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidBook5\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements book 6\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook6\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidBook6\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements book 13\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook13\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidBook13\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"]}], "}"}]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{3.8099823404784203`*^9, 3.811072156312075*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->"Out[15]=",ExpressionUUID->"7dac023f-2f31-4f67-b8cd-c919eca23d03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{"\"\<GeometricScene\>\"", ",", "\"\<EntityClasses\>\""}], 
  "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.7810217331112137`*^9, 3.7810217420029173`*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->"In[16]:=",ExpressionUUID->"35085f19-a95b-4b2a-a57e-ce17af8a93ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"geometric scenes\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "All"}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", All]\"", "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidsElements\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidsElements\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from MathWorld\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"MathWorld\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"MathWorld\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"plane geometry theorems\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Theorems\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"Theorems\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"plane geometry constructions\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Constructions\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"Constructions\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"geometric algebra scenes\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"GeometricAlgebra\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"GeometricAlgebra\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes about lines\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Lines\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"Lines\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes about triangles\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Triangles\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"Triangles\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes about quadrilaterals\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Quadrilaterals\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"Quadrilaterals\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes about polygons\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Polygons\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"Polygons\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes about circles\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Circles\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"Circles\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements book 1\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook1\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidBook1\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements book 2\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook2\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidBook2\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements book 3\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidBook3\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements book 4\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook4\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidBook4\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements book 5\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook5\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidBook5\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements book 6\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook6\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidBook6\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"scenes from Euclid's Elements book 13\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook13\""}], "]"}], 
     "\"EntityClass[\\\"GeometricScene\\\", \\\"EuclidBook13\\\"]\"", 
     "\"geometric scenes\""},
    "EntityClass"]}], "}"}]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.03661199999999999 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019526419672131146` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{3.781021742299323*^9, 3.781283211533938*^9, 
  3.809982244166729*^9, 3.811072159904315*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->"Out[16]=",ExpressionUUID->"215649d9-e6cc-4f8b-8816-e4c67dbf534d"]
}, Open  ]],

Cell["\:5f97\:5230\:6240\:6709\:5173\:4e8e\:5706\:5f62\:7684\:5b9e\:4f53\:6761\
\:76ee:", "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.781021825510621*^9, 3.781021834256011*^9}, {
   3.8099822315565157`*^9, 3.8099822398813777`*^9}, 3.8099823558339396`*^9, {
   3.810320336682907*^9, 3.8103203470305066`*^9}, {3.8302769779784927`*^9, 
   3.8302769937073364`*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"2ea3b4fe-648e-43ed-90aa-\
c03a04602f36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"EntityClass", "[", 
    RowBox[{"\"\<GeometricScene\>\"", ",", "\"\<Circles\>\""}], "]"}], ",", 
   "\"\<Entities\>\""}], "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.781283249992318*^9, 3.781283273285659*^9}, {
  3.8099822243089914`*^9, 3.8099822252534103`*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->"In[17]:=",ExpressionUUID->"65ec6522-fbd9-4d20-9512-f165a8c6b08d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Archimedes' midpoint theorem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"ArchimedesMidpointTheorem\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"ArchimedesMidpointTheorem\
\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"butterfly theorem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"ButterflyTheorem\""}], "]"}], 
     "\"Entity[\\\"GeometricScene\\\", \\\"ButterflyTheorem\\\"]\"", 
     "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"d'Alembert's theorem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"dAlembertsTheorem\""}], "]"}], 
     "\"Entity[\\\"GeometricScene\\\", \\\"dAlembertsTheorem\\\"]\"", 
     "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Descartes' circle theorem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"DescartesCircleTheorem\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"DescartesCircleTheorem\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"eyeball theorem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EyeballTheorem\""}], "]"}], 
     "\"Entity[\\\"GeometricScene\\\", \\\"EyeballTheorem\\\"]\"", 
     "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"generalized Johnson's theorem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"GeneralizedJohnsonsTheorem\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"GeneralizedJohnsonsTheorem\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Miquel's six circle theorem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"MiquelsSixCircleTheorem\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"MiquelsSixCircleTheorem\\\
\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"pizza theorem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"PizzaTheorem\""}], "]"}], 
     "\"Entity[\\\"GeometricScene\\\", \\\"PizzaTheorem\\\"]\"", 
     "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Thales' theorem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"ThalesTheorem\""}], "]"}], 
     "\"Entity[\\\"GeometricScene\\\", \\\"ThalesTheorem\\\"]\"", 
     "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"three-chord lemma\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"Three-ChordLemma\""}], "]"}], 
     "\"Entity[\\\"GeometricScene\\\", \\\"Three-ChordLemma\\\"]\"", 
     "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 1\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition1\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"EuclidBook3Proposition1\\\
\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 2\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition2\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"EuclidBook3Proposition2\\\
\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 3a\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition3a\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition3a\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 3b\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition3b\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition3b\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 4\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition4\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"EuclidBook3Proposition4\\\
\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 5\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition5\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"EuclidBook3Proposition5\\\
\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 6\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition6\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"EuclidBook3Proposition6\\\
\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 7a\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition7a\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition7a\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 7b\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition7b\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition7b\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 7c\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition7c\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition7c\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 8a\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition8a\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition8a\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 8b\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition8b\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition8b\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 8c\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition8c\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition8c\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 9\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition9\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"EuclidBook3Proposition9\\\
\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 10\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition10\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition10\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 11\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition11\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition11\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 12\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition12\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition12\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 13\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition13\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition13\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 14a\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition14a\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"EuclidBook3Proposition14a\
\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 14b\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition14b\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"EuclidBook3Proposition14b\
\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 15a\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition15a\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"EuclidBook3Proposition15a\
\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 15b\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition15b\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"EuclidBook3Proposition15b\
\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 16\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition16\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition16\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 17\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition17\""}], 
       "]"}], 
     "\"Entity[\\\"GeometricScene\\\", \\\"EuclidBook3Proposition17\\\"]\"", 
     "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 18\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition18\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition18\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 19\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition19\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition19\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 20\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition20\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition20\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 21\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition21\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition21\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 22\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition22\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition22\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 31a\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition31a\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"EuclidBook3Proposition31a\
\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 31b\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition31b\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"EuclidBook3Proposition31b\
\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 31c\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition31c\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \\\"EuclidBook3Proposition31c\
\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 32\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition32\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition32\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 35\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition35\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition35\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 36\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition36\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition36\\\"]\"", "\"geometric scene\""},
    "Entity"], ",", 
   TemplateBox[{"\"Euclid book 3 proposition 37\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeometricScene\"", ",", "\"EuclidBook3Proposition37\""}], 
       "]"}], "\"Entity[\\\"GeometricScene\\\", \
\\\"EuclidBook3Proposition37\\\"]\"", "\"geometric scene\""},
    "Entity"]}], "}"}]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{3.781283273578659*^9, 3.8099822499601517`*^9, 
  3.8110721638486643`*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->"Out[17]=",ExpressionUUID->"25c63f21-8951-4ff7-b74e-51de12133736"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellMargins:>
  Dynamic[{{0, 0.}, {
    0.02587991718426501 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.}}],
 CellTags->{
  "SlideShowHeader", 
   "2020928172014.0081744"},ExpressionUUID->"e1940bf3-8cb0-4104-a958-\
6dad2612d590"],

Cell[CellGroupData[{

Cell["\<\
\:300a\:51e0\:4f55\:539f\:672c\:300b\:7684\:7ed3\:6784 \:5c55\:793a\
\>", "Section",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.029330824741200825` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.07 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.809984550415849*^9, 3.809984556149307*^9}, {
  3.8099846268224134`*^9, 3.8099846360437174`*^9}, {3.830277059334227*^9, 
  3.830277080097622*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"4175662b-c594-487c-9806-\
a308284cbda7"],

Cell[TextData[StyleBox["https://www.wolframcloud.com/obj/resourcesystem/\
published/DataRepository/resources/Structure-of-Euclids-Elements",
 Background->RGBColor[1, 0.9, 0.8]]], "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{3.809984621522688*^9},
 FontSize->24,
 FontColor->GrayLevel[0.5],
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"e03fb292-7d87-458b-b260-\
8b688b045bb5"],

Cell["\<\
\:6db5\:76d6\:6b27\:51e0\:91cc\:5f97\:6240\:8457\:300a\:51e0\:4f55\:539f\:672c\
\:300b\:7684\:6587\:5b57\:4fe1\:606f\:ff1a\:5e0c\:814a\:8bed\:539f\:7248\:548c\
\:82f1\:8bed\:7ffb\:8bd1\:7248\:672c\:7684\:516c\:7406\:3001\:5b9a\:4e49\:548c\
\:547d\:9898\:7684\:9648\:8ff0\:ff0c\:4ee5\:53ca\:547d\:9898\:7684\:8bc1\:660e\
\:3002\
\>", "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8099849792543397`*^9, 3.8099850050124226`*^9}, {
  3.810035964575708*^9, 3.8100359684835014`*^9}, {3.8302770917940397`*^9, 
  3.830277109327867*^9}, {3.830277464005043*^9, 3.8302775476854224`*^9}, {
  3.830277590916542*^9, 3.830277652571211*^9}, {3.8302776851972275`*^9, 
  3.830277697380437*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"f08ba415-839b-4570-b81e-\
9ad70d487300"],

Cell[CellGroupData[{

Cell["\:83b7\:53d6\:6570\:636e", "Subsubsection",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.007332696335403726 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8100359986284266`*^9, 3.810036005471032*^9}, {
  3.8100373814184666`*^9, 3.810037385696828*^9}, {3.8302770348101063`*^9, 
  3.830277036031908*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"ca0e7e69-8fae-469e-873e-\
c0f591514f1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceObject", "[", "\"\<Structure of Euclid's Elements\>\"", 
  "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellTags->"2020928172014.0081744",
 CellLabel->
  "In[125]:=",ExpressionUUID->"972cdd70-2feb-4e8d-9849-c20b40354388"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ResourceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.869015226326882`, {0., 10.869015226326882`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            StyleBox[
             GraphicsBox[{
               Thickness[0.011111111111111112`], {
                FaceForm[{
                  RGBColor[0.648987, 0.648987, 0.648987], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3.789, 
                 7.266}, {86.20700000000001, 7.266}, {86.20700000000001, 
                 3.266}, {3.789, 3.266}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14.129,
                  54.07}, {19.878999999999998`, 54.07}, {19.878999999999998`, 
                 15.57}, {14.129, 15.57}}}]}, {
                FaceForm[{
                  RGBColor[0.274612, 0.618881, 0.810913], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.129,
                  41.82}, {29.879, 41.82}, {29.879, 15.57}, {24.129, 
                 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 33.160000000000004`, 54.07}, {38.910000000000004`, 54.07}, {
                 38.910000000000004`, 15.57}, {33.160000000000004`, 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{42.191,
                  31.781}, {47.941, 31.781}, {47.941, 15.569999999999997`}, {
                 42.191, 15.569999999999997`}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 51.223000000000006`, 46.875}, {56.973000000000006`, 
                 46.875}, {56.973000000000006`, 15.57}, {51.223000000000006`, 
                 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{60.254,
                  37.707}, {66.00399999999999, 37.707}, {66.00399999999999, 
                 15.569999999999997`}, {60.254, 15.569999999999997`}}}]}, {
                FaceForm[{
                  RGBColor[0.648987, 0.648987, 0.648987], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 70.12899999999999, 54.07}, {75.87899999999999, 54.07}, {
                 75.87899999999999, 15.57}, {70.12899999999999, 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 9.879000000000001, 60.547}, {24.129, 60.547}, {24.129, 
                 56.547}, {9.879000000000001, 56.547}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{9.871, 
                 13.097999999999999`}, {80.121, 13.097999999999999`}, {80.121,
                  9.097999999999999}, {9.871, 9.097999999999999}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 65.87899999999999, 60.547}, {80.12899999999999, 60.547}, {
                 80.12899999999999, 56.547}, {65.87899999999999, 56.547}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.469000000000001`, 
                  66.54700000000001}, {45., 82.418}, {78.398, 
                  66.54700000000001}}, {{45., 86.73400000000001}, {
                  2.2230000000000003`, 66.54700000000001}, {
                  2.2230000000000003`, 62.547}, {87.777, 62.547}, {87.777, 
                  66.54700000000001}}}]}}, AspectRatio -> 1, Axes -> False, 
              Background -> None, Frame -> None, FrameTicks -> None, 
              ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, PlotRange -> {{0., 90.}, {0., 90.}}], 
             StripOnInput -> False, CacheGraphics -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"Structure of Euclid's Elements\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://datarepository.wolframcloud.com/resources/\
Structure-of-Euclids-Elements"}, "HyperlinkURL"]}, "RowDefault"], 
                  "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               TagBox[
                DynamicModuleBox[{ResourceSystemClient`Private`len$$ = 1}, 
                 RowBox[{
                   TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    ButtonBox[
                    DynamicBox[
                    ToBoxes[
                    Replace[
                    ResourceSystemClient`Private`snipDots[
                    "Textual information of definitions, common notions, \
postulates, and theorems from Euclid\[CloseCurlyQuote]s Elements", 
                    ResourceSystemClient`Private`len$$], Except[
                    Blank[String]] -> 
                    Snippet[
                    "Textual information of definitions, common notions, \
postulates, and theorems from Euclid\[CloseCurlyQuote]s Elements", 
                    ResourceSystemClient`Private`len$$], {0}], StandardForm], 
                    ImageSizeCache -> {379.427329832688, {3., 8.}}], 
                    Appearance -> None, BaseStyle -> {}, 
                    ButtonFunction :> (ResourceSystemClient`Private`len$$ = 
                    Ceiling[ResourceSystemClient`Private`len$$ 1.5]), 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    "SummaryItem"]}], DynamicModuleValues :> {}], 
                "SummaryItem"], "\[SpanFromLeft]"}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            StyleBox[
             GraphicsBox[{
               Thickness[0.011111111111111112`], {
                FaceForm[{
                  RGBColor[0.648987, 0.648987, 0.648987], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3.789, 
                 7.266}, {86.20700000000001, 7.266}, {86.20700000000001, 
                 3.266}, {3.789, 3.266}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14.129,
                  54.07}, {19.878999999999998`, 54.07}, {19.878999999999998`, 
                 15.57}, {14.129, 15.57}}}]}, {
                FaceForm[{
                  RGBColor[0.274612, 0.618881, 0.810913], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.129,
                  41.82}, {29.879, 41.82}, {29.879, 15.57}, {24.129, 
                 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 33.160000000000004`, 54.07}, {38.910000000000004`, 54.07}, {
                 38.910000000000004`, 15.57}, {33.160000000000004`, 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{42.191,
                  31.781}, {47.941, 31.781}, {47.941, 15.569999999999997`}, {
                 42.191, 15.569999999999997`}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 51.223000000000006`, 46.875}, {56.973000000000006`, 
                 46.875}, {56.973000000000006`, 15.57}, {51.223000000000006`, 
                 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{60.254,
                  37.707}, {66.00399999999999, 37.707}, {66.00399999999999, 
                 15.569999999999997`}, {60.254, 15.569999999999997`}}}]}, {
                FaceForm[{
                  RGBColor[0.648987, 0.648987, 0.648987], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 70.12899999999999, 54.07}, {75.87899999999999, 54.07}, {
                 75.87899999999999, 15.57}, {70.12899999999999, 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 9.879000000000001, 60.547}, {24.129, 60.547}, {24.129, 
                 56.547}, {9.879000000000001, 56.547}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{9.871, 
                 13.097999999999999`}, {80.121, 13.097999999999999`}, {80.121,
                  9.097999999999999}, {9.871, 9.097999999999999}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 65.87899999999999, 60.547}, {80.12899999999999, 60.547}, {
                 80.12899999999999, 56.547}, {65.87899999999999, 56.547}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.469000000000001`, 
                  66.54700000000001}, {45., 82.418}, {78.398, 
                  66.54700000000001}}, {{45., 86.73400000000001}, {
                  2.2230000000000003`, 66.54700000000001}, {
                  2.2230000000000003`, 62.547}, {87.777, 62.547}, {87.777, 
                  66.54700000000001}}}]}}, AspectRatio -> 1, Axes -> False, 
              Background -> None, Frame -> None, FrameTicks -> None, 
              ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, PlotRange -> {{0., 90.}, {0., 90.}}], 
             StripOnInput -> False, CacheGraphics -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"Structure of Euclid's Elements\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://datarepository.wolframcloud.com/resources/\
Structure-of-Euclids-Elements"}, "HyperlinkURL"]}, "RowDefault"], 
                  "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               TagBox[
                DynamicModuleBox[{ResourceSystemClient`Private`len$$ = 1}, 
                 RowBox[{
                   TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    ButtonBox[
                    DynamicBox[
                    ToBoxes[
                    Replace[
                    ResourceSystemClient`Private`snipDots[
                    "Textual information of definitions, common notions, \
postulates, and theorems from Euclid\[CloseCurlyQuote]s Elements", 
                    ResourceSystemClient`Private`len$$], Except[
                    Blank[String]] -> 
                    Snippet[
                    "Textual information of definitions, common notions, \
postulates, and theorems from Euclid\[CloseCurlyQuote]s Elements", 
                    ResourceSystemClient`Private`len$$], {0}], StandardForm]],
                     Appearance -> None, BaseStyle -> {}, 
                    ButtonFunction :> (ResourceSystemClient`Private`len$$ = 
                    Ceiling[ResourceSystemClient`Private`len$$ 1.5]), 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    "SummaryItem"]}], DynamicModuleValues :> {}], 
                "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{",", "\",\"", "\"Mathematics\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"ContentTypes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{",", "\",\"", "\"Text\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Keywords: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    ",", "\",\"", "\"Euclid\"", "\"Geometry\"", "\"Logic\"", 
                    "\"Proof\"", "\"Theorem\""}, "RowWithSeparators"], Short],
                   "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Documentation: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://datarepository.wolframcloud.com/resources/\
Structure-of-Euclids-Elements\"", 
                    "https://datarepository.wolframcloud.com/resources/\
Structure-of-Euclids-Elements"}, "HyperlinkURL"], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Data Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  DynamicModuleBox[{
                   ResourceSystemClient`Private`typesetstorage$$ = 
                    ResourceSystemClient`Private`typesetstorageLocation, 
                    ResourceSystemClient`Private`info$$}, 
                   DynamicBox[
                    ToBoxes[
                    ResourceSystemClient`Private`info$$ = 
                    ResourceSystemClient`Private`resourceInfo[
                    "2ad10f02-4aaa-4913-ab32-21a95e917c70"]; If[
                    AssociationQ[ResourceSystemClient`Private`info$$], 
                    ResourceSystemClient`Private`typesetstorage$$[
                    Lookup[
                    ResourceSystemClient`Private`info$$, 
                    "ContentElementLocations", None]], 
                    Missing["NotAvailable"]], StandardForm]], 
                   DynamicModuleValues :> {}], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"2ad10f02-4aaa-4913-ab32-21a95e917c70\"", "SummaryItem"]}],
                ""}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"2.0.0\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"\[LeftAssociation]", 
                    RowBox[{"\"Association\"", "\[Rule]", "4359960"}], 
                    "\[RightAssociation]"}], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{",", "\",\"", "\"Association\""}, 
                    "RowWithSeparators"], Short[#, 2]& ], "SummaryItem"]}], 
               ""}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ResourceObject[
   Association[
   "Name" -> "Structure of Euclid's Elements", "UUID" -> 
    "2ad10f02-4aaa-4913-ab32-21a95e917c70", "ResourceType" -> "DataResource", 
    "Version" -> "2.0.0", "Description" -> 
    "Textual information of definitions, common notions, postulates, and \
theorems from Euclid\[CloseCurlyQuote]s Elements", "RepositoryLocation" -> 
    URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
    "WolframLanguageVersionRequired" -> "10.0", "ContentSize" -> 
    Association["Association" -> 4359960], 
    "ContentElements" -> {"Association"}], ResourceSystemBase -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{3.8103190526438203`*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "Out[125]=",ExpressionUUID->"63643801-a369-4a81-a41c-705190282577"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellMargins:>
  Dynamic[{{0, 0.}, {
    0.02587991718426501 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.}}],
 CellTags->{
  "SlideShowHeader", 
   "2020928172014.0081744"},ExpressionUUID->"24be5164-8a97-4be5-990d-\
b122c4d6dff5"],

Cell[CellGroupData[{

Cell["\:83b7\:53d6\:7279\:5b9a\:6761\:76ee\:7684\:6570\:636e", "Subsubsection",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.007332696335403726 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.810041219597819*^9, 3.810041233098468*^9}, {
  3.8100417178769546`*^9, 3.8100417348484716`*^9}, {3.830277712937219*^9, 
  3.8302777255117846`*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"5577563c-6d40-4de6-bb12-\
b2a9fe534048"],

Cell[BoxData[
 RowBox[{
  RowBox[{"euc", "=", 
   RowBox[{
   "ResourceData", "[", "\"\<Structure of Euclid's Elements\>\"", "]"}]}], 
  ";"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.810319094981927*^9, 3.8103191159731274`*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "In[114]:=",ExpressionUUID->"01c22778-da99-404e-8c7a-b09782d7c217"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"euc", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Book\>\"", "\[Rule]", "1"}], ",", 
    RowBox[{"\"\<Theorem\>\"", "\[Rule]", "14"}]}], "|>"}], "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.810040815821443*^9, 3.8100408228310995`*^9}, {
  3.810040918312392*^9, 3.8100409749438467`*^9}, {3.810319122758978*^9, 
  3.810319123009824*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "In[115]:=",ExpressionUUID->"1df0d68f-47da-43a9-9f4d-134a1897dd96"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"VertexLabel\"\>", "\[Rule]", "\<\"1.14\"\>"}], ",", 
   RowBox[{"\<\"Text\"\>", 
    "\[Rule]", "\<\"If with any straight line, and at a point on it, two \
straight lines not lying on the same side make the adjacent angles equal to \
two right angles, the two straight lines will be in a straight line with one \
another.\"\>"}], ",", 
   RowBox[{"\<\"TextWordCount\"\>", "\[Rule]", "42"}], ",", 
   RowBox[{"\<\"GreekText\"\>", 
    "\[Rule]", "\<\"\:1f10\:1f70\[Nu] \[Pi]\[Rho]\:03cc\[FinalSigma] \[Tau]\
\[Iota]\[Nu]\[Iota] \[CurlyEpsilon]\:1f50\[Theta]\[CurlyEpsilon]\:03af\:1fb3 \
\[Kappa]\[Alpha]\:1f76 \[Tau]\:1ff7 \[Pi]\[Rho]\:1f78\[FinalSigma] \[Alpha]\
\:1f50\[Tau]\:1fc7 \[Sigma]\[Eta]\[Mu]\[CurlyEpsilon]\:03af\:1ff3 \[Delta]\
\:03cd\[Omicron] \[CurlyEpsilon]\:1f50\[Theta]\[CurlyEpsilon]\:1fd6\[Alpha]\
\[Iota] \[Mu]\:1f74 \:1f10\[Pi]\:1f76 \[Tau]\:1f70 \[Alpha]\:1f50\[Tau]\:1f70 \
\[Mu]\:03ad\[Rho]\[Eta] \
\[Kappa]\[CurlyEpsilon]\:03af\[Mu]\[CurlyEpsilon]\[Nu]\[Alpha]\[Iota] \[Tau]\
\:1f70\[FinalSigma] \:1f10\[CurlyPhi]\[CurlyEpsilon]\[Xi]\:1fc6\[FinalSigma] \
\[Gamma]\[Omega]\[Nu]\:03af\[Alpha]\[FinalSigma] \[Delta]\[Upsilon]\[Sigma]\
\:1f76\[Nu] \:1f40\[Rho]\[Theta]\[Alpha]\:1fd6\[FinalSigma] \:1f34\[Sigma]\
\[Alpha]\[FinalSigma] \[Pi]\[Omicron]\[Iota]\:1ff6\[Sigma]\[Iota]\[Nu], \
\:1f10\[Pi]\:1fbd \[CurlyEpsilon]\:1f50\[Theta]\[CurlyEpsilon]\:03af\[Alpha]\
\[FinalSigma] \:1f14\[Sigma]\[Omicron]\[Nu]\[Tau]\[Alpha]\[Iota] \:1f00\
\[Lambda]\[Lambda]\:03ae\[Lambda]\[Alpha]\[Iota]\[FinalSigma] \[Alpha]\:1f31 \
\[CurlyEpsilon]\:1f50\[Theta]\[CurlyEpsilon]\:1fd6\[Alpha]\[Iota].\"\>"}], 
   ",", 
   RowBox[{"\<\"GreekTextWordCount\"\>", "\[Rule]", "31"}], ",", 
   RowBox[{"\<\"References\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\<\"Common Notion\"\>", "\[Rule]", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Common Notion\"\>", "\[Rule]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Postulate\"\>", "\[Rule]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\<\"Book\"\>", "\[Rule]", "1"}], ",", 
        RowBox[{"\<\"Theorem\"\>", "\[Rule]", "13"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"Proof\"\>", 
    "\[Rule]", "\<\"For with any straight line AB, and at the point B on it, \
let the two straight lines BC, BD not lying on the same side make the \
adjacent angles ABC, ABD equal to two right angles; I say that BD is in a \
straight line with CB. For, if BD is not in a straight line with BC, let BE \
be in a straight line with CB. Then, since the straight line AB stands on the \
straight line CBE,the angles ABC, ABE are equal to two right angles. [I. \
13]But the angles ABC, ABD are also equal to two right angles; therefore the \
angles CBA, ABE are equal to the angles CBA, ABD. [Post. 4 and C. N. 1] Let \
the angle CBA be subtracted from each;therefore the remaining angle ABE is \
equal to the remaining angle ABD, [C. N. 3] the less to the greater: which is \
impossible. Therefore BE is not in a straight line with CB. Similarly we can \
prove that neither is any other straightline except BD. Therefore CB is in a \
straight line with BD.\"\>"}], ",", 
   RowBox[{"\<\"ProofWordCount\"\>", "\[Rule]", "184"}], ",", 
   RowBox[{"\<\"GreekProof\"\>", 
    "\[Rule]", "\<\"\[Pi]\[Rho]\:1f78\[FinalSigma] \[Gamma]\:03ac\[Rho] \
\[Tau]\[Iota]\[Nu]\[Iota] \[CurlyEpsilon]\:1f50\[Theta]\[CurlyEpsilon]\:03af\
\:1fb3 \[Tau]\:1fc7 \[CapitalAlpha]\[CapitalBeta] \[Kappa]\[Alpha]\:1f76 \
\[Tau]\:1ff7 \[Pi]\[Rho]\:1f78\[FinalSigma] \[Alpha]\:1f50\[Tau]\:1fc7 \
\[Sigma]\[Eta]\[Mu]\[CurlyEpsilon]\:03af\:1ff3 \[Tau]\:1ff7 \[CapitalBeta] \
\[Delta]\:03cd\[Omicron] \[CurlyEpsilon]\:1f50\[Theta]\[CurlyEpsilon]\:1fd6\
\[Alpha]\[Iota] \[Alpha]\:1f31 \[CapitalBeta]\[CapitalGamma], \[CapitalBeta]\
\[CapitalDelta] \[Mu]\:1f74 \:1f10\[Pi]\:1f76 \[Tau]\:1f70 \[Alpha]\:1f50\
\[Tau]\:1f70 \[Mu]\:03ad\[Rho]\[Eta] \[Kappa]\[CurlyEpsilon]\:03af\[Mu]\
\[CurlyEpsilon]\[Nu]\[Alpha]\[Iota] \[Tau]\:1f70\[FinalSigma] \:1f10\
\[CurlyPhi]\[CurlyEpsilon]\[Xi]\:1fc6\[FinalSigma] \
\[Gamma]\[Omega]\[Nu]\:03af\[Alpha]\[FinalSigma] \[Tau]\:1f70\[FinalSigma] \
\:1f51\[Pi]\:1f78 \[CapitalAlpha]\[CapitalBeta]\[CapitalGamma], \
\[CapitalAlpha]\[CapitalBeta]\[CapitalDelta] \[Delta]\:03cd\[Omicron] \:1f40\
\[Rho]\[Theta]\[Alpha]\:1fd6\[FinalSigma] \:1f34\[Sigma]\[Alpha]\[FinalSigma] \
\[Pi]\[Omicron]\[Iota]\[CurlyEpsilon]\:03af\[Tau]\[Omega]\[Sigma]\[Alpha]\[Nu]\
: \[Lambda]\:03ad\[Gamma]\[Omega], \:1f45\[Tau]\[Iota] \:1f10\[Pi]\:1fbd \
\[CurlyEpsilon]\:1f50\[Theta]\[CurlyEpsilon]\:03af\[Alpha]\[FinalSigma] \
\:1f10\[Sigma]\[Tau]\:1f76 \[Tau]\:1fc7 \[CapitalGamma]\[CapitalBeta] \:1f21 \
\[CapitalBeta]\[CapitalDelta]. \[CurlyEpsilon]\:1f30 \[Gamma]\:1f70\[Rho] \
\[Mu]\:03ae \:1f10\[Sigma]\[Tau]\[Iota] \[Tau]\:1fc7 \[CapitalBeta]\
\[CapitalGamma] \:1f10\[Pi]\:1fbd \
\[CurlyEpsilon]\:1f50\[Theta]\[CurlyEpsilon]\:03af\[Alpha]\[FinalSigma] \
\:1f21 \[CapitalBeta]\[CapitalDelta], \:1f14\[Sigma]\[Tau]\[Omega] \[Tau]\
\:1fc7 \[CapitalGamma]\[CapitalBeta] \:1f10\[Pi]\:1fbd \[CurlyEpsilon]\:1f50\
\[Theta]\[CurlyEpsilon]\:03af\[Alpha]\[FinalSigma] \:1f21 \[CapitalBeta]\
\[CapitalEpsilon]. \:1f10\[Pi]\[CurlyEpsilon]\:1f76 \[Omicron]\:1f56\[Nu] \
\[CurlyEpsilon]\:1f50\[Theta]\[CurlyEpsilon]\:1fd6\[Alpha] \:1f21 \
\[CapitalAlpha]\[CapitalBeta] \:1f10\[Pi]\:1fbd \[CurlyEpsilon]\:1f50\[Theta]\
\[CurlyEpsilon]\:1fd6\[Alpha]\[Nu] \[Tau]\:1f74\[Nu] \[CapitalGamma]\
\[CapitalBeta]\[CapitalEpsilon] \:1f10\[CurlyPhi]\:03ad\[Sigma]\[Tau]\[Eta]\
\[Kappa]\[CurlyEpsilon]\[Nu], \[Alpha]\:1f31 \:1f04\[Rho]\[Alpha] \:1f51\[Pi]\
\:1f78 \[CapitalAlpha]\[CapitalBeta]\[CapitalGamma], \[CapitalAlpha]\
\[CapitalBeta]\[CapitalEpsilon] \[Gamma]\[Omega]\[Nu]\:03af\[Alpha]\[Iota] \
\[Delta]\:03cd\[Omicron] \:1f40\[Rho]\[Theta]\[Alpha]\:1fd6\[FinalSigma] \
\:1f34\[Sigma]\[Alpha]\[Iota] \[CurlyEpsilon]\:1f30\[Sigma]\:03af\[Nu]: \
\[CurlyEpsilon]\:1f30\[Sigma]\:1f76 \[Delta]\:1f72 \[Kappa]\[Alpha]\:1f76 \
\[Alpha]\:1f31 \:1f51\[Pi]\:1f78 \
\[CapitalAlpha]\[CapitalBeta]\[CapitalGamma], \[CapitalAlpha]\[CapitalBeta]\
\[CapitalDelta] \[Delta]\:03cd\[Omicron] \:1f40\[Rho]\[Theta]\[Alpha]\:1fd6\
\[FinalSigma] \:1f34\[Sigma]\[Alpha]\[Iota]: \[Alpha]\:1f31 \:1f04\[Rho]\
\[Alpha] \:1f51\[Pi]\:1f78 \[CapitalGamma]\[CapitalBeta]\[CapitalAlpha], \
\[CapitalAlpha]\[CapitalBeta]\[CapitalEpsilon] \[Tau]\[Alpha]\:1fd6\
\[FinalSigma] \:1f51\[Pi]\:1f78 \[CapitalGamma]\[CapitalBeta]\[CapitalAlpha], \
\[CapitalAlpha]\[CapitalBeta]\[CapitalDelta] \:1f34\[Sigma]\[Alpha]\[Iota] \
\[CurlyEpsilon]\:1f30\[Sigma]\:03af\[Nu]. \
\[Kappa]\[Omicron]\[Iota]\[Nu]\:1f74 \:1f00\[CurlyPhi]\:1fc3\[Rho]\:03ae\
\[Sigma]\[Theta]\[Omega] \:1f21 \:1f51\[Pi]\:1f78 \[CapitalGamma]\
\[CapitalBeta]\[CapitalAlpha]: \[Lambda]\[Omicron]\[Iota]\[Pi]\:1f74 \:1f04\
\[Rho]\[Alpha] \:1f21 \:1f51\[Pi]\:1f78 \[CapitalAlpha]\[CapitalBeta]\
\[CapitalEpsilon] \[Lambda]\[Omicron]\[Iota]\[Pi]\:1fc7 \[Tau]\:1fc7 \:1f51\
\[Pi]\:1f78 \[CapitalAlpha]\[CapitalBeta]\[CapitalDelta] \:1f10\[Sigma]\[Tau]\
\[Iota]\[Nu] \:1f34\[Sigma]\[Eta], \:1f21 \:1f10\[Lambda]\:03ac\[Sigma]\
\[Sigma]\[Omega]\[Nu] \[Tau]\:1fc7 \
\[Mu]\[CurlyEpsilon]\:03af\[Zeta]\[Omicron]\[Nu]\[Iota]: \:1f45\[Pi]\
\[CurlyEpsilon]\[Rho] \:1f10\[Sigma]\[Tau]\:1f76\[Nu] \:1f00\[Delta]\:03cd\
\[Nu]\[Alpha]\[Tau]\[Omicron]\[Nu]. \[Omicron]\:1f50\[Kappa] \:1f04\[Rho]\
\[Alpha] \:1f10\[Pi]\:1fbd \[CurlyEpsilon]\:1f50\[Theta]\[CurlyEpsilon]\:03af\
\[Alpha]\[FinalSigma] \:1f10\[Sigma]\[Tau]\:1f76\[Nu] \:1f21 \[CapitalBeta]\
\[CapitalEpsilon] \[Tau]\:1fc7 \[CapitalGamma]\[CapitalBeta]. \:1f41\[Mu]\
\[Omicron]\:03af\[Omega]\[FinalSigma] \[Delta]\:1f74 \[Delta]\[CurlyEpsilon]\
\:03af\[Xi]\[Omicron]\[Mu]\[CurlyEpsilon]\[Nu], \:1f45\[Tau]\[Iota] \
\[Omicron]\:1f50\[Delta]\:1f72 \:1f04\[Lambda]\[Lambda]\[Eta] \[Tau]\[Iota]\
\[FinalSigma] \[Pi]\[Lambda]\:1f74\[Nu] \[Tau]\:1fc6\[FinalSigma] \
\[CapitalBeta]\[CapitalDelta]: \:1f10\[Pi]\:1fbd \
\[CurlyEpsilon]\:1f50\[Theta]\[CurlyEpsilon]\:03af\[Alpha]\[FinalSigma] \
\:1f04\[Rho]\[Alpha] \:1f10\[Sigma]\[Tau]\:1f76\[Nu] \:1f21 \[CapitalGamma]\
\[CapitalBeta] \[Tau]\:1fc7 \[CapitalBeta]\[CapitalDelta]. \:1f10\:1f70\[Nu] \
\:1f04\[Rho]\[Alpha] \[Pi]\[Rho]\:03cc\[FinalSigma] \[Tau]\[Iota]\[Nu]\[Iota] \
\[CurlyEpsilon]\:1f50\[Theta]\[CurlyEpsilon]\:03af\:1fb3 \[Kappa]\[Alpha]\
\:1f76 \[Tau]\:1ff7 \[Pi]\[Rho]\:1f78\[FinalSigma] \[Alpha]\:1f50\[Tau]\:1fc7 \
\[Sigma]\[Eta]\[Mu]\[CurlyEpsilon]\:03af\:1ff3 \[Delta]\:03cd\[Omicron] \
\[CurlyEpsilon]\:1f50\[Theta]\[CurlyEpsilon]\:1fd6\[Alpha]\[Iota] \[Mu]\:1f74 \
\:1f10\[Pi]\:1f76 \[Tau]\:1f70 \[Alpha]\:1f50\[Tau]\:1f70 \[Mu]\:03ad\[Rho]\
\[Eta] \[Kappa]\[CurlyEpsilon]\:03af\[Mu]\[CurlyEpsilon]\[Nu]\[Alpha]\[Iota] \
\[Tau]\:1f70\[FinalSigma] \:1f10\[CurlyPhi]\[CurlyEpsilon]\[Xi]\:1fc6\
\[FinalSigma] \[Gamma]\[Omega]\[Nu]\:03af\[Alpha]\[FinalSigma] \[Delta]\
\[Upsilon]\[Sigma]\:1f76\[Nu] \:1f40\[Rho]\[Theta]\[Alpha]\:1fd6\[FinalSigma] \
\:1f34\[Sigma]\[Alpha]\[FinalSigma] \[Pi]\[Omicron]\[Iota]\:1ff6\[Sigma]\
\[Iota]\[Nu], \:1f10\[Pi]\:1fbd \[CurlyEpsilon]\:1f50\[Theta]\[CurlyEpsilon]\
\:03af\[Alpha]\[FinalSigma] \
\:1f14\[Sigma]\[Omicron]\[Nu]\[Tau]\[Alpha]\[Iota] \:1f00\[Lambda]\[Lambda]\
\:03ae\[Lambda]\[Alpha]\[Iota]\[FinalSigma] \[Alpha]\:1f31 \[CurlyEpsilon]\
\:1f50\[Theta]\[CurlyEpsilon]\:1fd6\[Alpha]\[Iota]: \
\:1f45\[Pi]\[CurlyEpsilon]\[Rho] \:1f14\[Delta]\[CurlyEpsilon]\[Iota] \
\[Delta]\[CurlyEpsilon]\:1fd6\[Xi]\[Alpha]\[Iota].\"\>"}], ",", 
   RowBox[{"\<\"GreekProofWordCount\"\>", "\[Rule]", "193"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.810040893937522*^9, 3.810040975368582*^9}, 
   3.8103191236284466`*^9, 3.811072937627428*^9, 3.8303567376437683`*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "Out[115]=",ExpressionUUID->"caea7046-c0a3-4c09-9f3e-26c6331f63b0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellMargins:>
  Dynamic[{{0, 0.}, {
    0.02587991718426501 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.}}],
 CellTags->{
  "SlideShowHeader", 
   "2020928172014.0081744"},ExpressionUUID->"fe76e7d5-8c75-4aed-a1c1-\
1e6c7cdd780e"],

Cell[CellGroupData[{

Cell["\:83b7\:53d6\:6761\:76ee\:7684\:5c5e\:6027", "Subsubsection",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.007332696335403726 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8100411455705967`*^9, 3.810041160129591*^9}, {
  3.8100412593503723`*^9, 3.8100412613251514`*^9}, {3.8100417008564744`*^9, 
  3.810041701778903*^9}, {3.8302777397480497`*^9, 3.8302777519334435`*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"299bfd08-9923-40a2-b4aa-\
4c250c973d32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", 
  RowBox[{"euc", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Book\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"\"\<Theorem\>\"", "\[Rule]", "14"}]}], "|>"}], "]"}], 
  "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8100410934388256`*^9, 3.810041099867845*^9}, {
  3.8103191294152946`*^9, 3.810319129626165*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "In[116]:=",ExpressionUUID->"257892d5-9928-4c80-bdd3-036046c08b0d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"VertexLabel\"\>", ",", "\<\"Text\"\>", 
   ",", "\<\"TextWordCount\"\>", ",", "\<\"GreekText\"\>", 
   ",", "\<\"GreekTextWordCount\"\>", ",", "\<\"References\"\>", 
   ",", "\<\"Proof\"\>", ",", "\<\"ProofWordCount\"\>", 
   ",", "\<\"GreekProof\"\>", ",", "\<\"GreekProofWordCount\"\>"}], 
  "}"}]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{3.810041100285585*^9, 3.810319130042909*^9, 
  3.811072941897713*^9, 3.8303567437717786`*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "Out[116]=",ExpressionUUID->"dc9accfd-e9bb-4e2c-b6e4-afe1358fc57e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:83b7\:53d6\:7279\:5b9a\:6761\:76ee\:7684\:7279\:5b9a\:5c5e\:6027", \
"Subsubsection",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.007332696335403726 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8100411710358534`*^9, 3.810041184136746*^9}, {
  3.8100412638306017`*^9, 3.810041268065985*^9}, {3.810041706107229*^9, 
  3.8100417064440193`*^9}, {3.8302777603043003`*^9, 3.830277766867963*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"e7dfbe57-6144-4f5c-8f0c-\
cbdae5728229"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"euc", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Book\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"\"\<Theorem\>\"", "\[Rule]", "14"}]}], "|>"}], "]"}], "[", 
  "\"\<References\>\"", "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8100410481458797`*^9, 3.8100410646886325`*^9}, {
  3.8103191336656933`*^9, 3.8103191340604525`*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "In[117]:=",ExpressionUUID->"26de1fb3-a4c8-4a80-b129-506373b8e9a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Common Notion\"\>", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Common Notion\"\>", "\[Rule]", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Postulate\"\>", "\[Rule]", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "13"}]}], "}"}]}], "}"}]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{3.8100410650643997`*^9, 3.810319134449214*^9, 
  3.811072945232144*^9, 3.8303567474320173`*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "Out[117]=",ExpressionUUID->"4d015011-8312-42c4-8b05-a8bb07a9d1ac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:516c\:7406\:548c\:516c\:8bbe", "Subsubsection",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.007332696335403726 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8100415624318542`*^9, 3.810041579557272*^9}, {
  3.8302777735919504`*^9, 3.830277780564918*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"4882bc8b-ad5d-4738-b9eb-\
750081806b30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Keys", "[", "euc", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "#", "]"}], "<", "2"}], "&"}]}], "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.81004146249277*^9, 3.810041520000069*^9}, {
  3.8103191388655148`*^9, 3.810319139128354*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "In[118]:=",ExpressionUUID->"e43fb863-e463-48f4-aeb3-a2bdbb876a7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Postulate\"\>", "\[Rule]", "1"}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Postulate\"\>", "\[Rule]", "2"}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Postulate\"\>", "\[Rule]", "3"}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Postulate\"\>", "\[Rule]", "4"}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Postulate\"\>", "\[Rule]", "5"}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Common Notion\"\>", "\[Rule]", "1"}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Common Notion\"\>", "\[Rule]", "2"}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Common Notion\"\>", "\[Rule]", "3"}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Common Notion\"\>", "\[Rule]", "4"}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"Common Notion\"\>", "\[Rule]", "5"}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.810041478537854*^9, 3.8100415210524187`*^9}, 
   3.8103191395500975`*^9, 3.8110729481309395`*^9, 3.8303567510008574`*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "Out[118]=",ExpressionUUID->"d5116fc6-aad2-47f8-8793-58dd4cad4a82"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:83b7\:53d6\:7b2c\:56db\:5377\:7684\:6240\:6709\:547d\:9898", \
"Subsubsection",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.007332696335403726 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8100416190276337`*^9, 3.8100416254856443`*^9}, {
  3.8302777882094784`*^9, 3.830277837704853*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"0ddf99b6-38a2-4760-9e5e-\
00daab90e051"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Keys", "[", "euc", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"KeyExistsQ", "[", 
      RowBox[{"#", ",", "\"\<Theorem\>\""}], "]"}], "&&", 
     RowBox[{
      RowBox[{"#", "[", "\"\<Book\>\"", "]"}], "\[Equal]", "4"}]}], "&"}]}], 
  "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.810319016058197*^9, 3.810319016059196*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "In[119]:=",ExpressionUUID->"77a174fa-cb50-4f42-a1c0-07a477bc79ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "1"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "2"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "3"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "4"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "5"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "6"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "7"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "8"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "9"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "10"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "11"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "12"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "13"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "14"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "15"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "4"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "16"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{3.810319153992268*^9, 3.8110729537815003`*^9, 
  3.8303567554677186`*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "Out[119]=",ExpressionUUID->"a4a53790-f386-4002-a80a-a9f212cbfdfd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellMargins:>
  Dynamic[{{0, 0.}, {
    0.02587991718426501 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.}}],
 CellTags->{
  "SlideShowHeader", 
   "2020928172014.0081744"},ExpressionUUID->"f28e6b95-8122-404d-9f06-\
d2fe231cb2e7"],

Cell[CellGroupData[{

Cell["\:6570\:636e\:5206\:6790", "Subsubsection",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.007332696335403726 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8100471110766373`*^9, 3.81004714850926*^9}, {
  3.8100472810695753`*^9, 3.810047282199897*^9}, {3.83027784277769*^9, 
  3.8302778441888747`*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"fd2ea037-fe45-4c6d-a449-\
8877c3c39e6e"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Euclid Book\"\>", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10",
      "11", "12", "13"},
    {"\<\"Definition\"\>", "23", "2", "11", "7", "18", "5", "22", "0", "0", 
     "16", "28", "0", "0"},
    {"\<\"Theorem\"\>", "48", "14", "37", "16", "25", "33", "39", "27", "36", 
     "115", "39", "18", "18"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       GrayLevel[1], 
       RGBColor[0.87, 0.94, 1], 
       RGBColor[0.88, 1, 0.88]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8101618841379027`*^9, 3.8101619107624397`*^9}, 
   3.810161942706689*^9, 3.8101621649782796`*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->"Out[37]=",ExpressionUUID->"61a6f5de-d799-4add-bff1-5f2278b936ae"],

Cell["\:5f15\:7528\:6761\:76ee\:7684\:6570\:76ee", "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8100473361853123`*^9, 3.810047349789099*^9}, {
  3.8302780232723837`*^9, 3.8302780342328343`*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"f7accd10-a1f9-4cd6-aea4-\
c92ceafe66d9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ref", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"euc", "[", "#", "]"}], "[", "\"\<References\>\"", "]"}], "&"}],
     "/@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Keys", "[", "euc", "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], "&&", 
        RowBox[{"StringMatchQ", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Keys", "[", "#", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<Theorem\>\""}], "]"}]}], 
       "&"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{"Length", ",", "ref"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}]}], "]"}]}], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.810044461929713*^9, 3.810044483808606*^9}, {
  3.810044523587036*^9, 3.810044530063049*^9}, {3.810044964531479*^9, 
  3.8100449826634393`*^9}, {3.810319160964003*^9, 3.810319164463849*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "In[120]:=",ExpressionUUID->"1d4114eb-869d-47b1-90c9-1dc27f341715"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.7, 0.7, 0.7], EdgeForm[{Opacity[0.581], Thickness[Small]}], {}, 
    {RGBColor[0.7, 0.7, 0.7], EdgeForm[{Opacity[0.581], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.5, 0}, {0.5, 16.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{20.509593196232636`, 40.528848330183216`}, {
           58.6159287334683, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 16]& ,
        TagBoxNote->"16"],
       StyleBox["16", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[16, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 68.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{40.028848330183216`, 
           60.0481034641338}, {-61.51120913275976, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 68]& ,
        TagBoxNote->"68"],
       StyleBox["68", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[68, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.5, 0}, {2.5, 77.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{59.5481034641338, 
           79.56735859808438}, {-82.30244453268385, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 77]& ,
        TagBoxNote->"77"],
       StyleBox["77", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[77, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.5, 0}, {3.5, 86.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{79.06735859808438, 
           99.08661373203496}, {-103.09367993260794`, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 86]& ,
        TagBoxNote->"86"],
       StyleBox["86", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[86, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.5, 0}, {4.5, 62.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{98.58661373203496, 
           118.60586886598556`}, {-47.650385532810375`, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 62]& ,
        TagBoxNote->"62"],
       StyleBox["62", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[62, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.5, 0}, {5.5, 39.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{118.10586886598556`, 138.12512399993614`}, {
           5.4827716003289595`, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 39]& ,
        TagBoxNote->"39"],
       StyleBox["39", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[39, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.5, 0}, {6.5, 33.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{137.62512399993614`, 157.64437913388673`}, {
           19.343595200278358`, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 33]& ,
        TagBoxNote->"33"],
       StyleBox["33", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[33, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.5, 0}, {7.5, 27.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{157.14437913388673`, 177.1636342678373}, {
           33.20441880022775, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 27]& ,
        TagBoxNote->"27"],
       StyleBox["27", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[27, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.5, 0}, {8.5, 16.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{176.6636342678373, 196.6828894017879}, {
           58.6159287334683, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 16]& ,
        TagBoxNote->"16"],
       StyleBox["16", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[16, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.5, 0}, {9.5, 11.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{196.1828894017879, 216.20214453573846`}, {
           70.16661506675946, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9.5, 0}, {10.5, 7.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{215.70214453573846`, 235.72139966968905`}, {
           79.40716413339238, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10.5, 0}, {11.5, 8.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{235.22139966968905`, 255.24065480363964`}, {
           77.09702686673415, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{11.5, 0}, {12.5, 7.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{254.74065480363964`, 274.75990993759024`}, {
           79.40716413339238, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{12.5, 0}, {13.5, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{274.25990993759024`, 294.2791650715408}, {
           88.64771320002532, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{13.5, 0}, {14.5, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{293.7791650715408, 313.7984202054914}, {
           90.95785046668355, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{14.5, 0}, {15.5, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{313.2984202054914, 333.31767533944196`}, {
           90.95785046668355, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{15.5, 0}, {16.5, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{332.81767533944196`, 352.8369304733925}, {
           93.26798773334178, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.8400000000000001, 0},
  AxesStyle->GrayLevel[0],
  BaseStyle->GrayLevel[0],
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->GrayLevel[0],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->GrayLevel[0],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  LabelStyle->{FontFamily -> "Helvetica", 
    GrayLevel[0]},
  PlotRange->{{-0.5, 16.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic},
  TicksStyle->GrayLevel[0]]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{3.8100450170774546`*^9, 3.8103165502171984`*^9, 
  3.810316589230074*^9, 3.810319177388892*^9, 3.8110729574069023`*^9, 
  3.8303567682092495`*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "Out[121]=",ExpressionUUID->"13eb376d-d41d-49be-9c34-c79e9140d50f"]
}, Open  ]],

Cell["\:6700\:5e38\:88ab\:5f15\:7528\:7684\:6761\:76ee", "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8100473067260876`*^9, 3.81004732082158*^9}, {
  3.830278042801633*^9, 3.830278046074078*^9}},
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"f507fd2a-1203-408c-869a-\
4f36649b935f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Commonest", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"ref", ",", "1"}], "]"}], ",", "5"}], "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8100451825741854`*^9, 3.810045187701063*^9}},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "In[122]:=",ExpressionUUID->"ac7074b3-a2f1-4df1-be2c-ff8b47ba854f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "5"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "11"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "6"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "10"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "11"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Book\"\>", "\[Rule]", "10"}], ",", 
     RowBox[{"\<\"Theorem\"\>", "\[Rule]", "13"}]}], "}"}]}], "}"}]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{3.810045188187766*^9, 3.810319188931788*^9, 
  3.811072961428754*^9, 3.8303567770964437`*^9},
 CellTags->"2020928172014.0081744",
 CellLabel->
  "Out[122]=",ExpressionUUID->"7cc948d7-5aba-498f-8dd7-1af8f0900b7d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellMargins:>
  Dynamic[{{0, 0.}, {
    0.02587991718426501 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.}}],
 CellTags->
  "SlideShowHeader",ExpressionUUID->"86993c5b-1dc6-45ae-b6a8-ad0601caf639"],

Cell[CellGroupData[{

Cell["\<\
\:300a\:51e0\:4f55\:539f\:672c\:300b\:5b9a\:7406\:5173\:8054\:56fe\
\>", "Section",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.029330824741200825` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.07 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.830278691306075*^9, 
  3.830278728521017*^9}},ExpressionUUID->"cd7fa2ce-3778-4725-96de-\
502a41f380e7"],

Cell[TextData[StyleBox[ButtonBox["https://datarepository.wolframcloud.com/\
resources/Theorem-Network-from-Euclids-Elements",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://datarepository.wolframcloud.com/resources/Theorem-Network-\
from-Euclids-Elements"], None},
 ButtonNote->
  "https://datarepository.wolframcloud.com/resources/Theorem-Network-from-\
Euclids-Elements"],
 Background->RGBColor[1, 0.9, 0.8]]], "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{
  3.809984621522688*^9, {3.8302782424606295`*^9, 3.8302782502786283`*^9}},
 FontSize->24,
 FontColor->GrayLevel[0.5],
 CellTags->
  "2020928172014.0081744",ExpressionUUID->"a0cbb0e0-5a20-47f4-bca2-\
a86f3a300b17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceData", "[", 
  TagBox["\"\<Theorem Network from Euclid's Elements\>\"",
   #& ,
   BoxID -> "ResourceTag-Theorem Network from Euclid's Elements-Input",
   AutoDelete->True], "]"}]], "Input",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8302782707114925`*^9, 3.830278273460719*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"04c97257-9d7f-4c92-8f17-cc7e6afd1653"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Association["Book" -> 1, "Theorem" -> 1], 
       Association["Common Notion" -> 1], 
       Association["Postulate" -> 1], 
       Association["Postulate" -> 3], 
       Association["Book" -> 1, "Theorem" -> 2], 
       Association["Common Notion" -> 3], 
       Association["Postulate" -> 2], 
       Association["Book" -> 1, "Theorem" -> 3], 
       Association["Book" -> 1, "Theorem" -> 4], 
       Association["Common Notion" -> 4], 
       Association["Book" -> 1, "Theorem" -> 5], 
       Association["Book" -> 1, "Theorem" -> 6], 
       Association["Common Notion" -> 5], 
       Association["Book" -> 1, "Theorem" -> 7], 
       Association["Book" -> 1, "Theorem" -> 8], 
       Association["Book" -> 1, "Theorem" -> 9], 
       Association["Book" -> 1, "Theorem" -> 10], 
       Association["Book" -> 1, "Theorem" -> 11], 
       Association["Book" -> 1, "Theorem" -> 12], 
       Association["Book" -> 1, "Theorem" -> 13], 
       Association["Common Notion" -> 2], 
       Association["Book" -> 1, "Theorem" -> 14], 
       Association["Postulate" -> 4], 
       Association["Book" -> 1, "Theorem" -> 15], 
       Association["Book" -> 1, "Theorem" -> 16], 
       Association["Book" -> 1, "Theorem" -> 17], 
       Association["Book" -> 1, "Theorem" -> 18], 
       Association["Book" -> 1, "Theorem" -> 19], 
       Association["Book" -> 1, "Theorem" -> 20], 
       Association["Book" -> 1, "Theorem" -> 21], 
       Association["Book" -> 1, "Theorem" -> 22], 
       Association["Book" -> 1, "Theorem" -> 23], 
       Association["Book" -> 1, "Theorem" -> 24], 
       Association["Book" -> 1, "Theorem" -> 25], 
       Association["Book" -> 1, "Theorem" -> 26], 
       Association["Book" -> 1, "Theorem" -> 27], 
       Association["Book" -> 1, "Theorem" -> 28], 
       Association["Book" -> 1, "Theorem" -> 29], 
       Association["Postulate" -> 5], 
       Association["Book" -> 1, "Theorem" -> 30], 
       Association["Book" -> 1, "Theorem" -> 31], 
       Association["Book" -> 1, "Theorem" -> 32], 
       Association["Book" -> 1, "Theorem" -> 33], 
       Association["Book" -> 1, "Theorem" -> 34], 
       Association["Book" -> 1, "Theorem" -> 35], 
       Association["Book" -> 1, "Theorem" -> 36], 
       Association["Book" -> 1, "Theorem" -> 37], 
       Association["Book" -> 1, "Theorem" -> 38], 
       Association["Book" -> 1, "Theorem" -> 39], 
       Association["Book" -> 1, "Theorem" -> 40], 
       Association["Book" -> 1, "Theorem" -> 41], 
       Association["Book" -> 1, "Theorem" -> 42], 
       Association["Book" -> 1, "Theorem" -> 43], 
       Association["Book" -> 1, "Theorem" -> 44], 
       Association["Book" -> 1, "Theorem" -> 45], 
       Association["Book" -> 1, "Theorem" -> 46], 
       Association["Book" -> 1, "Theorem" -> 47], 
       Association["Book" -> 1, "Theorem" -> 48], 
       Association["Book" -> 2, "Theorem" -> 1], 
       Association["Book" -> 2, "Theorem" -> 2], 
       Association["Book" -> 2, "Theorem" -> 3], 
       Association["Book" -> 2, "Theorem" -> 4], 
       Association["Book" -> 2, "Theorem" -> 5], 
       Association["Book" -> 2, "Theorem" -> 6], 
       Association["Book" -> 2, "Theorem" -> 7], 
       Association["Book" -> 2, "Theorem" -> 8], 
       Association["Book" -> 2, "Theorem" -> 9], 
       Association["Book" -> 2, "Theorem" -> 10], 
       Association["Book" -> 2, "Theorem" -> 11], 
       Association["Book" -> 2, "Theorem" -> 12], 
       Association["Book" -> 2, "Theorem" -> 13], 
       Association["Book" -> 2, "Theorem" -> 14], 
       Association["Book" -> 3, "Theorem" -> 1], 
       Association["Book" -> 3, "Theorem" -> 2], 
       Association["Book" -> 3, "Theorem" -> 3], 
       Association["Book" -> 3, "Theorem" -> 4], 
       Association["Book" -> 3, "Theorem" -> 5], 
       Association["Book" -> 3, "Theorem" -> 6], 
       Association["Book" -> 3, "Theorem" -> 7], 
       Association["Book" -> 3, "Theorem" -> 8], 
       Association["Book" -> 3, "Theorem" -> 9], 
       Association["Book" -> 3, "Theorem" -> 10], 
       Association["Book" -> 3, "Theorem" -> 11], 
       Association["Book" -> 3, "Theorem" -> 12], 
       Association["Book" -> 3, "Theorem" -> 13], 
       Association["Book" -> 3, "Theorem" -> 14], 
       Association["Book" -> 3, "Theorem" -> 15], 
       Association["Book" -> 3, "Theorem" -> 16], 
       Association["Book" -> 3, "Theorem" -> 17], 
       Association["Book" -> 3, "Theorem" -> 18], 
       Association["Book" -> 3, "Theorem" -> 19], 
       Association["Book" -> 3, "Theorem" -> 20], 
       Association["Book" -> 3, "Theorem" -> 21], 
       Association["Book" -> 3, "Theorem" -> 22], 
       Association["Book" -> 3, "Theorem" -> 23], 
       Association["Book" -> 3, "Theorem" -> 24], 
       Association["Book" -> 3, "Theorem" -> 25], 
       Association["Book" -> 3, "Theorem" -> 26], 
       Association["Book" -> 3, "Theorem" -> 27], 
       Association["Book" -> 3, "Theorem" -> 28], 
       Association["Book" -> 3, "Theorem" -> 29], 
       Association["Book" -> 3, "Theorem" -> 30], 
       Association["Book" -> 3, "Theorem" -> 31], 
       Association["Book" -> 3, "Theorem" -> 32], 
       Association["Book" -> 3, "Theorem" -> 33], 
       Association["Book" -> 3, "Theorem" -> 34], 
       Association["Book" -> 3, "Theorem" -> 35], 
       Association["Book" -> 3, "Theorem" -> 36], 
       Association["Book" -> 3, "Theorem" -> 37], 
       Association["Book" -> 4, "Theorem" -> 1], 
       Association["Book" -> 4, "Theorem" -> 2], 
       Association["Book" -> 4, "Theorem" -> 3], 
       Association["Book" -> 4, "Theorem" -> 4], 
       Association["Book" -> 4, "Theorem" -> 5], 
       Association["Book" -> 4, "Theorem" -> 6], 
       Association["Book" -> 4, "Theorem" -> 7], 
       Association["Book" -> 4, "Theorem" -> 8], 
       Association["Book" -> 4, "Theorem" -> 9], 
       Association["Book" -> 4, "Theorem" -> 10], 
       Association["Book" -> 4, "Theorem" -> 11], 
       Association["Book" -> 4, "Theorem" -> 12], 
       Association["Book" -> 4, "Theorem" -> 13], 
       Association["Book" -> 4, "Theorem" -> 14], 
       Association["Book" -> 4, "Theorem" -> 15], 
       Association["Book" -> 4, "Theorem" -> 16], 
       Association["Book" -> 5, "Theorem" -> 1], 
       Association["Book" -> 5, "Theorem" -> 2], 
       Association["Book" -> 5, "Theorem" -> 3], 
       Association["Book" -> 5, "Theorem" -> 4], 
       Association["Book" -> 5, "Theorem" -> 5], 
       Association["Book" -> 5, "Theorem" -> 6], 
       Association["Book" -> 5, "Theorem" -> 7], 
       Association["Book" -> 5, "Theorem" -> 8], 
       Association["Book" -> 5, "Theorem" -> 9], 
       Association["Book" -> 5, "Theorem" -> 10], 
       Association["Book" -> 5, "Theorem" -> 11], 
       Association["Book" -> 5, "Theorem" -> 12], 
       Association["Book" -> 5, "Theorem" -> 13], 
       Association["Book" -> 5, "Theorem" -> 14], 
       Association["Book" -> 5, "Theorem" -> 15], 
       Association["Book" -> 5, "Theorem" -> 16], 
       Association["Book" -> 5, "Theorem" -> 17], 
       Association["Book" -> 5, "Theorem" -> 18], 
       Association["Book" -> 5, "Theorem" -> 19], 
       Association["Book" -> 5, "Theorem" -> 20], 
       Association["Book" -> 5, "Theorem" -> 21], 
       Association["Book" -> 5, "Theorem" -> 22], 
       Association["Book" -> 5, "Theorem" -> 23], 
       Association["Book" -> 5, "Theorem" -> 24], 
       Association["Book" -> 5, "Theorem" -> 25], 
       Association["Book" -> 6, "Theorem" -> 1], 
       Association["Book" -> 6, "Theorem" -> 2], 
       Association["Book" -> 6, "Theorem" -> 3], 
       Association["Book" -> 6, "Theorem" -> 4], 
       Association["Book" -> 6, "Theorem" -> 5], 
       Association["Book" -> 6, "Theorem" -> 6], 
       Association["Book" -> 6, "Theorem" -> 7], 
       Association["Book" -> 6, "Theorem" -> 8], 
       Association["Book" -> 6, "Theorem" -> 9], 
       Association["Book" -> 6, "Theorem" -> 10], 
       Association["Book" -> 6, "Theorem" -> 11], 
       Association["Book" -> 6, "Theorem" -> 12], 
       Association["Book" -> 6, "Theorem" -> 13], 
       Association["Book" -> 6, "Theorem" -> 14], 
       Association["Book" -> 6, "Theorem" -> 15], 
       Association["Book" -> 6, "Theorem" -> 16], 
       Association["Book" -> 6, "Theorem" -> 17], 
       Association["Book" -> 6, "Theorem" -> 18], 
       Association["Book" -> 6, "Theorem" -> 19], 
       Association["Book" -> 6, "Theorem" -> 20], 
       Association["Book" -> 6, "Theorem" -> 21], 
       Association["Book" -> 6, "Theorem" -> 22], 
       Association["Book" -> 6, "Theorem" -> 23], 
       Association["Book" -> 6, "Theorem" -> 24], 
       Association["Book" -> 6, "Theorem" -> 25], 
       Association["Book" -> 6, "Theorem" -> 26], 
       Association["Book" -> 6, "Theorem" -> 27], 
       Association["Book" -> 6, "Theorem" -> 28], 
       Association["Book" -> 6, "Theorem" -> 29], 
       Association["Book" -> 6, "Theorem" -> 30], 
       Association["Book" -> 6, "Theorem" -> 31], 
       Association["Book" -> 6, "Theorem" -> 32], 
       Association["Book" -> 6, "Theorem" -> 33], 
       Association["Book" -> 7, "Theorem" -> 1], 
       Association["Book" -> 7, "Theorem" -> 2], 
       Association["Book" -> 7, "Theorem" -> 3], 
       Association["Book" -> 7, "Theorem" -> 4], 
       Association["Book" -> 7, "Theorem" -> 5], 
       Association["Book" -> 7, "Theorem" -> 6], 
       Association["Book" -> 7, "Theorem" -> 7], 
       Association["Book" -> 7, "Theorem" -> 8], 
       Association["Book" -> 7, "Theorem" -> 9], 
       Association["Book" -> 7, "Theorem" -> 10], 
       Association["Book" -> 7, "Theorem" -> 11], 
       Association["Book" -> 7, "Theorem" -> 12], 
       Association["Book" -> 7, "Theorem" -> 13], 
       Association["Book" -> 7, "Theorem" -> 14], 
       Association["Book" -> 7, "Theorem" -> 15], 
       Association["Book" -> 7, "Theorem" -> 16], 
       Association["Book" -> 7, "Theorem" -> 17], 
       Association["Book" -> 7, "Theorem" -> 18], 
       Association["Book" -> 7, "Theorem" -> 19], 
       Association["Book" -> 7, "Theorem" -> 20], 
       Association["Book" -> 7, "Theorem" -> 21], 
       Association["Book" -> 7, "Theorem" -> 22], 
       Association["Book" -> 7, "Theorem" -> 23], 
       Association["Book" -> 7, "Theorem" -> 24], 
       Association["Book" -> 7, "Theorem" -> 25], 
       Association["Book" -> 7, "Theorem" -> 26], 
       Association["Book" -> 7, "Theorem" -> 27], 
       Association["Book" -> 7, "Theorem" -> 28], 
       Association["Book" -> 7, "Theorem" -> 29], 
       Association["Book" -> 7, "Theorem" -> 30], 
       Association["Book" -> 7, "Theorem" -> 31], 
       Association["Book" -> 7, "Theorem" -> 32], 
       Association["Book" -> 7, "Theorem" -> 33], 
       Association["Book" -> 7, "Theorem" -> 34], 
       Association["Book" -> 7, "Theorem" -> 35], 
       Association["Book" -> 7, "Theorem" -> 36], 
       Association["Book" -> 7, "Theorem" -> 37], 
       Association["Book" -> 7, "Theorem" -> 38], 
       Association["Book" -> 7, "Theorem" -> 39], 
       Association["Book" -> 8, "Theorem" -> 1], 
       Association["Book" -> 8, "Theorem" -> 2], 
       Association["Book" -> 8, "Theorem" -> 3], 
       Association["Book" -> 8, "Theorem" -> 4], 
       Association["Book" -> 8, "Theorem" -> 5], 
       Association["Book" -> 8, "Theorem" -> 6], 
       Association["Book" -> 8, "Theorem" -> 7], 
       Association["Book" -> 8, "Theorem" -> 8], 
       Association["Book" -> 8, "Theorem" -> 9], 
       Association["Book" -> 8, "Theorem" -> 10], 
       Association["Book" -> 8, "Theorem" -> 11], 
       Association["Book" -> 8, "Theorem" -> 12], 
       Association["Book" -> 8, "Theorem" -> 13], 
       Association["Book" -> 8, "Theorem" -> 14], 
       Association["Book" -> 8, "Theorem" -> 15], 
       Association["Book" -> 8, "Theorem" -> 16], 
       Association["Book" -> 8, "Theorem" -> 17], 
       Association["Book" -> 8, "Theorem" -> 18], 
       Association["Book" -> 8, "Theorem" -> 19], 
       Association["Book" -> 8, "Theorem" -> 20], 
       Association["Book" -> 8, "Theorem" -> 21], 
       Association["Book" -> 8, "Theorem" -> 22], 
       Association["Book" -> 8, "Theorem" -> 23], 
       Association["Book" -> 8, "Theorem" -> 24], 
       Association["Book" -> 8, "Theorem" -> 25], 
       Association["Book" -> 8, "Theorem" -> 26], 
       Association["Book" -> 8, "Theorem" -> 27], 
       Association["Book" -> 9, "Theorem" -> 1], 
       Association["Book" -> 9, "Theorem" -> 2], 
       Association["Book" -> 9, "Theorem" -> 3], 
       Association["Book" -> 9, "Theorem" -> 4], 
       Association["Book" -> 9, "Theorem" -> 5], 
       Association["Book" -> 9, "Theorem" -> 6], 
       Association["Book" -> 9, "Theorem" -> 7], 
       Association["Book" -> 9, "Theorem" -> 8], 
       Association["Book" -> 9, "Theorem" -> 9], 
       Association["Book" -> 9, "Theorem" -> 10], 
       Association["Book" -> 9, "Theorem" -> 11], 
       Association["Book" -> 9, "Theorem" -> 12], 
       Association["Book" -> 9, "Theorem" -> 13], 
       Association["Book" -> 9, "Theorem" -> 14], 
       Association["Book" -> 9, "Theorem" -> 15], 
       Association["Book" -> 9, "Theorem" -> 16], 
       Association["Book" -> 9, "Theorem" -> 17], 
       Association["Book" -> 9, "Theorem" -> 18], 
       Association["Book" -> 9, "Theorem" -> 19], 
       Association["Book" -> 9, "Theorem" -> 20], 
       Association["Book" -> 9, "Theorem" -> 21], 
       Association["Book" -> 9, "Theorem" -> 22], 
       Association["Book" -> 9, "Theorem" -> 23], 
       Association["Book" -> 9, "Theorem" -> 24], 
       Association["Book" -> 9, "Theorem" -> 25], 
       Association["Book" -> 9, "Theorem" -> 26], 
       Association["Book" -> 9, "Theorem" -> 27], 
       Association["Book" -> 9, "Theorem" -> 28], 
       Association["Book" -> 9, "Theorem" -> 29], 
       Association["Book" -> 9, "Theorem" -> 30], 
       Association["Book" -> 9, "Theorem" -> 31], 
       Association["Book" -> 9, "Theorem" -> 32], 
       Association["Book" -> 9, "Theorem" -> 33], 
       Association["Book" -> 9, "Theorem" -> 34], 
       Association["Book" -> 9, "Theorem" -> 35], 
       Association["Book" -> 9, "Theorem" -> 36], 
       Association["Book" -> 10, "Theorem" -> 1], 
       Association["Book" -> 10, "Theorem" -> 2], 
       Association["Book" -> 10, "Theorem" -> 3], 
       Association["Book" -> 10, "Theorem" -> 4], 
       Association["Book" -> 10, "Theorem" -> 5], 
       Association["Book" -> 10, "Theorem" -> 6], 
       Association["Book" -> 10, "Theorem" -> 7], 
       Association["Book" -> 10, "Theorem" -> 8], 
       Association["Book" -> 10, "Theorem" -> 9], 
       Association["Book" -> 10, "Theorem" -> 10], 
       Association["Book" -> 10, "Theorem" -> 11], 
       Association["Book" -> 10, "Theorem" -> 12], 
       Association["Book" -> 10, "Theorem" -> 13], 
       Association["Book" -> 10, "Theorem" -> 14], 
       Association["Book" -> 10, "Theorem" -> 15], 
       Association["Book" -> 10, "Theorem" -> 16], 
       Association["Book" -> 10, "Theorem" -> 17], 
       Association["Book" -> 10, "Theorem" -> 18], 
       Association["Book" -> 10, "Theorem" -> 19], 
       Association["Book" -> 10, "Theorem" -> 20], 
       Association["Book" -> 10, "Theorem" -> 21], 
       Association["Book" -> 10, "Theorem" -> 22], 
       Association["Book" -> 10, "Theorem" -> 23], 
       Association["Book" -> 10, "Theorem" -> 24], 
       Association["Book" -> 10, "Theorem" -> 25], 
       Association["Book" -> 10, "Theorem" -> 26], 
       Association["Book" -> 10, "Theorem" -> 27], 
       Association["Book" -> 10, "Theorem" -> 28], 
       Association["Book" -> 10, "Theorem" -> 29], 
       Association["Book" -> 10, "Theorem" -> 30], 
       Association["Book" -> 10, "Theorem" -> 31], 
       Association["Book" -> 10, "Theorem" -> 32], 
       Association["Book" -> 10, "Theorem" -> 33], 
       Association["Book" -> 10, "Theorem" -> 34], 
       Association["Book" -> 10, "Theorem" -> 35], 
       Association["Book" -> 10, "Theorem" -> 36], 
       Association["Book" -> 10, "Theorem" -> 37], 
       Association["Book" -> 10, "Theorem" -> 38], 
       Association["Book" -> 10, "Theorem" -> 39], 
       Association["Book" -> 10, "Theorem" -> 40], 
       Association["Book" -> 10, "Theorem" -> 41], 
       Association["Book" -> 10, "Theorem" -> 42], 
       Association["Book" -> 10, "Theorem" -> 43], 
       Association["Book" -> 10, "Theorem" -> 44], 
       Association["Book" -> 10, "Theorem" -> 45], 
       Association["Book" -> 10, "Theorem" -> 46], 
       Association["Book" -> 10, "Theorem" -> 47], 
       Association["Book" -> 10, "Theorem" -> 48], 
       Association["Book" -> 10, "Theorem" -> 49], 
       Association["Book" -> 10, "Theorem" -> 50], 
       Association["Book" -> 10, "Theorem" -> 51], 
       Association["Book" -> 10, "Theorem" -> 52], 
       Association["Book" -> 10, "Theorem" -> 53], 
       Association["Book" -> 10, "Theorem" -> 54], 
       Association["Book" -> 10, "Theorem" -> 55], 
       Association["Book" -> 10, "Theorem" -> 56], 
       Association["Book" -> 10, "Theorem" -> 57], 
       Association["Book" -> 10, "Theorem" -> 58], 
       Association["Book" -> 10, "Theorem" -> 59], 
       Association["Book" -> 10, "Theorem" -> 60], 
       Association["Book" -> 10, "Theorem" -> 61], 
       Association["Book" -> 10, "Theorem" -> 62], 
       Association["Book" -> 10, "Theorem" -> 63], 
       Association["Book" -> 10, "Theorem" -> 64], 
       Association["Book" -> 10, "Theorem" -> 65], 
       Association["Book" -> 10, "Theorem" -> 66], 
       Association["Book" -> 10, "Theorem" -> 67], 
       Association["Book" -> 10, "Theorem" -> 68], 
       Association["Book" -> 10, "Theorem" -> 69], 
       Association["Book" -> 10, "Theorem" -> 70], 
       Association["Book" -> 10, "Theorem" -> 71], 
       Association["Book" -> 10, "Theorem" -> 72], 
       Association["Book" -> 10, "Theorem" -> 73], 
       Association["Book" -> 10, "Theorem" -> 74], 
       Association["Book" -> 10, "Theorem" -> 75], 
       Association["Book" -> 10, "Theorem" -> 76], 
       Association["Book" -> 10, "Theorem" -> 77], 
       Association["Book" -> 10, "Theorem" -> 78], 
       Association["Book" -> 10, "Theorem" -> 79], 
       Association["Book" -> 10, "Theorem" -> 80], 
       Association["Book" -> 10, "Theorem" -> 81], 
       Association["Book" -> 10, "Theorem" -> 82], 
       Association["Book" -> 10, "Theorem" -> 83], 
       Association["Book" -> 10, "Theorem" -> 84], 
       Association["Book" -> 10, "Theorem" -> 85], 
       Association["Book" -> 10, "Theorem" -> 86], 
       Association["Book" -> 10, "Theorem" -> 87], 
       Association["Book" -> 10, "Theorem" -> 88], 
       Association["Book" -> 10, "Theorem" -> 89], 
       Association["Book" -> 10, "Theorem" -> 90], 
       Association["Book" -> 10, "Theorem" -> 91], 
       Association["Book" -> 10, "Theorem" -> 92], 
       Association["Book" -> 10, "Theorem" -> 93], 
       Association["Book" -> 10, "Theorem" -> 94], 
       Association["Book" -> 10, "Theorem" -> 95], 
       Association["Book" -> 10, "Theorem" -> 96], 
       Association["Book" -> 10, "Theorem" -> 97], 
       Association["Book" -> 10, "Theorem" -> 98], 
       Association["Book" -> 10, "Theorem" -> 99], 
       Association["Book" -> 10, "Theorem" -> 100], 
       Association["Book" -> 10, "Theorem" -> 101], 
       Association["Book" -> 10, "Theorem" -> 102], 
       Association["Book" -> 10, "Theorem" -> 103], 
       Association["Book" -> 10, "Theorem" -> 104], 
       Association["Book" -> 10, "Theorem" -> 105], 
       Association["Book" -> 10, "Theorem" -> 106], 
       Association["Book" -> 10, "Theorem" -> 107], 
       Association["Book" -> 10, "Theorem" -> 108], 
       Association["Book" -> 10, "Theorem" -> 109], 
       Association["Book" -> 10, "Theorem" -> 110], 
       Association["Book" -> 10, "Theorem" -> 111], 
       Association["Book" -> 10, "Theorem" -> 112], 
       Association["Book" -> 10, "Theorem" -> 113], 
       Association["Book" -> 10, "Theorem" -> 114], 
       Association["Book" -> 10, "Theorem" -> 115], 
       Association["Book" -> 11, "Theorem" -> 1], 
       Association["Book" -> 11, "Theorem" -> 2], 
       Association["Book" -> 11, "Theorem" -> 3], 
       Association["Book" -> 11, "Theorem" -> 4], 
       Association["Book" -> 11, "Theorem" -> 5], 
       Association["Book" -> 11, "Theorem" -> 6], 
       Association["Book" -> 11, "Theorem" -> 7], 
       Association["Book" -> 11, "Theorem" -> 8], 
       Association["Book" -> 11, "Theorem" -> 9], 
       Association["Book" -> 11, "Theorem" -> 10], 
       Association["Book" -> 11, "Theorem" -> 11], 
       Association["Book" -> 11, "Theorem" -> 12], 
       Association["Book" -> 11, "Theorem" -> 13], 
       Association["Book" -> 11, "Theorem" -> 14], 
       Association["Book" -> 11, "Theorem" -> 15], 
       Association["Book" -> 11, "Theorem" -> 16], 
       Association["Book" -> 11, "Theorem" -> 17], 
       Association["Book" -> 11, "Theorem" -> 18], 
       Association["Book" -> 11, "Theorem" -> 19], 
       Association["Book" -> 11, "Theorem" -> 20], 
       Association["Book" -> 11, "Theorem" -> 21], 
       Association["Book" -> 11, "Theorem" -> 22], 
       Association["Book" -> 11, "Theorem" -> 23], 
       Association["Book" -> 11, "Theorem" -> 24], 
       Association["Book" -> 11, "Theorem" -> 25], 
       Association["Book" -> 11, "Theorem" -> 26], 
       Association["Book" -> 11, "Theorem" -> 27], 
       Association["Book" -> 11, "Theorem" -> 28], 
       Association["Book" -> 11, "Theorem" -> 29], 
       Association["Book" -> 11, "Theorem" -> 30], 
       Association["Book" -> 11, "Theorem" -> 31], 
       Association["Book" -> 11, "Theorem" -> 32], 
       Association["Book" -> 11, "Theorem" -> 33], 
       Association["Book" -> 11, "Theorem" -> 34], 
       Association["Book" -> 11, "Theorem" -> 35], 
       Association["Book" -> 11, "Theorem" -> 36], 
       Association["Book" -> 11, "Theorem" -> 37], 
       Association["Book" -> 11, "Theorem" -> 38], 
       Association["Book" -> 11, "Theorem" -> 39], 
       Association["Book" -> 12, "Theorem" -> 1], 
       Association["Book" -> 12, "Theorem" -> 2], 
       Association["Book" -> 12, "Theorem" -> 3], 
       Association["Book" -> 12, "Theorem" -> 4], 
       Association["Book" -> 12, "Theorem" -> 5], 
       Association["Book" -> 12, "Theorem" -> 6], 
       Association["Book" -> 12, "Theorem" -> 7], 
       Association["Book" -> 12, "Theorem" -> 8], 
       Association["Book" -> 12, "Theorem" -> 9], 
       Association["Book" -> 12, "Theorem" -> 10], 
       Association["Book" -> 12, "Theorem" -> 11], 
       Association["Book" -> 12, "Theorem" -> 12], 
       Association["Book" -> 12, "Theorem" -> 13], 
       Association["Book" -> 12, "Theorem" -> 14], 
       Association["Book" -> 12, "Theorem" -> 15], 
       Association["Book" -> 12, "Theorem" -> 16], 
       Association["Book" -> 12, "Theorem" -> 17], 
       Association["Book" -> 12, "Theorem" -> 18], 
       Association["Book" -> 13, "Theorem" -> 1], 
       Association["Book" -> 13, "Theorem" -> 2], 
       Association["Book" -> 13, "Theorem" -> 3], 
       Association["Book" -> 13, "Theorem" -> 4], 
       Association["Book" -> 13, "Theorem" -> 5], 
       Association["Book" -> 13, "Theorem" -> 6], 
       Association["Book" -> 13, "Theorem" -> 7], 
       Association["Book" -> 13, "Theorem" -> 8], 
       Association["Book" -> 13, "Theorem" -> 9], 
       Association["Book" -> 13, "Theorem" -> 10], 
       Association["Book" -> 13, "Theorem" -> 11], 
       Association["Book" -> 13, "Theorem" -> 12], 
       Association["Book" -> 13, "Theorem" -> 13], 
       Association["Book" -> 13, "Theorem" -> 14], 
       Association["Book" -> 13, "Theorem" -> 15], 
       Association["Book" -> 13, "Theorem" -> 16], 
       Association["Book" -> 13, "Theorem" -> 17], 
       Association["Book" -> 13, "Theorem" -> 18]}, {CompressedData["
1:eJxd23mclnW5x/Hn1qRBTFCswIXFCZyNAYbNAYEBRJukBUR2CNkGNIbN1GHf
g5BFQEBWQWCAQAkI0iwUshQXUkRAzym1ji2nzik9J03T4jr3e17niT94fe77
d32v73X9rt/9PPPMQtMRE/pUXpTJZGrlZDLBJPP/vBg/c/7fJe4vEQ/WwgQ/
i6HPocuxlmO99vl/l57/V4e+Dp86NHVo6qh32fl/n8McrI0Rv1z8cjmXW6+r
Tl1r9fRZj089sXr0V4hfwf8KsSutXynvSnlXyqtPW996/az12O9V5hD8PEbu
F87/+yJehLXwKoz5NBBvIN5AvIH8hvbfUB8NxRrqt6H9NNRXQ75X87na2tXW
r3F/jfxrzPUa+de6vtb6depfZ+06eddlxS/G8G/Ev5G1RtYb22dj6435NJbf
OEsXc23iuom5N6Frqo+m1pryaWoOTfXVlP5619eL5+ojV5+58nOz4pH3JfFm
zqGZvGbOqZn5NnMezeQ0pwt+Hq/CBnjD+X95dHnW8u0nn0++PvLNpYC+gG8B
3wL5BbSF8gutF9pXIb8i+UX2WkRXRNdCnRZ0Ley3BV0L2hb0xfTFahSLF9MU
q9tSfy3FW4q3tL9W4q3EW8ltJd5andZ0reW25l8iXiJeIrdEvA3fNvLaWG8r
L3gFNsF8bIVtMPLamU8782nHv71+2/Nt79zbm197vu15tZfbnm8wno8O8juo
E/wCNsc8LMQibIvtMXxvzKTvSzfKD+ZgPkZ+qXql6pWKlzrvUnMolVPKPxiv
k4767sino7od1etIG6yLkd+JrhNdJ3U76esm9zep29l9Z/dd7KuL9S7yuphv
lyxdHYyvMV3pg8XYDkNfJl4mXiZeJt5NvJv1bta720d38e766c6nO313+h72
38M+esjvIT9YgEVYinUw9nMzn2ADbI45mI8FWISlWAdr/OJ57JlJXx89+fTU
d095Pc3klkz6tfEW67eY9a3Wb7V+q1l9me+X+QY7YCnGWZTTldtfMJ6fr2TS
9+ngtVgHQ3NbJn2fu836bfJuE++VxVj7aib9+vM1/Hom/XoVbIJNMV4P3xAP
NsIm2BRrdFGnt3301kdv632s97G/Plnr0dPt6txuva/7vu7vyOLtGDPoZ+79
zLMfXT/77a9ef7r+fPvrv79z6S9nAF3warwWY74D+Q2074HqDaQZJH+Q/EHy
B9ENlj/Y2pBM+pwO4T+Ubqi1YeLDrH0zkz4PwzPp58PhZjhc7E5zvlOdO53X
nfoNXoZxNiOsj+Axkj6Yi9HHKOc5Sn+j5IyWP9r6aDlj9DFGH2PoxsitMJ8K
+6uw/wp7HStvrPhYMxubFQ/tOHXG0Y8z/3H2MU7dcc4nmzX54XUX/V3O8i7r
d/MLlmJXLMd4zr4lHizDchyEoRtvjuPFx+tnvLrj6cfLqcykz+cE/U0wjwny
JuhzYib9vDSRbiLdRHUm0k/kP8m+JjnnYD0M3WRznWyuk81xsrlNsT7F+hR1
pojfI36P9Xv4fptvMB+LMOL3ZtLn815zui+TPhf3WQ/2xLE4HisxerzffoIj
cCSOxvswZlhlDlXOsUr9Kv1X6a/K/Kr4VfGYap5T+Uw1l6n6mCp/mn1Msz7d
uQUbYAHWwXIcgSMx9jEjk76mZtj/DP3MsK+ZmfTzyiyc7XqO67k086zPp1tg
faHr74h9x/0iusV033W/hGaJtSX0D9A+wGcpj6U0S8WW8Vumn+V0y+mWi62w
vkLuCusPqv+g+g+q96A+VoqvFF8pvlJ8Fe0qM1qtzmr9rVZvtZyH9PSQnIf4
rZG3Rt9r9LhGfG0mfV0HW2EbXIRRb10m/TwfbI2LcD4uxMh5OJN+HgrmYx28
DBfhfFyI4bE+k74vB5thEd6AS3EVzsfI35BJ33+CBVgb6+IiXIiRu1HeRnkb
5W2k30i/kX5TJn3dbNLvJvmb5G+y703yN8nfJH8z3Wb3W5zHFnPbYj+PuH/E
HB6x30fEt8rbSrdVfKv4NvFt4tvEt4k/mknfJ4MVGD1tz6Tfn2yXt90+tsvf
bj/BOPcd9DvodtDtoNtBt1O9nfrayX8n/U6e1eLV/KrFq2l2mfcuc9xFF1yK
Mdfd1ndb381nt352m9VuPe7ht0decDEuxVW4Fnfjeoxn5Hvy92ZxFS7ErbgN
d2H47TPPfeazj88+PvvU3yf/sUz6untMn8HluArXYfT2eCb9/jXYARfhElyK
K3AtPorR73797Ze/3/72q/X9TPr9WLAdRuyA9WA93IXfw8exRh+5B+Ud5HeQ
/qB6B+UdlHcok34fdci5B7djaH6QSb9uBh/C3Rivg8PO4bD5BgswzvlIJv18
GhyJ8b75w0z6c4snXD/puoY/wqcy6ffxP3b9Ezzq+mn3T9M84/6ZrPuIHaM/
Jvc43XG6n9I+65yetfYzmp+7fk78OfHnxZ63dkL8hHmecN4nsuKhfYHvC3xe
sOcX+b1o7SV5L2fSn4OeFD/J6yTdSTknaX/h+hV81dqr1k6Z/2uZ9HPBaX6n
+Z3md5rmdfozrs/q46y8s/RnneE5fZ8TP8f3HN052jfUf9Pam9b+zbz/HX8p
9kuxX4r9yln9iv+v+L+l/lvm/ZZZvmUGb9G+bf1t62/r622aGr7jnN5R5x39
vqPfX+vj1+r+Wuw31n/D9zc8/8P1u+Lv8n1X/+/Sv0v/W/3+Vj81/J16v7PP
37v/vfs/uP+D+/9U7480f9TLn9z/ifZP1v+L5r+t/dkc/sz3L+7/knX/PIbm
PfH3xN+zz/fs7339vC/vffH3zeH9LN1b+B7GXP7H/f9a+6u6fxX7wP0HevqA
9kO+H4p/yL+GfxP/m7y/Za0HP7Kfj+R/pN5Hzuxj8Y/FP9bnx+J/18ff3X/i
+hN5n6j7Cd0ndJ/SfUr3Kd2ndJ/S/cP6P6z/w3r8sun/fv+WpP0GI35RkvoG
Y+0i8YvEL05Sj4vFgx+4j5l9Jklfp5ck6fUldMET1l/AFzHeV2rR16KtJa+W
vGC833w2Sd+LcpL0Z67BLvgSnsRf4CmM86qtfm31L03S5/JS65dar5Okmjrq
X+b6c/q4PEnfB+sm6XW9LMbaFeJXuq6PV+Hn6b8g54vYwHVDe7/aOV2D1ybp
167gcYz+r6MPXovPWj+BL+CLGHNvpM/G2CRJr5sm6fWFvD5JPycF4+tabpJ+
nQuuwFVYE4+ve19K0utmPJon6WfA4O/xQ6yJh/6G8//yMPcCNheL+nny8sSD
X8KomU+Xr7/gO3i9eOQVuC5M0p8vBCuwEpfhKpyPezFqFiV+b4XFSfrzlGAO
dsWoVyynWB8t9RJsgcUY8VZJ+nktuBajbmvrra23tl7ivsR9G/fB7bgXa+IF
GDlt6duKtxVvq6e2WbrIaUffjr6dWHvn0F48WI154q2wBMOvQ5K+zjvQdVC/
g/l0sPcOWfqY041J+vk8uA0fxWq8gS4PSzD6LZVfKr9UfnAnVuMN9HlYguHT
0fMULMMK/AivoKuPK6znJv/KeO478evEpxN9J5pO9J3ob9JXsBBLsC12xMjp
TN+ZvjN9Z/rO9J3pu+ini7l0MZfgAVyPmy9gS/kl2BbDtyvfrvbZlV9X/XWV
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
YLC2lw==
       "], Null}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
7irh818vdpXJkuevhmQI5RM+D1gXsU+SCn+2HxSredDdcCeC/YeC7riYeuPn
PJRV2R+QJ3rC3/o6qLKGh0vFdO7CNxQELrQorHrFw7fvPgr3yikY3uJeMPcN
D8EnouLjrlMQvd7XX+4dD17uFR+fk3kurbXKXdVM+K/XuWkX8Rv2qVLvfrfx
8Prwr4e3k2mgSz3MvFLBg570yXvro2mY1XLozeoqHmZ0VgmfC6ahd8V62TMv
eMgO+3x0+zYaDi7dWutDPv/3Xd2AXkcaJn2P17yv5+Ftzl91VTKP5da/hZre
8uCtdJ42TeYRo7rgit97HvImh2nXyTzEIl3nn2ri4WdwBGubBtGTiRUfLv7i
oaqiQ7iHzIPTWSi/6g8Pkqt23l5M5nFM4m1fzAgPBU+eWUYRvGT3/Li+bpQH
rRjP8nuvKRg7srnrBqkXSVKd+kspuNTQ5ZRI6on3zkz2NQqCc97SxEk9qdFq
vfs8BSbiU3tEyHlHFEoXen2n4YZv284sCh+FrmDofqRhlVe3+ZQcH801x/+L
eEbDAl3ZqjriF97tDLALukODeYBmtIY4H3l37WaopdOgve5oUacwH/clhO4G
nKQhQkLBVJfg68q5vPUn9tHAbLiR9WOS7JP/Cf+9bjTkP8pxmD/Bw8gXavUa
Uyq2ur2JPdjDg0+WYbkanQr3oNcRy7t5aDQdMKqWIXjb5rP7XBcPZi1JD3zJ
PKxbMp57kdrz55iw4icKMvNvZt7v+t/fX7/Of0L4onXO8Ksz5P0K0s6OZ4so
4F2brukn53tef3H8eAbxmxf/vazu5cG2+uTa0h4a7l+Zq7vcgI/L2/8du/2G
htMX5sxiG/IRfjjKMLKUhhYl8A8S/NlGbWg2uUKDcnLkWidj4j9TyugtZ2nY
43vW4CqpP1r6XgsPI/vf+iJqP6mXvWFr6XvT4PjKfV81ef/9M4tVhtfQ4PTF
zfcMOX+jVG1APZcK2aOxWR80+JDqyI94QCF+Y/dhBx3i50Z2OPLeTVIwbxH7
cbcqH5IVYk/0eylI/lYAfWU+WsR6Yl69pSDsnWrAb8KH766+THxK8HBQg2cM
4vdENJUfaBRQ4Nu+8iFFmg/9bcnp7cS/SrY4HtsuxsdunyBHvZUqaO9OUf5+
hQ+hE3bMFmMVVMxK29F7iY/ty374HFZVgcjQf2PHif9fWVrmMndcGd18/+aG
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
CNbXtDxJB7ZmYs66WBL+DzpNXv0=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.018045677730634358`], 
         ArrowBox[{1, 2}, 0.08044205571367379], 
         ArrowBox[{1, 3}, 0.08044205571367379], 
         ArrowBox[{1, 4}, 0.08044205571367379], 
         ArrowBox[{5, 1}, 0.08044205571367379], 
         ArrowBox[{5, 2}, 0.08044205571367379], 
         ArrowBox[{5, 3}, 0.08044205571367379], 
         ArrowBox[{5, 4}, 0.08044205571367379], 
         ArrowBox[{5, 6}, 0.08044205571367379], 
         ArrowBox[{5, 7}, 0.08044205571367379], 
         ArrowBox[{8, 2}, 0.08044205571367379], 
         ArrowBox[{8, 4}, 0.08044205571367379], 
         ArrowBox[{8, 5}, 0.08044205571367379], 
         ArrowBox[{9, 10}, 0.08044205571367379], 
         ArrowBox[{11, 3}, 0.08044205571367379], 
         ArrowBox[{11, 6}, 0.08044205571367379], 
         ArrowBox[{11, 7}, 0.08044205571367379], 
         ArrowBox[{11, 8}, 0.08044205571367379], 
         ArrowBox[{11, 9}, 0.08044205571367379], 
         ArrowBox[{12, 3}, 0.08044205571367379], 
         ArrowBox[{12, 8}, 0.08044205571367379], 
         ArrowBox[{12, 9}, 0.08044205571367379], 
         ArrowBox[{12, 13}, 0.08044205571367379], 
         ArrowBox[{14, 3}, 0.08044205571367379], 
         ArrowBox[{14, 11}, 0.08044205571367379], 
         ArrowBox[{14, 13}, 0.08044205571367379], 
         ArrowBox[{15, 10}, 0.08044205571367379], 
         ArrowBox[{15, 14}, 0.08044205571367379], 
         ArrowBox[{16, 1}, 0.08044205571367379], 
         ArrowBox[{16, 3}, 0.08044205571367379], 
         ArrowBox[{16, 8}, 0.08044205571367379], 
         ArrowBox[{16, 15}, 0.08044205571367379], 
         ArrowBox[{17, 1}, 0.08044205571367379], 
         ArrowBox[{17, 9}, 0.08044205571367379], 
         ArrowBox[{17, 16}, 0.08044205571367379], 
         ArrowBox[{18, 1}, 0.08044205571367379], 
         ArrowBox[{18, 3}, 0.08044205571367379], 
         ArrowBox[{18, 8}, 0.08044205571367379], 
         ArrowBox[{18, 15}, 0.08044205571367379], 
         ArrowBox[{19, 3}, 0.08044205571367379], 
         ArrowBox[{19, 4}, 0.08044205571367379], 
         ArrowBox[{19, 15}, 0.08044205571367379], 
         ArrowBox[{19, 17}, 0.08044205571367379], 
         ArrowBox[{20, 2}, 0.08044205571367379], 
         ArrowBox[{20, 18}, 0.08044205571367379], 
         ArrowBox[{20, 21}, 0.08044205571367379], 
         ArrowBox[{22, 2}, 0.08044205571367379], 
         ArrowBox[{22, 6}, 0.08044205571367379], 
         ArrowBox[{22, 7}, 0.08044205571367379], 
         ArrowBox[{22, 20}, 0.08044205571367379], 
         ArrowBox[{22, 23}, 0.08044205571367379], 
         ArrowBox[{24, 2}, 0.08044205571367379], 
         ArrowBox[{24, 6}, 0.08044205571367379], 
         ArrowBox[{24, 20}, 0.08044205571367379], 
         ArrowBox[{24, 23}, 0.08044205571367379], 
         ArrowBox[{25, 3}, 0.08044205571367379], 
         ArrowBox[{25, 7}, 0.08044205571367379], 
         ArrowBox[{25, 8}, 0.08044205571367379], 
         ArrowBox[{25, 9}, 0.08044205571367379], 
         ArrowBox[{25, 13}, 0.08044205571367379], 
         ArrowBox[{25, 17}, 0.08044205571367379], 
         ArrowBox[{25, 24}, 0.08044205571367379], 
         ArrowBox[{26, 7}, 0.08044205571367379], 
         ArrowBox[{26, 20}, 0.08044205571367379], 
         ArrowBox[{26, 25}, 0.08044205571367379], 
         ArrowBox[{27, 3}, 0.08044205571367379], 
         ArrowBox[{27, 8}, 0.08044205571367379], 
         ArrowBox[{27, 11}, 0.08044205571367379], 
         ArrowBox[{27, 25}, 0.08044205571367379], 
         ArrowBox[{28, 11}, 0.08044205571367379], 
         ArrowBox[{28, 27}, 0.08044205571367379], 
         ArrowBox[{29, 3}, 0.08044205571367379], 
         ArrowBox[{29, 7}, 0.08044205571367379], 
         ArrowBox[{29, 8}, 0.08044205571367379], 
         ArrowBox[{29, 11}, 0.08044205571367379], 
         ArrowBox[{29, 13}, 0.08044205571367379], 
         ArrowBox[{29, 28}, 0.08044205571367379], 
         ArrowBox[{30, 7}, 0.08044205571367379], 
         ArrowBox[{30, 25}, 0.08044205571367379], 
         ArrowBox[{30, 29}, 0.08044205571367379], 
         ArrowBox[{31, 2}, 0.08044205571367379], 
         ArrowBox[{31, 3}, 0.08044205571367379], 
         ArrowBox[{31, 4}, 0.08044205571367379], 
         ArrowBox[{31, 7}, 0.08044205571367379], 
         ArrowBox[{31, 8}, 0.08044205571367379], 
         ArrowBox[{31, 29}, 0.08044205571367379], 
         ArrowBox[{32, 3}, 0.08044205571367379], 
         ArrowBox[{32, 15}, 0.08044205571367379], 
         ArrowBox[{32, 31}, 0.08044205571367379], 
         ArrowBox[{33, 3}, 0.08044205571367379], 
         ArrowBox[{33, 8}, 0.08044205571367379], 
         ArrowBox[{33, 9}, 0.08044205571367379], 
         ArrowBox[{33, 11}, 0.08044205571367379], 
         ArrowBox[{33, 28}, 0.08044205571367379], 
         ArrowBox[{33, 32}, 0.08044205571367379], 
         ArrowBox[{34, 9}, 0.08044205571367379], 
         ArrowBox[{34, 33}, 0.08044205571367379], 
         ArrowBox[{35, 2}, 0.08044205571367379], 
         ArrowBox[{35, 3}, 0.08044205571367379], 
         ArrowBox[{35, 8}, 0.08044205571367379], 
         ArrowBox[{35, 9}, 0.08044205571367379], 
         ArrowBox[{35, 25}, 0.08044205571367379], 
         ArrowBox[{36, 25}, 0.08044205571367379], 
         ArrowBox[{37, 2}, 0.08044205571367379], 
         ArrowBox[{37, 6}, 0.08044205571367379], 
         ArrowBox[{37, 20}, 0.08044205571367379], 
         ArrowBox[{37, 23}, 0.08044205571367379], 
         ArrowBox[{37, 24}, 0.08044205571367379], 
         ArrowBox[{37, 36}, 0.08044205571367379], 
         ArrowBox[{38, 2}, 0.08044205571367379], 
         ArrowBox[{38, 20}, 0.08044205571367379], 
         ArrowBox[{38, 21}, 0.08044205571367379], 
         ArrowBox[{38, 24}, 0.08044205571367379], 
         ArrowBox[{38, 39}, 0.08044205571367379], 
         ArrowBox[{40, 2}, 0.08044205571367379], 
         ArrowBox[{40, 38}, 0.08044205571367379], 
         ArrowBox[{41, 3}, 0.08044205571367379], 
         ArrowBox[{41, 7}, 0.08044205571367379], 
         ArrowBox[{41, 32}, 0.08044205571367379], 
         ArrowBox[{41, 36}, 0.08044205571367379], 
         ArrowBox[{42, 2}, 0.08044205571367379], 
         ArrowBox[{42, 20}, 0.08044205571367379], 
         ArrowBox[{42, 21}, 0.08044205571367379], 
         ArrowBox[{42, 38}, 0.08044205571367379], 
         ArrowBox[{42, 41}, 0.08044205571367379], 
         ArrowBox[{43, 3}, 0.08044205571367379], 
         ArrowBox[{43, 9}, 0.08044205571367379], 
         ArrowBox[{43, 36}, 0.08044205571367379], 
         ArrowBox[{43, 38}, 0.08044205571367379], 
         ArrowBox[{44, 9}, 0.08044205571367379], 
         ArrowBox[{44, 21}, 0.08044205571367379], 
         ArrowBox[{44, 35}, 0.08044205571367379], 
         ArrowBox[{44, 38}, 0.08044205571367379], 
         ArrowBox[{45, 2}, 0.08044205571367379], 
         ArrowBox[{45, 6}, 0.08044205571367379], 
         ArrowBox[{45, 9}, 0.08044205571367379], 
         ArrowBox[{45, 21}, 0.08044205571367379], 
         ArrowBox[{45, 38}, 0.08044205571367379], 
         ArrowBox[{45, 44}, 0.08044205571367379], 
         ArrowBox[{46, 2}, 0.08044205571367379], 
         ArrowBox[{46, 3}, 0.08044205571367379], 
         ArrowBox[{46, 43}, 0.08044205571367379], 
         ArrowBox[{46, 44}, 0.08044205571367379], 
         ArrowBox[{46, 45}, 0.08044205571367379], 
         ArrowBox[{47, 7}, 0.08044205571367379], 
         ArrowBox[{47, 41}, 0.08044205571367379], 
         ArrowBox[{47, 44}, 0.08044205571367379], 
         ArrowBox[{47, 45}, 0.08044205571367379], 
         ArrowBox[{48, 7}, 0.08044205571367379], 
         ArrowBox[{48, 41}, 0.08044205571367379], 
         ArrowBox[{48, 44}, 0.08044205571367379], 
         ArrowBox[{48, 46}, 0.08044205571367379], 
         ArrowBox[{49, 2}, 0.08044205571367379], 
         ArrowBox[{49, 3}, 0.08044205571367379], 
         ArrowBox[{49, 41}, 0.08044205571367379], 
         ArrowBox[{49, 47}, 0.08044205571367379], 
         ArrowBox[{50, 2}, 0.08044205571367379], 
         ArrowBox[{50, 3}, 0.08044205571367379], 
         ArrowBox[{50, 41}, 0.08044205571367379], 
         ArrowBox[{50, 48}, 0.08044205571367379], 
         ArrowBox[{51, 3}, 0.08044205571367379], 
         ArrowBox[{51, 44}, 0.08044205571367379], 
         ArrowBox[{51, 47}, 0.08044205571367379], 
         ArrowBox[{52, 2}, 0.08044205571367379], 
         ArrowBox[{52, 3}, 0.08044205571367379], 
         ArrowBox[{52, 17}, 0.08044205571367379], 
         ArrowBox[{52, 32}, 0.08044205571367379], 
         ArrowBox[{52, 41}, 0.08044205571367379], 
         ArrowBox[{52, 48}, 0.08044205571367379], 
         ArrowBox[{52, 51}, 0.08044205571367379], 
         ArrowBox[{53, 6}, 0.08044205571367379], 
         ArrowBox[{53, 21}, 0.08044205571367379], 
         ArrowBox[{53, 44}, 0.08044205571367379], 
         ArrowBox[{54, 2}, 0.08044205571367379], 
         ArrowBox[{54, 3}, 0.08044205571367379], 
         ArrowBox[{54, 7}, 0.08044205571367379], 
         ArrowBox[{54, 24}, 0.08044205571367379], 
         ArrowBox[{54, 38}, 0.08044205571367379], 
         ArrowBox[{54, 39}, 0.08044205571367379], 
         ArrowBox[{54, 41}, 0.08044205571367379], 
         ArrowBox[{54, 52}, 0.08044205571367379], 
         ArrowBox[{54, 53}, 0.08044205571367379], 
         ArrowBox[{55, 2}, 0.08044205571367379], 
         ArrowBox[{55, 3}, 0.08044205571367379], 
         ArrowBox[{55, 21}, 0.08044205571367379], 
         ArrowBox[{55, 22}, 0.08044205571367379], 
         ArrowBox[{55, 38}, 0.08044205571367379], 
         ArrowBox[{55, 40}, 0.08044205571367379], 
         ArrowBox[{55, 43}, 0.08044205571367379], 
         ArrowBox[{55, 44}, 0.08044205571367379], 
         ArrowBox[{55, 52}, 0.08044205571367379], 
         ArrowBox[{55, 54}, 0.08044205571367379], 
         ArrowBox[{56, 8}, 0.08044205571367379], 
         ArrowBox[{56, 18}, 0.08044205571367379], 
         ArrowBox[{56, 38}, 0.08044205571367379], 
         ArrowBox[{56, 41}, 0.08044205571367379], 
         ArrowBox[{56, 44}, 0.08044205571367379], 
         ArrowBox[{57, 3}, 0.08044205571367379], 
         ArrowBox[{57, 9}, 0.08044205571367379], 
         ArrowBox[{57, 21}, 0.08044205571367379], 
         ArrowBox[{57, 22}, 0.08044205571367379], 
         ArrowBox[{57, 23}, 0.08044205571367379], 
         ArrowBox[{57, 41}, 0.08044205571367379], 
         ArrowBox[{57, 51}, 0.08044205571367379], 
         ArrowBox[{57, 56}, 0.08044205571367379], 
         ArrowBox[{58, 2}, 0.08044205571367379], 
         ArrowBox[{58, 3}, 0.08044205571367379], 
         ArrowBox[{58, 8}, 0.08044205571367379], 
         ArrowBox[{58, 15}, 0.08044205571367379], 
         ArrowBox[{58, 18}, 0.08044205571367379], 
         ArrowBox[{58, 21}, 0.08044205571367379], 
         ArrowBox[{58, 57}, 0.08044205571367379], 
         ArrowBox[{59, 8}, 0.08044205571367379], 
         ArrowBox[{59, 18}, 0.08044205571367379], 
         ArrowBox[{59, 41}, 0.08044205571367379], 
         ArrowBox[{59, 44}, 0.08044205571367379], 
         ArrowBox[{60, 41}, 0.08044205571367379], 
         ArrowBox[{60, 56}, 0.08044205571367379], 
         ArrowBox[{61, 41}, 0.08044205571367379], 
         ArrowBox[{61, 56}, 0.08044205571367379], 
         ArrowBox[{62, 11}, 0.08044205571367379], 
         ArrowBox[{62, 12}, 0.08044205571367379], 
         ArrowBox[{62, 38}, 0.08044205571367379], 
         ArrowBox[{62, 41}, 0.08044205571367379], 
         ArrowBox[{62, 44}, 0.08044205571367379], 
         ArrowBox[{62, 53}, 0.08044205571367379], 
         ArrowBox[{62, 56}, 0.08044205571367379], 
         ArrowBox[{63, 41}, 0.08044205571367379], 
         ArrowBox[{63, 46}, 0.08044205571367379], 
         ArrowBox[{63, 53}, 0.08044205571367379], 
         ArrowBox[{63, 56}, 0.08044205571367379], 
         ArrowBox[{64, 41}, 0.08044205571367379], 
         ArrowBox[{64, 46}, 0.08044205571367379], 
         ArrowBox[{64, 53}, 0.08044205571367379], 
         ArrowBox[{64, 56}, 0.08044205571367379], 
         ArrowBox[{65, 41}, 0.08044205571367379], 
         ArrowBox[{65, 53}, 0.08044205571367379], 
         ArrowBox[{65, 56}, 0.08044205571367379], 
         ArrowBox[{66, 8}, 0.08044205571367379], 
         ArrowBox[{66, 41}, 0.08044205571367379], 
         ArrowBox[{66, 44}, 0.08044205571367379], 
         ArrowBox[{66, 46}, 0.08044205571367379], 
         ArrowBox[{66, 53}, 0.08044205571367379], 
         ArrowBox[{66, 56}, 0.08044205571367379], 
         ArrowBox[{67, 8}, 0.08044205571367379], 
         ArrowBox[{67, 11}, 0.08044205571367379], 
         ArrowBox[{67, 12}, 0.08044205571367379], 
         ArrowBox[{67, 18}, 0.08044205571367379], 
         ArrowBox[{67, 38}, 0.08044205571367379], 
         ArrowBox[{67, 41}, 0.08044205571367379], 
         ArrowBox[{67, 42}, 0.08044205571367379], 
         ArrowBox[{67, 44}, 0.08044205571367379], 
         ArrowBox[{67, 57}, 0.08044205571367379], 
         ArrowBox[{68, 8}, 0.08044205571367379], 
         ArrowBox[{68, 11}, 0.08044205571367379], 
         ArrowBox[{68, 12}, 0.08044205571367379], 
         ArrowBox[{68, 18}, 0.08044205571367379], 
         ArrowBox[{68, 24}, 0.08044205571367379], 
         ArrowBox[{68, 38}, 0.08044205571367379], 
         ArrowBox[{68, 39}, 0.08044205571367379], 
         ArrowBox[{68, 41}, 0.08044205571367379], 
         ArrowBox[{68, 42}, 0.08044205571367379], 
         ArrowBox[{68, 44}, 0.08044205571367379], 
         ArrowBox[{68, 57}, 0.08044205571367379], 
         ArrowBox[{69, 8}, 0.08044205571367379], 
         ArrowBox[{69, 17}, 0.08044205571367379], 
         ArrowBox[{69, 56}, 0.08044205571367379], 
         ArrowBox[{69, 57}, 0.08044205571367379], 
         ArrowBox[{69, 64}, 0.08044205571367379], 
         ArrowBox[{70, 19}, 0.08044205571367379], 
         ArrowBox[{70, 57}, 0.08044205571367379], 
         ArrowBox[{70, 62}, 0.08044205571367379], 
         ArrowBox[{71, 19}, 0.08044205571367379], 
         ArrowBox[{71, 57}, 0.08044205571367379], 
         ArrowBox[{71, 65}, 0.08044205571367379], 
         ArrowBox[{72, 8}, 0.08044205571367379], 
         ArrowBox[{72, 17}, 0.08044205571367379], 
         ArrowBox[{72, 55}, 0.08044205571367379], 
         ArrowBox[{72, 57}, 0.08044205571367379], 
         ArrowBox[{72, 63}, 0.08044205571367379], 
         ArrowBox[{73, 15}, 0.08044205571367379], 
         ArrowBox[{73, 17}, 0.08044205571367379], 
         ArrowBox[{73, 18}, 0.08044205571367379], 
         ArrowBox[{74, 11}, 0.08044205571367379], 
         ArrowBox[{74, 25}, 0.08044205571367379], 
         ArrowBox[{74, 28}, 0.08044205571367379], 
         ArrowBox[{74, 73}, 0.08044205571367379], 
         ArrowBox[{75, 11}, 0.08044205571367379], 
         ArrowBox[{75, 15}, 0.08044205571367379], 
         ArrowBox[{75, 35}, 0.08044205571367379], 
         ArrowBox[{75, 73}, 0.08044205571367379], 
         ArrowBox[{76, 73}, 0.08044205571367379], 
         ArrowBox[{76, 75}, 0.08044205571367379], 
         ArrowBox[{77, 4}, 0.08044205571367379], 
         ArrowBox[{78, 4}, 0.08044205571367379], 
         ArrowBox[{79, 9}, 0.08044205571367379], 
         ArrowBox[{79, 29}, 0.08044205571367379], 
         ArrowBox[{79, 32}, 0.08044205571367379], 
         ArrowBox[{79, 33}, 0.08044205571367379], 
         ArrowBox[{80, 9}, 0.08044205571367379], 
         ArrowBox[{80, 29}, 0.08044205571367379], 
         ArrowBox[{80, 30}, 0.08044205571367379], 
         ArrowBox[{80, 32}, 0.08044205571367379], 
         ArrowBox[{80, 33}, 0.08044205571367379], 
         ArrowBox[{80, 73}, 0.08044205571367379], 
         ArrowBox[{81, 15}, 0.08044205571367379], 
         ArrowBox[{81, 17}, 0.08044205571367379], 
         ArrowBox[{81, 73}, 0.08044205571367379], 
         ArrowBox[{82, 17}, 0.08044205571367379], 
         ArrowBox[{82, 18}, 0.08044205571367379], 
         ArrowBox[{82, 73}, 0.08044205571367379], 
         ArrowBox[{82, 77}, 0.08044205571367379], 
         ArrowBox[{83, 29}, 0.08044205571367379], 
         ArrowBox[{83, 73}, 0.08044205571367379], 
         ArrowBox[{84, 29}, 0.08044205571367379], 
         ArrowBox[{84, 73}, 0.08044205571367379], 
         ArrowBox[{85, 73}, 0.08044205571367379], 
         ArrowBox[{85, 74}, 0.08044205571367379], 
         ArrowBox[{85, 83}, 0.08044205571367379], 
         ArrowBox[{86, 19}, 0.08044205571367379], 
         ArrowBox[{86, 57}, 0.08044205571367379], 
         ArrowBox[{86, 73}, 0.08044205571367379], 
         ArrowBox[{86, 75}, 0.08044205571367379], 
         ArrowBox[{87, 8}, 0.08044205571367379], 
         ArrowBox[{87, 18}, 0.08044205571367379], 
         ArrowBox[{87, 19}, 0.08044205571367379], 
         ArrowBox[{87, 29}, 0.08044205571367379], 
         ArrowBox[{87, 33}, 0.08044205571367379], 
         ArrowBox[{87, 86}, 0.08044205571367379], 
         ArrowBox[{88, 11}, 0.08044205571367379], 
         ArrowBox[{88, 19}, 0.08044205571367379], 
         ArrowBox[{88, 26}, 0.08044205571367379], 
         ArrowBox[{88, 28}, 0.08044205571367379], 
         ArrowBox[{89, 9}, 0.08044205571367379], 
         ArrowBox[{89, 18}, 0.08044205571367379], 
         ArrowBox[{89, 73}, 0.08044205571367379], 
         ArrowBox[{89, 88}, 0.08044205571367379], 
         ArrowBox[{90, 19}, 0.08044205571367379], 
         ArrowBox[{90, 26}, 0.08044205571367379], 
         ArrowBox[{90, 28}, 0.08044205571367379], 
         ArrowBox[{90, 73}, 0.08044205571367379], 
         ArrowBox[{91, 18}, 0.08044205571367379], 
         ArrowBox[{91, 90}, 0.08044205571367379], 
         ArrowBox[{92, 11}, 0.08044205571367379], 
         ArrowBox[{92, 42}, 0.08044205571367379], 
         ArrowBox[{93, 73}, 0.08044205571367379], 
         ArrowBox[{93, 92}, 0.08044205571367379], 
         ArrowBox[{94, 42}, 0.08044205571367379], 
         ArrowBox[{94, 93}, 0.08044205571367379], 
         ArrowBox[{95, 25}, 0.08044205571367379], 
         ArrowBox[{96, 10}, 0.08044205571367379], 
         ArrowBox[{96, 82}, 0.08044205571367379], 
         ArrowBox[{96, 95}, 0.08044205571367379], 
         ArrowBox[{97, 9}, 0.08044205571367379], 
         ArrowBox[{97, 12}, 0.08044205571367379], 
         ArrowBox[{97, 17}, 0.08044205571367379], 
         ArrowBox[{97, 18}, 0.08044205571367379], 
         ArrowBox[{97, 32}, 0.08044205571367379], 
         ArrowBox[{97, 81}, 0.08044205571367379], 
         ArrowBox[{98, 9}, 0.08044205571367379], 
         ArrowBox[{98, 96}, 0.08044205571367379], 
         ArrowBox[{99, 32}, 0.08044205571367379], 
         ArrowBox[{99, 35}, 0.08044205571367379], 
         ArrowBox[{99, 92}, 0.08044205571367379], 
         ArrowBox[{100, 15}, 0.08044205571367379], 
         ArrowBox[{100, 73}, 0.08044205571367379], 
         ArrowBox[{100, 98}, 0.08044205571367379], 
         ArrowBox[{101, 9}, 0.08044205571367379], 
         ArrowBox[{101, 73}, 0.08044205571367379], 
         ArrowBox[{101, 99}, 0.08044205571367379], 
         ArrowBox[{102, 9}, 0.08044205571367379], 
         ArrowBox[{102, 17}, 0.08044205571367379], 
         ArrowBox[{102, 18}, 0.08044205571367379], 
         ArrowBox[{102, 100}, 0.08044205571367379], 
         ArrowBox[{103, 11}, 0.08044205571367379], 
         ArrowBox[{103, 26}, 0.08044205571367379], 
         ArrowBox[{103, 42}, 0.08044205571367379], 
         ArrowBox[{103, 94}, 0.08044205571367379], 
         ArrowBox[{104, 18}, 0.08044205571367379], 
         ArrowBox[{104, 42}, 0.08044205571367379], 
         ArrowBox[{104, 91}, 0.08044205571367379], 
         ArrowBox[{104, 94}, 0.08044205571367379], 
         ArrowBox[{104, 103}, 0.08044205571367379], 
         ArrowBox[{105, 9}, 0.08044205571367379], 
         ArrowBox[{105, 17}, 0.08044205571367379], 
         ArrowBox[{105, 18}, 0.08044205571367379], 
         ArrowBox[{105, 19}, 0.08044205571367379], 
         ArrowBox[{105, 32}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          105, {1.5090889486796684`, 9.239263814625144}, 88}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          105, {1.3451857472275714`, 9.25916671280195}, 88}], 
          0.08044205571367379], ArrowBox[{105, 103}, 0.08044205571367379], 
         ArrowBox[{105, 104}, 0.08044205571367379], 
         ArrowBox[{106, 32}, 0.08044205571367379], 
         ArrowBox[{106, 89}, 0.08044205571367379], 
         ArrowBox[{106, 104}, 0.08044205571367379], 
         ArrowBox[{107, 19}, 0.08044205571367379], 
         ArrowBox[{107, 57}, 0.08044205571367379], 
         ArrowBox[{107, 63}, 0.08044205571367379], 
         ArrowBox[{107, 73}, 0.08044205571367379], 
         ArrowBox[{107, 75}, 0.08044205571367379], 
         ArrowBox[{108, 57}, 0.08044205571367379], 
         ArrowBox[{108, 64}, 0.08044205571367379], 
         ArrowBox[{108, 73}, 0.08044205571367379], 
         ArrowBox[{108, 75}, 0.08044205571367379], 
         ArrowBox[{108, 90}, 0.08044205571367379], 
         ArrowBox[{109, 15}, 0.08044205571367379], 
         ArrowBox[{109, 73}, 0.08044205571367379], 
         ArrowBox[{109, 88}, 0.08044205571367379], 
         ArrowBox[{109, 89}, 0.08044205571367379], 
         ArrowBox[{109, 90}, 0.08044205571367379], 
         ArrowBox[{109, 108}, 0.08044205571367379], 
         ArrowBox[{110, 8}, 0.08044205571367379], 
         ArrowBox[{111, 32}, 0.08044205571367379], 
         ArrowBox[{111, 42}, 0.08044205571367379], 
         ArrowBox[{111, 88}, 0.08044205571367379], 
         ArrowBox[{111, 104}, 0.08044205571367379], 
         ArrowBox[{112, 20}, 0.08044205571367379], 
         ArrowBox[{112, 32}, 0.08044205571367379], 
         ArrowBox[{112, 42}, 0.08044205571367379], 
         ArrowBox[{112, 73}, 0.08044205571367379], 
         ArrowBox[{112, 88}, 0.08044205571367379], 
         ArrowBox[{112, 90}, 0.08044205571367379], 
         ArrowBox[{113, 16}, 0.08044205571367379], 
         ArrowBox[{113, 19}, 0.08044205571367379], 
         ArrowBox[{113, 35}, 0.08044205571367379], 
         ArrowBox[{113, 88}, 0.08044205571367379], 
         ArrowBox[{114, 9}, 0.08044205571367379], 
         ArrowBox[{114, 17}, 0.08044205571367379], 
         ArrowBox[{114, 18}, 0.08044205571367379], 
         ArrowBox[{114, 103}, 0.08044205571367379], 
         ArrowBox[{115, 9}, 0.08044205571367379], 
         ArrowBox[{115, 18}, 0.08044205571367379], 
         ArrowBox[{115, 73}, 0.08044205571367379], 
         ArrowBox[{115, 103}, 0.08044205571367379], 
         ArrowBox[{116, 18}, 0.08044205571367379], 
         ArrowBox[{116, 73}, 0.08044205571367379], 
         ArrowBox[{116, 88}, 0.08044205571367379], 
         ArrowBox[{117, 17}, 0.08044205571367379], 
         ArrowBox[{117, 41}, 0.08044205571367379], 
         ArrowBox[{117, 44}, 0.08044205571367379], 
         ArrowBox[{117, 88}, 0.08044205571367379], 
         ArrowBox[{118, 12}, 0.08044205571367379], 
         ArrowBox[{118, 15}, 0.08044205571367379], 
         ArrowBox[{119, 11}, 0.08044205571367379], 
         ArrowBox[{119, 12}, 0.08044205571367379], 
         ArrowBox[{119, 69}, 0.08044205571367379], 
         ArrowBox[{119, 104}, 0.08044205571367379], 
         ArrowBox[{119, 109}, 0.08044205571367379], 
         ArrowBox[{119, 110}, 0.08044205571367379], 
         ArrowBox[{119, 114}, 0.08044205571367379], 
         ArrowBox[{120, 16}, 0.08044205571367379], 
         ArrowBox[{120, 98}, 0.08044205571367379], 
         ArrowBox[{120, 99}, 0.08044205571367379], 
         ArrowBox[{120, 101}, 0.08044205571367379], 
         ArrowBox[{120, 111}, 0.08044205571367379], 
         ArrowBox[{120, 119}, 0.08044205571367379], 
         ArrowBox[{121, 15}, 0.08044205571367379], 
         ArrowBox[{121, 35}, 0.08044205571367379], 
         ArrowBox[{121, 57}, 0.08044205571367379], 
         ArrowBox[{121, 73}, 0.08044205571367379], 
         ArrowBox[{121, 88}, 0.08044205571367379], 
         ArrowBox[{121, 90}, 0.08044205571367379], 
         ArrowBox[{121, 99}, 0.08044205571367379], 
         ArrowBox[{121, 120}, 0.08044205571367379], 
         ArrowBox[{122, 9}, 0.08044205571367379], 
         ArrowBox[{122, 16}, 0.08044205571367379], 
         ArrowBox[{122, 19}, 0.08044205571367379], 
         ArrowBox[{122, 35}, 0.08044205571367379], 
         ArrowBox[{122, 88}, 0.08044205571367379], 
         ArrowBox[{123, 12}, 0.08044205571367379], 
         ArrowBox[{123, 16}, 0.08044205571367379], 
         ArrowBox[{124, 11}, 0.08044205571367379], 
         ArrowBox[{124, 20}, 0.08044205571367379], 
         ArrowBox[{124, 24}, 0.08044205571367379], 
         ArrowBox[{124, 42}, 0.08044205571367379], 
         ArrowBox[{124, 73}, 0.08044205571367379], 
         ArrowBox[{124, 98}, 0.08044205571367379], 
         ArrowBox[{124, 99}, 0.08044205571367379], 
         ArrowBox[{124, 101}, 0.08044205571367379], 
         ArrowBox[{125, 102}, 0.08044205571367379], 
         ArrowBox[{125, 110}, 0.08044205571367379], 
         ArrowBox[{125, 111}, 0.08044205571367379], 
         ArrowBox[{125, 120}, 0.08044205571367379], 
         ArrowBox[{126, 2}, 0.08044205571367379], 
         ArrowBox[{127, 2}, 0.08044205571367379], 
         ArrowBox[{128, 127}, 0.08044205571367379], 
         ArrowBox[{129, 128}, 0.08044205571367379], 
         ArrowBox[{130, 126}, 0.08044205571367379], 
         ArrowBox[{131, 127}, 0.08044205571367379], 
         ArrowBox[{132, 2}, 0.08044205571367379], 
         ArrowBox[{133, 126}, 0.08044205571367379], 
         ArrowBox[{134, 133}, 0.08044205571367379], 
         ArrowBox[{135, 132}, 0.08044205571367379], 
         ArrowBox[{135, 133}, 0.08044205571367379], 
         ArrowBox[{136, 2}, 0.08044205571367379], 
         ArrowBox[{137, 126}, 0.08044205571367379], 
         ArrowBox[{138, 2}, 0.08044205571367379], 
         ArrowBox[{139, 133}, 0.08044205571367379], 
         ArrowBox[{139, 135}, 0.08044205571367379], 
         ArrowBox[{139, 138}, 0.08044205571367379], 
         ArrowBox[{140, 132}, 0.08044205571367379], 
         ArrowBox[{140, 137}, 0.08044205571367379], 
         ArrowBox[{141, 136}, 0.08044205571367379], 
         ArrowBox[{141, 139}, 0.08044205571367379], 
         ArrowBox[{141, 140}, 0.08044205571367379], 
         ArrowBox[{142, 126}, 0.08044205571367379], 
         ArrowBox[{142, 127}, 0.08044205571367379], 
         ArrowBox[{143, 136}, 0.08044205571367379], 
         ArrowBox[{143, 139}, 0.08044205571367379], 
         ArrowBox[{143, 142}, 0.08044205571367379], 
         ArrowBox[{144, 136}, 0.08044205571367379], 
         ArrowBox[{144, 141}, 0.08044205571367379], 
         ArrowBox[{144, 142}, 0.08044205571367379], 
         ArrowBox[{145, 132}, 0.08044205571367379], 
         ArrowBox[{145, 133}, 0.08044205571367379], 
         ArrowBox[{145, 135}, 0.08044205571367379], 
         ArrowBox[{145, 138}, 0.08044205571367379], 
         ArrowBox[{146, 132}, 0.08044205571367379], 
         ArrowBox[{146, 133}, 0.08044205571367379], 
         ArrowBox[{146, 135}, 0.08044205571367379], 
         ArrowBox[{146, 138}, 0.08044205571367379], 
         ArrowBox[{147, 129}, 0.08044205571367379], 
         ArrowBox[{147, 145}, 0.08044205571367379], 
         ArrowBox[{148, 136}, 0.08044205571367379], 
         ArrowBox[{148, 140}, 0.08044205571367379], 
         ArrowBox[{148, 141}, 0.08044205571367379], 
         ArrowBox[{148, 146}, 0.08044205571367379], 
         ArrowBox[{149, 132}, 0.08044205571367379], 
         ArrowBox[{149, 143}, 0.08044205571367379], 
         ArrowBox[{149, 147}, 0.08044205571367379], 
         ArrowBox[{150, 132}, 0.08044205571367379], 
         ArrowBox[{150, 136}, 0.08044205571367379], 
         ArrowBox[{150, 139}, 0.08044205571367379], 
         ArrowBox[{150, 144}, 0.08044205571367379], 
         ArrowBox[{151, 8}, 0.08044205571367379], 
         ArrowBox[{151, 48}, 0.08044205571367379], 
         ArrowBox[{151, 51}, 0.08044205571367379], 
         ArrowBox[{151, 136}, 0.08044205571367379], 
         ArrowBox[{151, 140}, 0.08044205571367379], 
         ArrowBox[{152, 47}, 0.08044205571367379], 
         ArrowBox[{152, 49}, 0.08044205571367379], 
         ArrowBox[{152, 132}, 0.08044205571367379], 
         ArrowBox[{152, 134}, 0.08044205571367379], 
         ArrowBox[{152, 136}, 0.08044205571367379], 
         ArrowBox[{152, 151}, 0.08044205571367379], 
         ArrowBox[{153, 11}, 0.08044205571367379], 
         ArrowBox[{153, 12}, 0.08044205571367379], 
         ArrowBox[{153, 38}, 0.08044205571367379], 
         ArrowBox[{153, 41}, 0.08044205571367379], 
         ArrowBox[{153, 132}, 0.08044205571367379], 
         ArrowBox[{153, 134}, 0.08044205571367379], 
         ArrowBox[{153, 136}, 0.08044205571367379], 
         ArrowBox[{153, 152}, 0.08044205571367379], 
         ArrowBox[{154, 26}, 0.08044205571367379], 
         ArrowBox[{154, 37}, 0.08044205571367379], 
         ArrowBox[{154, 39}, 0.08044205571367379], 
         ArrowBox[{154, 44}, 0.08044205571367379], 
         ArrowBox[{154, 132}, 0.08044205571367379], 
         ArrowBox[{154, 141}, 0.08044205571367379], 
         ArrowBox[{154, 147}, 0.08044205571367379], 
         ArrowBox[{154, 152}, 0.08044205571367379], 
         ArrowBox[{155, 9}, 0.08044205571367379], 
         ArrowBox[{155, 15}, 0.08044205571367379], 
         ArrowBox[{155, 32}, 0.08044205571367379], 
         ArrowBox[{155, 42}, 0.08044205571367379], 
         ArrowBox[{155, 134}, 0.08044205571367379], 
         ArrowBox[{155, 136}, 0.08044205571367379], 
         ArrowBox[{155, 154}, 0.08044205571367379], 
         ArrowBox[{156, 9}, 0.08044205571367379], 
         ArrowBox[{156, 32}, 0.08044205571367379], 
         ArrowBox[{156, 42}, 0.08044205571367379], 
         ArrowBox[{156, 134}, 0.08044205571367379], 
         ArrowBox[{156, 136}, 0.08044205571367379], 
         ArrowBox[{156, 154}, 0.08044205571367379], 
         ArrowBox[{157, 11}, 0.08044205571367379], 
         ArrowBox[{157, 20}, 0.08044205571367379], 
         ArrowBox[{157, 26}, 0.08044205571367379], 
         ArrowBox[{157, 32}, 0.08044205571367379], 
         ArrowBox[{157, 42}, 0.08044205571367379], 
         ArrowBox[{157, 134}, 0.08044205571367379], 
         ArrowBox[{157, 136}, 0.08044205571367379], 
         ArrowBox[{157, 154}, 0.08044205571367379], 
         ArrowBox[{158, 42}, 0.08044205571367379], 
         ArrowBox[{158, 154}, 0.08044205571367379], 
         ArrowBox[{159, 8}, 0.08044205571367379], 
         ArrowBox[{159, 41}, 0.08044205571367379], 
         ArrowBox[{159, 152}, 0.08044205571367379], 
         ArrowBox[{160, 41}, 0.08044205571367379], 
         ArrowBox[{160, 44}, 0.08044205571367379], 
         ArrowBox[{160, 132}, 0.08044205571367379], 
         ArrowBox[{160, 152}, 0.08044205571367379], 
         ArrowBox[{161, 8}, 0.08044205571367379], 
         ArrowBox[{161, 41}, 0.08044205571367379], 
         ArrowBox[{161, 132}, 0.08044205571367379], 
         ArrowBox[{161, 152}, 0.08044205571367379], 
         ArrowBox[{162, 8}, 0.08044205571367379], 
         ArrowBox[{162, 41}, 0.08044205571367379], 
         ArrowBox[{162, 132}, 0.08044205571367379], 
         ArrowBox[{162, 152}, 0.08044205571367379], 
         ArrowBox[{163, 18}, 0.08044205571367379], 
         ArrowBox[{163, 103}, 0.08044205571367379], 
         ArrowBox[{163, 158}, 0.08044205571367379], 
         ArrowBox[{164, 22}, 0.08044205571367379], 
         ArrowBox[{164, 41}, 0.08044205571367379], 
         ArrowBox[{164, 132}, 0.08044205571367379], 
         ArrowBox[{164, 134}, 0.08044205571367379], 
         ArrowBox[{164, 136}, 0.08044205571367379], 
         ArrowBox[{164, 151}, 0.08044205571367379], 
         ArrowBox[{165, 22}, 0.08044205571367379], 
         ArrowBox[{165, 132}, 0.08044205571367379], 
         ArrowBox[{165, 134}, 0.08044205571367379], 
         ArrowBox[{165, 136}, 0.08044205571367379], 
         ArrowBox[{165, 151}, 0.08044205571367379], 
         ArrowBox[{166, 8}, 0.08044205571367379], 
         ArrowBox[{166, 18}, 0.08044205571367379], 
         ArrowBox[{166, 41}, 0.08044205571367379], 
         ArrowBox[{166, 132}, 0.08044205571367379], 
         ArrowBox[{166, 164}, 0.08044205571367379], 
         ArrowBox[{167, 8}, 0.08044205571367379], 
         ArrowBox[{167, 132}, 0.08044205571367379], 
         ArrowBox[{167, 136}, 0.08044205571367379], 
         ArrowBox[{167, 166}, 0.08044205571367379], 
         ArrowBox[{168, 32}, 0.08044205571367379], 
         ArrowBox[{168, 42}, 0.08044205571367379], 
         ArrowBox[{168, 136}, 0.08044205571367379], 
         ArrowBox[{168, 141}, 0.08044205571367379], 
         ArrowBox[{168, 154}, 0.08044205571367379], 
         ArrowBox[{169, 132}, 0.08044205571367379], 
         ArrowBox[{169, 136}, 0.08044205571367379], 
         ArrowBox[{169, 141}, 0.08044205571367379], 
         ArrowBox[{169, 151}, 0.08044205571367379], 
         ArrowBox[{169, 161}, 0.08044205571367379], 
         ArrowBox[{169, 165}, 0.08044205571367379], 
         ArrowBox[{170, 42}, 0.08044205571367379], 
         ArrowBox[{170, 136}, 0.08044205571367379], 
         ArrowBox[{170, 137}, 0.08044205571367379], 
         ArrowBox[{170, 141}, 0.08044205571367379], 
         ArrowBox[{170, 147}, 0.08044205571367379], 
         ArrowBox[{170, 151}, 0.08044205571367379], 
         ArrowBox[{170, 154}, 0.08044205571367379], 
         ArrowBox[{170, 156}, 0.08044205571367379], 
         ArrowBox[{170, 169}, 0.08044205571367379], 
         ArrowBox[{171, 136}, 0.08044205571367379], 
         ArrowBox[{172, 134}, 0.08044205571367379], 
         ArrowBox[{172, 136}, 0.08044205571367379], 
         ArrowBox[{172, 147}, 0.08044205571367379], 
         ArrowBox[{172, 161}, 0.08044205571367379], 
         ArrowBox[{172, 162}, 0.08044205571367379], 
         ArrowBox[{172, 168}, 0.08044205571367379], 
         ArrowBox[{172, 169}, 0.08044205571367379], 
         ArrowBox[{173, 22}, 0.08044205571367379], 
         ArrowBox[{173, 41}, 0.08044205571367379], 
         ArrowBox[{173, 136}, 0.08044205571367379], 
         ArrowBox[{173, 147}, 0.08044205571367379], 
         ArrowBox[{173, 151}, 0.08044205571367379], 
         ArrowBox[{173, 162}, 0.08044205571367379], 
         ArrowBox[{174, 38}, 0.08044205571367379], 
         ArrowBox[{174, 141}, 0.08044205571367379], 
         ArrowBox[{174, 143}, 0.08044205571367379], 
         ArrowBox[{174, 147}, 0.08044205571367379], 
         ArrowBox[{174, 152}, 0.08044205571367379], 
         ArrowBox[{174, 171}, 0.08044205571367379], 
         ArrowBox[{175, 54}, 0.08044205571367379], 
         ArrowBox[{175, 55}, 0.08044205571367379], 
         ArrowBox[{175, 136}, 0.08044205571367379], 
         ArrowBox[{175, 139}, 0.08044205571367379], 
         ArrowBox[{175, 141}, 0.08044205571367379], 
         ArrowBox[{175, 144}, 0.08044205571367379], 
         ArrowBox[{175, 151}, 0.08044205571367379], 
         ArrowBox[{175, 163}, 0.08044205571367379], 
         ArrowBox[{175, 168}, 0.08044205571367379], 
         ArrowBox[{176, 41}, 0.08044205571367379], 
         ArrowBox[{176, 134}, 0.08044205571367379], 
         ArrowBox[{176, 136}, 0.08044205571367379], 
         ArrowBox[{176, 174}, 0.08044205571367379], 
         ArrowBox[{177, 46}, 0.08044205571367379], 
         ArrowBox[{177, 53}, 0.08044205571367379], 
         ArrowBox[{177, 176}, 0.08044205571367379], 
         ArrowBox[{178, 16}, 0.08044205571367379], 
         ArrowBox[{178, 46}, 0.08044205571367379], 
         ArrowBox[{178, 168}, 0.08044205571367379], 
         ArrowBox[{178, 171}, 0.08044205571367379], 
         ArrowBox[{178, 175}, 0.08044205571367379], 
         ArrowBox[{178, 176}, 0.08044205571367379], 
         ArrowBox[{178, 177}, 0.08044205571367379], 
         ArrowBox[{179, 46}, 0.08044205571367379], 
         ArrowBox[{179, 53}, 0.08044205571367379], 
         ArrowBox[{179, 171}, 0.08044205571367379], 
         ArrowBox[{179, 174}, 0.08044205571367379], 
         ArrowBox[{179, 175}, 0.08044205571367379], 
         ArrowBox[{179, 176}, 0.08044205571367379], 
         ArrowBox[{180, 56}, 0.08044205571367379], 
         ArrowBox[{180, 132}, 0.08044205571367379], 
         ArrowBox[{180, 164}, 0.08044205571367379], 
         ArrowBox[{180, 179}, 0.08044205571367379], 
         ArrowBox[{181, 19}, 0.08044205571367379], 
         ArrowBox[{181, 149}, 0.08044205571367379], 
         ArrowBox[{181, 158}, 0.08044205571367379], 
         ArrowBox[{181, 169}, 0.08044205571367379], 
         ArrowBox[{182, 22}, 0.08044205571367379], 
         ArrowBox[{182, 38}, 0.08044205571367379], 
         ArrowBox[{182, 42}, 0.08044205571367379], 
         ArrowBox[{182, 156}, 0.08044205571367379], 
         ArrowBox[{183, 92}, 0.08044205571367379], 
         ArrowBox[{183, 99}, 0.08044205571367379], 
         ArrowBox[{183, 140}, 0.08044205571367379], 
         ArrowBox[{184, 6}, 0.08044205571367379], 
         ArrowBox[{185, 184}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          186, {8.79201966524234, 8.106758840620218}, 185}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          186, {8.447737502593068, 8.37432031078031}, 185}], 
          0.08044205571367379], ArrowBox[{187, 185}, 0.08044205571367379], 
         ArrowBox[{188, 21}, 0.08044205571367379], 
         ArrowBox[{189, 188}, 0.08044205571367379], 
         ArrowBox[{190, 188}, 0.08044205571367379], 
         ArrowBox[{191, 190}, 0.08044205571367379], 
         ArrowBox[{192, 188}, 0.08044205571367379], 
         ArrowBox[{192, 189}, 0.08044205571367379], 
         ArrowBox[{193, 188}, 0.08044205571367379], 
         ArrowBox[{193, 189}, 0.08044205571367379], 
         ArrowBox[{193, 192}, 0.08044205571367379], 
         ArrowBox[{194, 190}, 0.08044205571367379], 
         ArrowBox[{194, 191}, 0.08044205571367379], 
         ArrowBox[{195, 188}, 0.08044205571367379], 
         ArrowBox[{195, 189}, 0.08044205571367379], 
         ArrowBox[{196, 193}, 0.08044205571367379], 
         ArrowBox[{197, 136}, 0.08044205571367379], 
         ArrowBox[{197, 196}, 0.08044205571367379], 
         ArrowBox[{198, 195}, 0.08044205571367379], 
         ArrowBox[{199, 198}, 0.08044205571367379], 
         ArrowBox[{200, 136}, 0.08044205571367379], 
         ArrowBox[{200, 196}, 0.08044205571367379], 
         ArrowBox[{201, 199}, 0.08044205571367379], 
         ArrowBox[{201, 200}, 0.08044205571367379], 
         ArrowBox[{202, 132}, 0.08044205571367379], 
         ArrowBox[{202, 134}, 0.08044205571367379], 
         ArrowBox[{202, 136}, 0.08044205571367379], 
         ArrowBox[{202, 200}, 0.08044205571367379], 
         ArrowBox[{202, 201}, 0.08044205571367379], 
         ArrowBox[{203, 187}, 0.08044205571367379], 
         ArrowBox[{203, 195}, 0.08044205571367379], 
         ArrowBox[{203, 196}, 0.08044205571367379], 
         ArrowBox[{204, 199}, 0.08044205571367379], 
         ArrowBox[{204, 203}, 0.08044205571367379], 
         ArrowBox[{205, 200}, 0.08044205571367379], 
         ArrowBox[{206, 13}, 0.08044205571367379], 
         ArrowBox[{207, 199}, 0.08044205571367379], 
         ArrowBox[{207, 202}, 0.08044205571367379], 
         ArrowBox[{207, 203}, 0.08044205571367379], 
         ArrowBox[{207, 204}, 0.08044205571367379], 
         ArrowBox[{207, 206}, 0.08044205571367379], 
         ArrowBox[{208, 207}, 0.08044205571367379], 
         ArrowBox[{209, 207}, 0.08044205571367379], 
         ArrowBox[{210, 208}, 0.08044205571367379], 
         ArrowBox[{210, 209}, 0.08044205571367379], 
         ArrowBox[{211, 6}, 0.08044205571367379], 
         ArrowBox[{212, 2}, 0.08044205571367379], 
         ArrowBox[{213, 202}, 0.08044205571367379], 
         ArrowBox[{213, 203}, 0.08044205571367379], 
         ArrowBox[{213, 204}, 0.08044205571367379], 
         ArrowBox[{213, 212}, 0.08044205571367379], 
         ArrowBox[{214, 6}, 0.08044205571367379], 
         ArrowBox[{215, 214}, 0.08044205571367379], 
         ArrowBox[{216, 186}, 0.08044205571367379], 
         ArrowBox[{216, 199}, 0.08044205571367379], 
         ArrowBox[{216, 202}, 0.08044205571367379], 
         ArrowBox[{216, 204}, 0.08044205571367379], 
         ArrowBox[{217, 200}, 0.08044205571367379], 
         ArrowBox[{217, 202}, 0.08044205571367379], 
         ArrowBox[{217, 203}, 0.08044205571367379], 
         ArrowBox[{217, 204}, 0.08044205571367379], 
         ArrowBox[{217, 216}, 0.08044205571367379], 
         ArrowBox[{218, 2}, 0.08044205571367379], 
         ArrowBox[{219, 217}, 0.08044205571367379], 
         ArrowBox[{219, 218}, 0.08044205571367379], 
         ArrowBox[{220, 198}, 0.08044205571367379], 
         ArrowBox[{221, 198}, 0.08044205571367379], 
         ArrowBox[{222, 219}, 0.08044205571367379], 
         ArrowBox[{222, 220}, 0.08044205571367379], 
         ArrowBox[{222, 221}, 0.08044205571367379], 
         ArrowBox[{223, 197}, 0.08044205571367379], 
         ArrowBox[{223, 203}, 0.08044205571367379], 
         ArrowBox[{223, 204}, 0.08044205571367379], 
         ArrowBox[{224, 200}, 0.08044205571367379], 
         ArrowBox[{224, 201}, 0.08044205571367379], 
         ArrowBox[{224, 205}, 0.08044205571367379], 
         ArrowBox[{224, 210}, 0.08044205571367379], 
         ArrowBox[{224, 223}, 0.08044205571367379], 
         ArrowBox[{225, 205}, 0.08044205571367379], 
         ArrowBox[{225, 210}, 0.08044205571367379], 
         ArrowBox[{225, 216}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          225, {8.68555892856331, 10.429643157492738`}, 224}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          225, {8.632845046306736, 10.599014486702064`}, 224}], 
          0.08044205571367379], ArrowBox[{226, 196}, 0.08044205571367379], 
         ArrowBox[{226, 203}, 0.08044205571367379], 
         ArrowBox[{226, 217}, 0.08044205571367379], 
         ArrowBox[{226, 218}, 0.08044205571367379], 
         ArrowBox[{227, 197}, 0.08044205571367379], 
         ArrowBox[{227, 200}, 0.08044205571367379], 
         ArrowBox[{227, 226}, 0.08044205571367379], 
         ArrowBox[{228, 197}, 0.08044205571367379], 
         ArrowBox[{228, 216}, 0.08044205571367379], 
         ArrowBox[{228, 225}, 0.08044205571367379], 
         ArrowBox[{229, 228}, 0.08044205571367379], 
         ArrowBox[{230, 197}, 0.08044205571367379], 
         ArrowBox[{230, 203}, 0.08044205571367379], 
         ArrowBox[{230, 204}, 0.08044205571367379], 
         ArrowBox[{230, 216}, 0.08044205571367379], 
         ArrowBox[{230, 225}, 0.08044205571367379], 
         ArrowBox[{231, 223}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          231, {9.01233515260077, 10.145202783200915`}, 224}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          231, {9.064663695462738, 10.564061927925442`}, 224}], 
          0.08044205571367379], ArrowBox[{232, 200}, 0.08044205571367379], 
         ArrowBox[{232, 201}, 0.08044205571367379], 
         ArrowBox[{233, 200}, 0.08044205571367379], 
         ArrowBox[{233, 201}, 0.08044205571367379], 
         ArrowBox[{234, 200}, 0.08044205571367379], 
         ArrowBox[{234, 201}, 0.08044205571367379], 
         ArrowBox[{235, 197}, 0.08044205571367379], 
         ArrowBox[{236, 229}, 0.08044205571367379], 
         ArrowBox[{236, 233}, 0.08044205571367379], 
         ArrowBox[{237, 229}, 0.08044205571367379], 
         ArrowBox[{237, 233}, 0.08044205571367379], 
         ArrowBox[{237, 234}, 0.08044205571367379], 
         ArrowBox[{238, 236}, 0.08044205571367379], 
         ArrowBox[{239, 237}, 0.08044205571367379], 
         ArrowBox[{240, 196}, 0.08044205571367379], 
         ArrowBox[{240, 200}, 0.08044205571367379], 
         ArrowBox[{241, 196}, 0.08044205571367379], 
         ArrowBox[{241, 200}, 0.08044205571367379], 
         ArrowBox[{241, 201}, 0.08044205571367379], 
         ArrowBox[{241, 240}, 0.08044205571367379], 
         ArrowBox[{242, 196}, 0.08044205571367379], 
         ArrowBox[{242, 200}, 0.08044205571367379], 
         ArrowBox[{242, 203}, 0.08044205571367379], 
         ArrowBox[{242, 216}, 0.08044205571367379], 
         ArrowBox[{243, 197}, 0.08044205571367379], 
         ArrowBox[{243, 201}, 0.08044205571367379], 
         ArrowBox[{243, 203}, 0.08044205571367379], 
         ArrowBox[{243, 204}, 0.08044205571367379], 
         ArrowBox[{243, 216}, 0.08044205571367379], 
         ArrowBox[{243, 224}, 0.08044205571367379], 
         ArrowBox[{243, 225}, 0.08044205571367379], 
         ArrowBox[{243, 242}, 0.08044205571367379], 
         ArrowBox[{244, 242}, 0.08044205571367379], 
         ArrowBox[{245, 243}, 0.08044205571367379], 
         ArrowBox[{246, 240}, 0.08044205571367379], 
         ArrowBox[{246, 244}, 0.08044205571367379], 
         ArrowBox[{247, 240}, 0.08044205571367379], 
         ArrowBox[{247, 241}, 0.08044205571367379], 
         ArrowBox[{247, 245}, 0.08044205571367379], 
         ArrowBox[{248, 216}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          248, {8.232221026048775, 10.893348517499613`}, 224}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          248, {7.992766197230685, 10.703115311481588`}, 224}], 
          0.08044205571367379], ArrowBox[{248, 240}, 0.08044205571367379], 
         ArrowBox[{249, 216}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          249, {8.950458258389087, 10.25032009039546}, 224}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          249, {8.952472283773892, 10.611931390553698`}, 224}], 
          0.08044205571367379], ArrowBox[{249, 241}, 0.08044205571367379], 
         ArrowBox[{250, 200}, 0.08044205571367379], 
         ArrowBox[{250, 230}, 0.08044205571367379], 
         ArrowBox[{250, 240}, 0.08044205571367379], 
         ArrowBox[{250, 244}, 0.08044205571367379], 
         ArrowBox[{251, 200}, 0.08044205571367379], 
         ArrowBox[{251, 230}, 0.08044205571367379], 
         ArrowBox[{251, 240}, 0.08044205571367379], 
         ArrowBox[{251, 242}, 0.08044205571367379], 
         ArrowBox[{252, 230}, 0.08044205571367379], 
         ArrowBox[{252, 245}, 0.08044205571367379], 
         ArrowBox[{253, 200}, 0.08044205571367379], 
         ArrowBox[{253, 230}, 0.08044205571367379], 
         ArrowBox[{253, 241}, 0.08044205571367379], 
         ArrowBox[{253, 245}, 0.08044205571367379], 
         ArrowBox[{253, 252}, 0.08044205571367379], 
         ArrowBox[{254, 200}, 0.08044205571367379], 
         ArrowBox[{254, 230}, 0.08044205571367379], 
         ArrowBox[{254, 241}, 0.08044205571367379], 
         ArrowBox[{254, 245}, 0.08044205571367379], 
         ArrowBox[{254, 252}, 0.08044205571367379], 
         ArrowBox[{255, 230}, 0.08044205571367379], 
         ArrowBox[{255, 241}, 0.08044205571367379], 
         ArrowBox[{255, 245}, 0.08044205571367379], 
         ArrowBox[{256, 2}, 0.08044205571367379], 
         ArrowBox[{257, 244}, 0.08044205571367379], 
         ArrowBox[{257, 245}, 0.08044205571367379], 
         ArrowBox[{258, 244}, 0.08044205571367379], 
         ArrowBox[{258, 245}, 0.08044205571367379], 
         ArrowBox[{258, 252}, 0.08044205571367379], 
         ArrowBox[{258, 257}, 0.08044205571367379], 
         ArrowBox[{259, 247}, 0.08044205571367379], 
         ArrowBox[{259, 248}, 0.08044205571367379], 
         ArrowBox[{259, 255}, 0.08044205571367379], 
         ArrowBox[{259, 257}, 0.08044205571367379], 
         ArrowBox[{260, 198}, 0.08044205571367379], 
         ArrowBox[{261, 202}, 0.08044205571367379], 
         ArrowBox[{261, 203}, 0.08044205571367379], 
         ArrowBox[{261, 204}, 0.08044205571367379], 
         ArrowBox[{261, 212}, 0.08044205571367379], 
         ArrowBox[{261, 257}, 0.08044205571367379], 
         ArrowBox[{261, 260}, 0.08044205571367379], 
         ArrowBox[{262, 202}, 0.08044205571367379], 
         ArrowBox[{262, 214}, 0.08044205571367379], 
         ArrowBox[{262, 257}, 0.08044205571367379], 
         ArrowBox[{262, 260}, 0.08044205571367379], 
         ArrowBox[{262, 261}, 0.08044205571367379], 
         ArrowBox[{263, 213}, 0.08044205571367379], 
         ArrowBox[{264, 61}, 0.08044205571367379], 
         ArrowBox[{264, 62}, 0.08044205571367379], 
         ArrowBox[{264, 205}, 0.08044205571367379], 
         ArrowBox[{264, 207}, 0.08044205571367379], 
         ArrowBox[{264, 208}, 0.08044205571367379], 
         ArrowBox[{264, 211}, 0.08044205571367379], 
         ArrowBox[{264, 224}, 0.08044205571367379], 
         ArrowBox[{265, 203}, 0.08044205571367379], 
         ArrowBox[{265, 204}, 0.08044205571367379], 
         ArrowBox[{266, 196}, 0.08044205571367379], 
         ArrowBox[{266, 203}, 0.08044205571367379], 
         ArrowBox[{266, 204}, 0.08044205571367379], 
         ArrowBox[{267, 202}, 0.08044205571367379], 
         ArrowBox[{267, 265}, 0.08044205571367379], 
         ArrowBox[{268, 267}, 0.08044205571367379], 
         ArrowBox[{269, 214}, 0.08044205571367379], 
         ArrowBox[{270, 6}, 0.08044205571367379], 
         ArrowBox[{271, 270}, 0.08044205571367379], 
         ArrowBox[{272, 270}, 0.08044205571367379], 
         ArrowBox[{272, 271}, 0.08044205571367379], 
         ArrowBox[{273, 6}, 0.08044205571367379], 
         ArrowBox[{274, 273}, 0.08044205571367379], 
         ArrowBox[{275, 273}, 0.08044205571367379], 
         ArrowBox[{276, 273}, 0.08044205571367379], 
         ArrowBox[{277, 270}, 0.08044205571367379], 
         ArrowBox[{278, 272}, 0.08044205571367379], 
         ArrowBox[{279, 272}, 0.08044205571367379], 
         ArrowBox[{280, 279}, 0.08044205571367379], 
         ArrowBox[{281, 262}, 0.08044205571367379], 
         ArrowBox[{282, 2}, 0.08044205571367379], 
         ArrowBox[{283, 2}, 0.08044205571367379], 
         ArrowBox[{284, 194}, 0.08044205571367379], 
         ArrowBox[{284, 195}, 0.08044205571367379], 
         ArrowBox[{284, 196}, 0.08044205571367379], 
         ArrowBox[{285, 197}, 0.08044205571367379], 
         ArrowBox[{285, 202}, 0.08044205571367379], 
         ArrowBox[{285, 203}, 0.08044205571367379], 
         ArrowBox[{285, 204}, 0.08044205571367379], 
         ArrowBox[{285, 212}, 0.08044205571367379], 
         ArrowBox[{285, 262}, 0.08044205571367379], 
         ArrowBox[{285, 284}, 0.08044205571367379], 
         ArrowBox[{286, 6}, 0.08044205571367379], 
         ArrowBox[{287, 6}, 0.08044205571367379], 
         ArrowBox[{288, 287}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          289, {5.5071730969317185`, 3.4210862538030016`}, 288}], 
          0.08044205571367379], ArrowBox[{289, 288}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          289, {5.885892768281038, 3.5344824830627446`}, 288}], 
          0.08044205571367379], ArrowBox[{290, 132}, 0.08044205571367379], 
         ArrowBox[{290, 147}, 0.08044205571367379], 
         ArrowBox[{291, 132}, 0.08044205571367379], 
         ArrowBox[{291, 134}, 0.08044205571367379], 
         ArrowBox[{291, 136}, 0.08044205571367379], 
         ArrowBox[{291, 144}, 0.08044205571367379], 
         ArrowBox[{291, 147}, 0.08044205571367379], 
         ArrowBox[{292, 291}, 0.08044205571367379], 
         ArrowBox[{293, 290}, 0.08044205571367379], 
         ArrowBox[{294, 170}, 0.08044205571367379], 
         ArrowBox[{294, 233}, 0.08044205571367379], 
         ArrowBox[{294, 248}, 0.08044205571367379], 
         ArrowBox[{294, 290}, 0.08044205571367379], 
         ArrowBox[{294, 291}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          295, {4.447816203743727, 12.143092577936828`}, 291}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          295, {4.321839616049318, 12.181855344063774`}, 291}], 
          0.08044205571367379], ArrowBox[{295, 294}, 0.08044205571367379], 
         ArrowBox[{295, 296}, 0.08044205571367379], 
         ArrowBox[{296, 136}, 0.08044205571367379], 
         ArrowBox[{296, 290}, 0.08044205571367379], 
         ArrowBox[{296, 291}, 0.08044205571367379], 
         ArrowBox[{296, 292}, 0.08044205571367379], 
         ArrowBox[{296, 293}, 0.08044205571367379], 
         ArrowBox[{297, 136}, 0.08044205571367379], 
         ArrowBox[{297, 147}, 0.08044205571367379], 
         ArrowBox[{297, 226}, 0.08044205571367379], 
         ArrowBox[{297, 290}, 0.08044205571367379], 
         ArrowBox[{297, 291}, 0.08044205571367379], 
         ArrowBox[{298, 297}, 0.08044205571367379], 
         ArrowBox[{299, 57}, 0.08044205571367379], 
         ArrowBox[{299, 103}, 0.08044205571367379], 
         ArrowBox[{299, 110}, 0.08044205571367379], 
         ArrowBox[{299, 132}, 0.08044205571367379], 
         ArrowBox[{299, 142}, 0.08044205571367379], 
         ArrowBox[{299, 147}, 0.08044205571367379], 
         ArrowBox[{299, 172}, 0.08044205571367379], 
         ArrowBox[{299, 296}, 0.08044205571367379], 
         ArrowBox[{300, 21}, 0.08044205571367379], 
         ArrowBox[{301, 21}, 0.08044205571367379], 
         ArrowBox[{302, 8}, 0.08044205571367379], 
         ArrowBox[{302, 17}, 0.08044205571367379], 
         ArrowBox[{302, 63}, 0.08044205571367379], 
         ArrowBox[{302, 291}, 0.08044205571367379], 
         ArrowBox[{302, 297}, 0.08044205571367379], 
         ArrowBox[{302, 300}, 0.08044205571367379], 
         ArrowBox[{303, 291}, 0.08044205571367379], 
         ArrowBox[{303, 298}, 0.08044205571367379], 
         ArrowBox[{303, 301}, 0.08044205571367379], 
         ArrowBox[{303, 302}, 0.08044205571367379], 
         ArrowBox[{304, 56}, 0.08044205571367379], 
         ArrowBox[{304, 151}, 0.08044205571367379], 
         ArrowBox[{304, 296}, 0.08044205571367379], 
         ArrowBox[{305, 56}, 0.08044205571367379], 
         ArrowBox[{305, 151}, 0.08044205571367379], 
         ArrowBox[{305, 296}, 0.08044205571367379], 
         ArrowBox[{306, 151}, 0.08044205571367379], 
         ArrowBox[{306, 296}, 0.08044205571367379], 
         ArrowBox[{307, 151}, 0.08044205571367379], 
         ArrowBox[{307, 164}, 0.08044205571367379], 
         ArrowBox[{307, 172}, 0.08044205571367379], 
         ArrowBox[{307, 296}, 0.08044205571367379], 
         ArrowBox[{307, 298}, 0.08044205571367379], 
         ArrowBox[{307, 306}, 0.08044205571367379], 
         ArrowBox[{308, 151}, 0.08044205571367379], 
         ArrowBox[{308, 296}, 0.08044205571367379], 
         ArrowBox[{308, 298}, 0.08044205571367379], 
         ArrowBox[{308, 303}, 0.08044205571367379], 
         ArrowBox[{308, 306}, 0.08044205571367379], 
         ArrowBox[{308, 307}, 0.08044205571367379], 
         ArrowBox[{309, 151}, 0.08044205571367379], 
         ArrowBox[{309, 296}, 0.08044205571367379], 
         ArrowBox[{309, 308}, 0.08044205571367379], 
         ArrowBox[{310, 136}, 0.08044205571367379], 
         ArrowBox[{310, 151}, 0.08044205571367379], 
         ArrowBox[{310, 167}, 0.08044205571367379], 
         ArrowBox[{310, 296}, 0.08044205571367379], 
         ArrowBox[{310, 304}, 0.08044205571367379], 
         ArrowBox[{310, 306}, 0.08044205571367379], 
         ArrowBox[{310, 307}, 0.08044205571367379], 
         ArrowBox[{311, 62}, 0.08044205571367379], 
         ArrowBox[{311, 291}, 0.08044205571367379], 
         ArrowBox[{311, 296}, 0.08044205571367379], 
         ArrowBox[{311, 298}, 0.08044205571367379], 
         ArrowBox[{311, 301}, 0.08044205571367379], 
         ArrowBox[{311, 305}, 0.08044205571367379], 
         ArrowBox[{311, 307}, 0.08044205571367379], 
         ArrowBox[{312, 141}, 0.08044205571367379], 
         ArrowBox[{312, 162}, 0.08044205571367379], 
         ArrowBox[{312, 163}, 0.08044205571367379], 
         ArrowBox[{312, 167}, 0.08044205571367379], 
         ArrowBox[{312, 295}, 0.08044205571367379], 
         ArrowBox[{312, 296}, 0.08044205571367379], 
         ArrowBox[{312, 306}, 0.08044205571367379], 
         ArrowBox[{312, 308}, 0.08044205571367379], 
         ArrowBox[{313, 141}, 0.08044205571367379], 
         ArrowBox[{313, 162}, 0.08044205571367379], 
         ArrowBox[{313, 163}, 0.08044205571367379], 
         ArrowBox[{313, 166}, 0.08044205571367379], 
         ArrowBox[{313, 167}, 0.08044205571367379], 
         ArrowBox[{313, 295}, 0.08044205571367379], 
         ArrowBox[{313, 296}, 0.08044205571367379], 
         ArrowBox[{313, 306}, 0.08044205571367379], 
         ArrowBox[{313, 308}, 0.08044205571367379], 
         ArrowBox[{314, 57}, 0.08044205571367379], 
         ArrowBox[{314, 64}, 0.08044205571367379], 
         ArrowBox[{314, 103}, 0.08044205571367379], 
         ArrowBox[{314, 144}, 0.08044205571367379], 
         ArrowBox[{314, 250}, 0.08044205571367379], 
         ArrowBox[{314, 273}, 0.08044205571367379], 
         ArrowBox[{314, 275}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          314, {4.259434888630706, 11.239213179144304`}, 291}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          314, {4.706740556199636, 11.342607613224827`}, 291}], 
          0.08044205571367379], ArrowBox[{314, 294}, 0.08044205571367379], 
         ArrowBox[{315, 57}, 0.08044205571367379], 
         ArrowBox[{315, 103}, 0.08044205571367379], 
         ArrowBox[{315, 144}, 0.08044205571367379], 
         ArrowBox[{315, 291}, 0.08044205571367379], 
         ArrowBox[{315, 294}, 0.08044205571367379], 
         ArrowBox[{315, 314}, 0.08044205571367379], 
         ArrowBox[{316, 296}, 0.08044205571367379], 
         ArrowBox[{316, 299}, 0.08044205571367379], 
         ArrowBox[{316, 306}, 0.08044205571367379], 
         ArrowBox[{316, 308}, 0.08044205571367379], 
         ArrowBox[{316, 314}, 0.08044205571367379], 
         ArrowBox[{316, 315}, 0.08044205571367379], 
         ArrowBox[{317, 296}, 0.08044205571367379], 
         ArrowBox[{317, 299}, 0.08044205571367379], 
         ArrowBox[{317, 306}, 0.08044205571367379], 
         ArrowBox[{317, 308}, 0.08044205571367379], 
         ArrowBox[{317, 314}, 0.08044205571367379], 
         ArrowBox[{317, 315}, 0.08044205571367379], 
         ArrowBox[{318, 57}, 0.08044205571367379], 
         ArrowBox[{318, 154}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          318, {2.809397258324022, 10.868762535621782`}, 158}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          318, {2.487952807582498, 11.087765181538764`}, 158}], 
          0.08044205571367379], ArrowBox[{318, 166}, 0.08044205571367379], 
         ArrowBox[{318, 167}, 0.08044205571367379], 
         ArrowBox[{318, 178}, 0.08044205571367379], 
         ArrowBox[{318, 303}, 0.08044205571367379], 
         ArrowBox[{318, 306}, 0.08044205571367379], 
         ArrowBox[{318, 308}, 0.08044205571367379], 
         ArrowBox[{318, 315}, 0.08044205571367379], 
         ArrowBox[{319, 57}, 0.08044205571367379], 
         ArrowBox[{319, 103}, 0.08044205571367379], 
         ArrowBox[{319, 178}, 0.08044205571367379], 
         ArrowBox[{319, 291}, 0.08044205571367379], 
         ArrowBox[{319, 296}, 0.08044205571367379], 
         ArrowBox[{319, 303}, 0.08044205571367379], 
         ArrowBox[{319, 316}, 0.08044205571367379], 
         ArrowBox[{320, 57}, 0.08044205571367379], 
         ArrowBox[{320, 103}, 0.08044205571367379], 
         ArrowBox[{320, 296}, 0.08044205571367379], 
         ArrowBox[{320, 298}, 0.08044205571367379], 
         ArrowBox[{320, 303}, 0.08044205571367379], 
         ArrowBox[{320, 316}, 0.08044205571367379], 
         ArrowBox[{320, 317}, 0.08044205571367379], 
         ArrowBox[{320, 318}, 0.08044205571367379], 
         ArrowBox[{321, 62}, 0.08044205571367379], 
         ArrowBox[{321, 291}, 0.08044205571367379], 
         ArrowBox[{321, 296}, 0.08044205571367379], 
         ArrowBox[{321, 298}, 0.08044205571367379], 
         ArrowBox[{321, 300}, 0.08044205571367379], 
         ArrowBox[{321, 301}, 0.08044205571367379], 
         ArrowBox[{322, 62}, 0.08044205571367379], 
         ArrowBox[{322, 301}, 0.08044205571367379], 
         ArrowBox[{322, 321}, 0.08044205571367379], 
         ArrowBox[{323, 51}, 0.08044205571367379], 
         ArrowBox[{323, 62}, 0.08044205571367379], 
         ArrowBox[{323, 151}, 0.08044205571367379], 
         ArrowBox[{323, 291}, 0.08044205571367379], 
         ArrowBox[{323, 296}, 0.08044205571367379], 
         ArrowBox[{323, 298}, 0.08044205571367379], 
         ArrowBox[{323, 300}, 0.08044205571367379], 
         ArrowBox[{323, 305}, 0.08044205571367379], 
         ArrowBox[{323, 307}, 0.08044205571367379], 
         ArrowBox[{323, 321}, 0.08044205571367379], 
         ArrowBox[{324, 291}, 0.08044205571367379], 
         ArrowBox[{324, 301}, 0.08044205571367379], 
         ArrowBox[{324, 308}, 0.08044205571367379], 
         ArrowBox[{324, 318}, 0.08044205571367379], 
         ArrowBox[{325, 301}, 0.08044205571367379], 
         ArrowBox[{325, 319}, 0.08044205571367379], 
         ArrowBox[{326, 62}, 0.08044205571367379], 
         ArrowBox[{326, 63}, 0.08044205571367379], 
         ArrowBox[{326, 151}, 0.08044205571367379], 
         ArrowBox[{326, 296}, 0.08044205571367379], 
         ArrowBox[{326, 307}, 0.08044205571367379], 
         ArrowBox[{326, 320}, 0.08044205571367379], 
         ArrowBox[{326, 321}, 0.08044205571367379], 
         ArrowBox[{327, 62}, 0.08044205571367379], 
         ArrowBox[{327, 306}, 0.08044205571367379], 
         ArrowBox[{327, 311}, 0.08044205571367379], 
         ArrowBox[{328, 311}, 0.08044205571367379], 
         ArrowBox[{328, 322}, 0.08044205571367379], 
         ArrowBox[{329, 62}, 0.08044205571367379], 
         ArrowBox[{329, 151}, 0.08044205571367379], 
         ArrowBox[{329, 291}, 0.08044205571367379], 
         ArrowBox[{329, 296}, 0.08044205571367379], 
         ArrowBox[{329, 298}, 0.08044205571367379], 
         ArrowBox[{329, 300}, 0.08044205571367379], 
         ArrowBox[{329, 307}, 0.08044205571367379], 
         ArrowBox[{329, 321}, 0.08044205571367379], 
         ArrowBox[{329, 323}, 0.08044205571367379], 
         ArrowBox[{330, 311}, 0.08044205571367379], 
         ArrowBox[{331, 311}, 0.08044205571367379], 
         ArrowBox[{331, 325}, 0.08044205571367379], 
         ArrowBox[{332, 62}, 0.08044205571367379], 
         ArrowBox[{332, 151}, 0.08044205571367379], 
         ArrowBox[{332, 296}, 0.08044205571367379], 
         ArrowBox[{332, 307}, 0.08044205571367379], 
         ArrowBox[{332, 321}, 0.08044205571367379], 
         ArrowBox[{332, 327}, 0.08044205571367379], 
         ArrowBox[{333, 144}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          333, {4.586993348195466, 12.108019830229676`}, 291}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          333, {4.454665628265414, 12.236239400992384`}, 291}], 
          0.08044205571367379], ArrowBox[{333, 294}, 0.08044205571367379], 
         ArrowBox[{333, 313}, 0.08044205571367379], 
         ArrowBox[{333, 321}, 0.08044205571367379], 
         ArrowBox[{334, 132}, 0.08044205571367379], 
         ArrowBox[{334, 144}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          334, {4.621897479477484, 11.800399601512185`}, 291}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          334, {4.665347619630273, 12.009387903287271`}, 291}], 
          0.08044205571367379], ArrowBox[{334, 294}, 0.08044205571367379], 
         ArrowBox[{334, 321}, 0.08044205571367379], 
         ArrowBox[{335, 144}, 0.08044205571367379], 
         ArrowBox[{335, 147}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          335, {4.7076855940623386`, 11.901450144365}, 291}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          335, {4.674409196425128, 12.141632754381261`}, 291}], 
          0.08044205571367379], ArrowBox[{335, 294}, 0.08044205571367379], 
         ArrowBox[{335, 321}, 0.08044205571367379], 
         ArrowBox[{336, 144}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          336, {4.9480114560247985`, 12.012682193040334`}, 291}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          336, {4.801797637698063, 12.373799232604268`}, 291}], 
          0.08044205571367379], ArrowBox[{336, 294}, 0.08044205571367379], 
         ArrowBox[{337, 132}, 0.08044205571367379], 
         ArrowBox[{337, 144}, 0.08044205571367379], 
         ArrowBox[{337, 291}, 0.08044205571367379], 
         ArrowBox[{337, 294}, 0.08044205571367379], 
         ArrowBox[{337, 321}, 0.08044205571367379], 
         ArrowBox[{338, 144}, 0.08044205571367379], 
         ArrowBox[{338, 147}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          338, {4.660304592048464, 11.937869031568079`}, 291}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          338, {4.614660655114153, 12.142818717284841`}, 291}], 
          0.08044205571367379], ArrowBox[{338, 294}, 0.08044205571367379], 
         ArrowBox[{338, 321}, 0.08044205571367379], 
         ArrowBox[{339, 44}, 0.08044205571367379], 
         ArrowBox[{339, 62}, 0.08044205571367379], 
         ArrowBox[{339, 143}, 0.08044205571367379], 
         ArrowBox[{339, 151}, 0.08044205571367379], 
         ArrowBox[{339, 161}, 0.08044205571367379], 
         ArrowBox[{339, 167}, 0.08044205571367379], 
         ArrowBox[{339, 296}, 0.08044205571367379], 
         ArrowBox[{339, 297}, 0.08044205571367379], 
         ArrowBox[{339, 298}, 0.08044205571367379], 
         ArrowBox[{339, 300}, 0.08044205571367379], 
         ArrowBox[{339, 302}, 0.08044205571367379], 
         ArrowBox[{339, 304}, 0.08044205571367379], 
         ArrowBox[{339, 321}, 0.08044205571367379], 
         ArrowBox[{340, 151}, 0.08044205571367379], 
         ArrowBox[{340, 296}, 0.08044205571367379], 
         ArrowBox[{340, 297}, 0.08044205571367379], 
         ArrowBox[{340, 298}, 0.08044205571367379], 
         ArrowBox[{340, 300}, 0.08044205571367379], 
         ArrowBox[{340, 302}, 0.08044205571367379], 
         ArrowBox[{340, 304}, 0.08044205571367379], 
         ArrowBox[{340, 306}, 0.08044205571367379], 
         ArrowBox[{340, 322}, 0.08044205571367379], 
         ArrowBox[{341, 298}, 0.08044205571367379], 
         ArrowBox[{341, 306}, 0.08044205571367379], 
         ArrowBox[{341, 323}, 0.08044205571367379], 
         ArrowBox[{342, 151}, 0.08044205571367379], 
         ArrowBox[{342, 296}, 0.08044205571367379], 
         ArrowBox[{342, 298}, 0.08044205571367379], 
         ArrowBox[{342, 303}, 0.08044205571367379], 
         ArrowBox[{342, 304}, 0.08044205571367379], 
         ArrowBox[{342, 306}, 0.08044205571367379], 
         ArrowBox[{342, 324}, 0.08044205571367379], 
         ArrowBox[{343, 151}, 0.08044205571367379], 
         ArrowBox[{343, 296}, 0.08044205571367379], 
         ArrowBox[{343, 297}, 0.08044205571367379], 
         ArrowBox[{343, 298}, 0.08044205571367379], 
         ArrowBox[{343, 303}, 0.08044205571367379], 
         ArrowBox[{343, 304}, 0.08044205571367379], 
         ArrowBox[{343, 306}, 0.08044205571367379], 
         ArrowBox[{343, 325}, 0.08044205571367379], 
         ArrowBox[{344, 151}, 0.08044205571367379], 
         ArrowBox[{344, 296}, 0.08044205571367379], 
         ArrowBox[{344, 298}, 0.08044205571367379], 
         ArrowBox[{344, 306}, 0.08044205571367379], 
         ArrowBox[{344, 326}, 0.08044205571367379], 
         ArrowBox[{345, 63}, 0.08044205571367379], 
         ArrowBox[{345, 67}, 0.08044205571367379], 
         ArrowBox[{345, 151}, 0.08044205571367379], 
         ArrowBox[{345, 167}, 0.08044205571367379], 
         ArrowBox[{345, 296}, 0.08044205571367379], 
         ArrowBox[{345, 298}, 0.08044205571367379], 
         ArrowBox[{345, 300}, 0.08044205571367379], 
         ArrowBox[{345, 302}, 0.08044205571367379], 
         ArrowBox[{345, 305}, 0.08044205571367379], 
         ArrowBox[{345, 306}, 0.08044205571367379], 
         ArrowBox[{345, 307}, 0.08044205571367379], 
         ArrowBox[{345, 321}, 0.08044205571367379], 
         ArrowBox[{345, 339}, 0.08044205571367379], 
         ArrowBox[{346, 151}, 0.08044205571367379], 
         ArrowBox[{346, 296}, 0.08044205571367379], 
         ArrowBox[{346, 298}, 0.08044205571367379], 
         ArrowBox[{346, 300}, 0.08044205571367379], 
         ArrowBox[{346, 302}, 0.08044205571367379], 
         ArrowBox[{346, 305}, 0.08044205571367379], 
         ArrowBox[{346, 306}, 0.08044205571367379], 
         ArrowBox[{346, 307}, 0.08044205571367379], 
         ArrowBox[{346, 308}, 0.08044205571367379], 
         ArrowBox[{346, 321}, 0.08044205571367379], 
         ArrowBox[{346, 322}, 0.08044205571367379], 
         ArrowBox[{347, 151}, 0.08044205571367379], 
         ArrowBox[{347, 296}, 0.08044205571367379], 
         ArrowBox[{347, 297}, 0.08044205571367379], 
         ArrowBox[{347, 298}, 0.08044205571367379], 
         ArrowBox[{347, 300}, 0.08044205571367379], 
         ArrowBox[{347, 307}, 0.08044205571367379], 
         ArrowBox[{347, 308}, 0.08044205571367379], 
         ArrowBox[{347, 321}, 0.08044205571367379], 
         ArrowBox[{347, 323}, 0.08044205571367379], 
         ArrowBox[{348, 151}, 0.08044205571367379], 
         ArrowBox[{348, 296}, 0.08044205571367379], 
         ArrowBox[{348, 298}, 0.08044205571367379], 
         ArrowBox[{348, 303}, 0.08044205571367379], 
         ArrowBox[{348, 305}, 0.08044205571367379], 
         ArrowBox[{348, 307}, 0.08044205571367379], 
         ArrowBox[{348, 321}, 0.08044205571367379], 
         ArrowBox[{348, 324}, 0.08044205571367379], 
         ArrowBox[{349, 298}, 0.08044205571367379], 
         ArrowBox[{349, 303}, 0.08044205571367379], 
         ArrowBox[{349, 305}, 0.08044205571367379], 
         ArrowBox[{349, 307}, 0.08044205571367379], 
         ArrowBox[{349, 321}, 0.08044205571367379], 
         ArrowBox[{349, 325}, 0.08044205571367379], 
         ArrowBox[{350, 151}, 0.08044205571367379], 
         ArrowBox[{350, 296}, 0.08044205571367379], 
         ArrowBox[{350, 307}, 0.08044205571367379], 
         ArrowBox[{350, 321}, 0.08044205571367379], 
         ArrowBox[{350, 326}, 0.08044205571367379], 
         ArrowBox[{351, 136}, 0.08044205571367379], 
         ArrowBox[{351, 141}, 0.08044205571367379], 
         ArrowBox[{351, 144}, 0.08044205571367379], 
         ArrowBox[{351, 162}, 0.08044205571367379], 
         ArrowBox[{351, 296}, 0.08044205571367379], 
         ArrowBox[{351, 297}, 0.08044205571367379], 
         ArrowBox[{351, 298}, 0.08044205571367379], 
         ArrowBox[{351, 299}, 0.08044205571367379], 
         ArrowBox[{351, 321}, 0.08044205571367379], 
         ArrowBox[{352, 136}, 0.08044205571367379], 
         ArrowBox[{352, 141}, 0.08044205571367379], 
         ArrowBox[{352, 144}, 0.08044205571367379], 
         ArrowBox[{352, 296}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          352, {3.8580261464536916`, 11.99897105371304}, 308}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          352, {3.9676324831768386`, 12.207765635282538`}, 308}], 
          0.08044205571367379], ArrowBox[{352, 322}, 0.08044205571367379], 
         ArrowBox[{352, 323}, 0.08044205571367379], 
         ArrowBox[{353, 136}, 0.08044205571367379], 
         ArrowBox[{353, 141}, 0.08044205571367379], 
         ArrowBox[{353, 143}, 0.08044205571367379], 
         ArrowBox[{353, 170}, 0.08044205571367379], 
         ArrowBox[{353, 296}, 0.08044205571367379], 
         ArrowBox[{353, 308}, 0.08044205571367379], 
         ArrowBox[{353, 324}, 0.08044205571367379], 
         ArrowBox[{354, 325}, 0.08044205571367379], 
         ArrowBox[{355, 326}, 0.08044205571367379], 
         ArrowBox[{356, 151}, 0.08044205571367379], 
         ArrowBox[{356, 296}, 0.08044205571367379], 
         ArrowBox[{356, 305}, 0.08044205571367379], 
         ArrowBox[{356, 307}, 0.08044205571367379], 
         ArrowBox[{356, 321}, 0.08044205571367379], 
         ArrowBox[{356, 339}, 0.08044205571367379], 
         ArrowBox[{356, 340}, 0.08044205571367379], 
         ArrowBox[{356, 342}, 0.08044205571367379], 
         ArrowBox[{356, 343}, 0.08044205571367379], 
         ArrowBox[{357, 151}, 0.08044205571367379], 
         ArrowBox[{357, 296}, 0.08044205571367379], 
         ArrowBox[{357, 307}, 0.08044205571367379], 
         ArrowBox[{357, 321}, 0.08044205571367379], 
         ArrowBox[{357, 341}, 0.08044205571367379], 
         ArrowBox[{357, 344}, 0.08044205571367379], 
         ArrowBox[{357, 345}, 0.08044205571367379], 
         ArrowBox[{357, 346}, 0.08044205571367379], 
         ArrowBox[{357, 347}, 0.08044205571367379], 
         ArrowBox[{357, 348}, 0.08044205571367379], 
         ArrowBox[{357, 349}, 0.08044205571367379], 
         ArrowBox[{357, 350}, 0.08044205571367379], 
         ArrowBox[{358, 65}, 0.08044205571367379], 
         ArrowBox[{358, 291}, 0.08044205571367379], 
         ArrowBox[{358, 296}, 0.08044205571367379], 
         ArrowBox[{358, 298}, 0.08044205571367379], 
         ArrowBox[{358, 300}, 0.08044205571367379], 
         ArrowBox[{358, 301}, 0.08044205571367379], 
         ArrowBox[{359, 65}, 0.08044205571367379], 
         ArrowBox[{359, 301}, 0.08044205571367379], 
         ArrowBox[{360, 65}, 0.08044205571367379], 
         ArrowBox[{360, 151}, 0.08044205571367379], 
         ArrowBox[{360, 291}, 0.08044205571367379], 
         ArrowBox[{360, 296}, 0.08044205571367379], 
         ArrowBox[{360, 298}, 0.08044205571367379], 
         ArrowBox[{360, 300}, 0.08044205571367379], 
         ArrowBox[{360, 305}, 0.08044205571367379], 
         ArrowBox[{360, 307}, 0.08044205571367379], 
         ArrowBox[{360, 308}, 0.08044205571367379], 
         ArrowBox[{360, 313}, 0.08044205571367379], 
         ArrowBox[{360, 358}, 0.08044205571367379], 
         ArrowBox[{361, 65}, 0.08044205571367379], 
         ArrowBox[{361, 301}, 0.08044205571367379], 
         ArrowBox[{361, 318}, 0.08044205571367379], 
         ArrowBox[{362, 65}, 0.08044205571367379], 
         ArrowBox[{362, 301}, 0.08044205571367379], 
         ArrowBox[{363, 65}, 0.08044205571367379], 
         ArrowBox[{363, 151}, 0.08044205571367379], 
         ArrowBox[{363, 296}, 0.08044205571367379], 
         ArrowBox[{363, 305}, 0.08044205571367379], 
         ArrowBox[{363, 307}, 0.08044205571367379], 
         ArrowBox[{363, 320}, 0.08044205571367379], 
         ArrowBox[{363, 358}, 0.08044205571367379], 
         ArrowBox[{364, 65}, 0.08044205571367379], 
         ArrowBox[{364, 306}, 0.08044205571367379], 
         ArrowBox[{364, 311}, 0.08044205571367379], 
         ArrowBox[{364, 358}, 0.08044205571367379], 
         ArrowBox[{365, 65}, 0.08044205571367379], 
         ArrowBox[{365, 300}, 0.08044205571367379], 
         ArrowBox[{365, 308}, 0.08044205571367379], 
         ArrowBox[{365, 311}, 0.08044205571367379], 
         ArrowBox[{365, 359}, 0.08044205571367379], 
         ArrowBox[{366, 65}, 0.08044205571367379], 
         ArrowBox[{366, 151}, 0.08044205571367379], 
         ArrowBox[{366, 291}, 0.08044205571367379], 
         ArrowBox[{366, 296}, 0.08044205571367379], 
         ArrowBox[{366, 298}, 0.08044205571367379], 
         ArrowBox[{366, 300}, 0.08044205571367379], 
         ArrowBox[{366, 307}, 0.08044205571367379], 
         ArrowBox[{366, 308}, 0.08044205571367379], 
         ArrowBox[{366, 358}, 0.08044205571367379], 
         ArrowBox[{366, 360}, 0.08044205571367379], 
         ArrowBox[{366, 364}, 0.08044205571367379], 
         ArrowBox[{367, 311}, 0.08044205571367379], 
         ArrowBox[{367, 361}, 0.08044205571367379], 
         ArrowBox[{368, 311}, 0.08044205571367379], 
         ArrowBox[{368, 362}, 0.08044205571367379], 
         ArrowBox[{369, 65}, 0.08044205571367379], 
         ArrowBox[{369, 151}, 0.08044205571367379], 
         ArrowBox[{369, 296}, 0.08044205571367379], 
         ArrowBox[{369, 307}, 0.08044205571367379], 
         ArrowBox[{369, 358}, 0.08044205571367379], 
         ArrowBox[{369, 363}, 0.08044205571367379], 
         ArrowBox[{369, 364}, 0.08044205571367379], 
         ArrowBox[{370, 144}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          370, {4.801139449883334, 12.099505615794783`}, 291}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          370, {4.632061676866725, 12.356496154052683`}, 291}], 
          0.08044205571367379], ArrowBox[{370, 294}, 0.08044205571367379], 
         ArrowBox[{370, 358}, 0.08044205571367379], 
         ArrowBox[{371, 144}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          371, {4.795375122161214, 12.168650619373627`}, 291}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          371, {4.586380795054323, 12.408721780241244`}, 291}], 
          0.08044205571367379], ArrowBox[{371, 294}, 0.08044205571367379], 
         ArrowBox[{371, 358}, 0.08044205571367379], 
         ArrowBox[{372, 144}, 0.08044205571367379], 
         ArrowBox[{372, 147}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          372, {4.665897490388855, 12.00518774762137}, 291}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          372, {4.579203953276978, 12.200315781016641`}, 291}], 
          0.08044205571367379], ArrowBox[{372, 294}, 0.08044205571367379], 
         ArrowBox[{372, 358}, 0.08044205571367379], 
         ArrowBox[{373, 144}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          373, {4.746143922441551, 12.140667230685503`}, 291}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          373, {4.563369951533348, 12.356979320417304`}, 291}], 
          0.08044205571367379], ArrowBox[{373, 294}, 0.08044205571367379], 
         ArrowBox[{373, 358}, 0.08044205571367379], 
         ArrowBox[{374, 144}, 0.08044205571367379], 
         ArrowBox[{374, 291}, 0.08044205571367379], 
         ArrowBox[{374, 294}, 0.08044205571367379], 
         ArrowBox[{374, 358}, 0.08044205571367379], 
         ArrowBox[{375, 144}, 0.08044205571367379], 
         ArrowBox[{375, 147}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          375, {4.714905689094037, 11.971462619479937`}, 291}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          375, {4.638663132062217, 12.202263566073789`}, 291}], 
          0.08044205571367379], ArrowBox[{375, 294}, 0.08044205571367379], 
         ArrowBox[{375, 358}, 0.08044205571367379], 
         ArrowBox[{376, 136}, 0.08044205571367379], 
         ArrowBox[{376, 151}, 0.08044205571367379], 
         ArrowBox[{376, 167}, 0.08044205571367379], 
         ArrowBox[{376, 176}, 0.08044205571367379], 
         ArrowBox[{376, 296}, 0.08044205571367379], 
         ArrowBox[{376, 297}, 0.08044205571367379], 
         ArrowBox[{376, 298}, 0.08044205571367379], 
         ArrowBox[{376, 300}, 0.08044205571367379], 
         ArrowBox[{376, 302}, 0.08044205571367379], 
         ArrowBox[{376, 304}, 0.08044205571367379], 
         ArrowBox[{376, 306}, 0.08044205571367379], 
         ArrowBox[{376, 339}, 0.08044205571367379], 
         ArrowBox[{376, 358}, 0.08044205571367379], 
         ArrowBox[{377, 136}, 0.08044205571367379], 
         ArrowBox[{377, 151}, 0.08044205571367379], 
         ArrowBox[{377, 167}, 0.08044205571367379], 
         ArrowBox[{377, 176}, 0.08044205571367379], 
         ArrowBox[{377, 296}, 0.08044205571367379], 
         ArrowBox[{377, 298}, 0.08044205571367379], 
         ArrowBox[{377, 300}, 0.08044205571367379], 
         ArrowBox[{377, 302}, 0.08044205571367379], 
         ArrowBox[{377, 304}, 0.08044205571367379], 
         ArrowBox[{377, 306}, 0.08044205571367379], 
         ArrowBox[{377, 358}, 0.08044205571367379], 
         ArrowBox[{377, 359}, 0.08044205571367379], 
         ArrowBox[{378, 151}, 0.08044205571367379], 
         ArrowBox[{378, 161}, 0.08044205571367379], 
         ArrowBox[{378, 167}, 0.08044205571367379], 
         ArrowBox[{378, 176}, 0.08044205571367379], 
         ArrowBox[{378, 296}, 0.08044205571367379], 
         ArrowBox[{378, 298}, 0.08044205571367379], 
         ArrowBox[{378, 300}, 0.08044205571367379], 
         ArrowBox[{378, 302}, 0.08044205571367379], 
         ArrowBox[{378, 306}, 0.08044205571367379], 
         ArrowBox[{378, 360}, 0.08044205571367379], 
         ArrowBox[{379, 136}, 0.08044205571367379], 
         ArrowBox[{379, 151}, 0.08044205571367379], 
         ArrowBox[{379, 167}, 0.08044205571367379], 
         ArrowBox[{379, 176}, 0.08044205571367379], 
         ArrowBox[{379, 296}, 0.08044205571367379], 
         ArrowBox[{379, 303}, 0.08044205571367379], 
         ArrowBox[{379, 304}, 0.08044205571367379], 
         ArrowBox[{379, 306}, 0.08044205571367379], 
         ArrowBox[{379, 361}, 0.08044205571367379], 
         ArrowBox[{380, 176}, 0.08044205571367379], 
         ArrowBox[{380, 303}, 0.08044205571367379], 
         ArrowBox[{380, 304}, 0.08044205571367379], 
         ArrowBox[{380, 306}, 0.08044205571367379], 
         ArrowBox[{380, 362}, 0.08044205571367379], 
         ArrowBox[{381, 151}, 0.08044205571367379], 
         ArrowBox[{381, 176}, 0.08044205571367379], 
         ArrowBox[{381, 296}, 0.08044205571367379], 
         ArrowBox[{381, 303}, 0.08044205571367379], 
         ArrowBox[{381, 306}, 0.08044205571367379], 
         ArrowBox[{381, 363}, 0.08044205571367379], 
         ArrowBox[{382, 65}, 0.08044205571367379], 
         ArrowBox[{382, 151}, 0.08044205571367379], 
         ArrowBox[{382, 167}, 0.08044205571367379], 
         ArrowBox[{382, 296}, 0.08044205571367379], 
         ArrowBox[{382, 302}, 0.08044205571367379], 
         ArrowBox[{382, 305}, 0.08044205571367379], 
         ArrowBox[{382, 307}, 0.08044205571367379], 
         ArrowBox[{382, 358}, 0.08044205571367379], 
         ArrowBox[{383, 65}, 0.08044205571367379], 
         ArrowBox[{383, 136}, 0.08044205571367379], 
         ArrowBox[{383, 151}, 0.08044205571367379], 
         ArrowBox[{383, 167}, 0.08044205571367379], 
         ArrowBox[{383, 296}, 0.08044205571367379], 
         ArrowBox[{383, 300}, 0.08044205571367379], 
         ArrowBox[{383, 302}, 0.08044205571367379], 
         ArrowBox[{383, 305}, 0.08044205571367379], 
         ArrowBox[{383, 307}, 0.08044205571367379], 
         ArrowBox[{383, 308}, 0.08044205571367379], 
         ArrowBox[{383, 358}, 0.08044205571367379], 
         ArrowBox[{383, 359}, 0.08044205571367379], 
         ArrowBox[{384, 65}, 0.08044205571367379], 
         ArrowBox[{384, 136}, 0.08044205571367379], 
         ArrowBox[{384, 151}, 0.08044205571367379], 
         ArrowBox[{384, 296}, 0.08044205571367379], 
         ArrowBox[{384, 298}, 0.08044205571367379], 
         ArrowBox[{384, 300}, 0.08044205571367379], 
         ArrowBox[{384, 302}, 0.08044205571367379], 
         ArrowBox[{384, 307}, 0.08044205571367379], 
         ArrowBox[{384, 308}, 0.08044205571367379], 
         ArrowBox[{384, 358}, 0.08044205571367379], 
         ArrowBox[{384, 360}, 0.08044205571367379], 
         ArrowBox[{385, 65}, 0.08044205571367379], 
         ArrowBox[{385, 136}, 0.08044205571367379], 
         ArrowBox[{385, 151}, 0.08044205571367379], 
         ArrowBox[{385, 167}, 0.08044205571367379], 
         ArrowBox[{385, 296}, 0.08044205571367379], 
         ArrowBox[{385, 303}, 0.08044205571367379], 
         ArrowBox[{385, 305}, 0.08044205571367379], 
         ArrowBox[{385, 307}, 0.08044205571367379], 
         ArrowBox[{385, 358}, 0.08044205571367379], 
         ArrowBox[{385, 361}, 0.08044205571367379], 
         ArrowBox[{386, 65}, 0.08044205571367379], 
         ArrowBox[{386, 151}, 0.08044205571367379], 
         ArrowBox[{386, 296}, 0.08044205571367379], 
         ArrowBox[{386, 303}, 0.08044205571367379], 
         ArrowBox[{386, 305}, 0.08044205571367379], 
         ArrowBox[{386, 307}, 0.08044205571367379], 
         ArrowBox[{386, 358}, 0.08044205571367379], 
         ArrowBox[{386, 362}, 0.08044205571367379], 
         ArrowBox[{387, 65}, 0.08044205571367379], 
         ArrowBox[{387, 151}, 0.08044205571367379], 
         ArrowBox[{387, 296}, 0.08044205571367379], 
         ArrowBox[{387, 303}, 0.08044205571367379], 
         ArrowBox[{387, 307}, 0.08044205571367379], 
         ArrowBox[{387, 358}, 0.08044205571367379], 
         ArrowBox[{387, 363}, 0.08044205571367379], 
         ArrowBox[{388, 137}, 0.08044205571367379], 
         ArrowBox[{388, 141}, 0.08044205571367379], 
         ArrowBox[{388, 162}, 0.08044205571367379], 
         ArrowBox[{388, 296}, 0.08044205571367379], 
         ArrowBox[{388, 297}, 0.08044205571367379], 
         ArrowBox[{388, 298}, 0.08044205571367379], 
         ArrowBox[{388, 299}, 0.08044205571367379], 
         ArrowBox[{388, 358}, 0.08044205571367379], 
         ArrowBox[{389, 137}, 0.08044205571367379], 
         ArrowBox[{389, 141}, 0.08044205571367379], 
         ArrowBox[{389, 162}, 0.08044205571367379], 
         ArrowBox[{389, 296}, 0.08044205571367379], 
         ArrowBox[{389, 298}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          389, {3.4917313771435823`, 12.012005536959467`}, 308}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          389, {3.665105865826863, 12.0008371414197}, 308}], 
          0.08044205571367379], ArrowBox[{389, 359}, 0.08044205571367379], 
         ArrowBox[{389, 360}, 0.08044205571367379], 
         ArrowBox[{390, 137}, 0.08044205571367379], 
         ArrowBox[{390, 141}, 0.08044205571367379], 
         ArrowBox[{390, 143}, 0.08044205571367379], 
         ArrowBox[{390, 172}, 0.08044205571367379], 
         ArrowBox[{390, 296}, 0.08044205571367379], 
         ArrowBox[{390, 298}, 0.08044205571367379], 
         ArrowBox[{390, 361}, 0.08044205571367379], 
         ArrowBox[{391, 362}, 0.08044205571367379], 
         ArrowBox[{392, 363}, 0.08044205571367379], 
         ArrowBox[{393, 298}, 0.08044205571367379], 
         ArrowBox[{393, 305}, 0.08044205571367379], 
         ArrowBox[{393, 307}, 0.08044205571367379], 
         ArrowBox[{393, 358}, 0.08044205571367379], 
         ArrowBox[{393, 376}, 0.08044205571367379], 
         ArrowBox[{393, 379}, 0.08044205571367379], 
         ArrowBox[{394, 298}, 0.08044205571367379], 
         ArrowBox[{394, 358}, 0.08044205571367379], 
         ArrowBox[{394, 377}, 0.08044205571367379], 
         ArrowBox[{394, 380}, 0.08044205571367379], 
         ArrowBox[{395, 151}, 0.08044205571367379], 
         ArrowBox[{395, 296}, 0.08044205571367379], 
         ArrowBox[{395, 307}, 0.08044205571367379], 
         ArrowBox[{395, 358}, 0.08044205571367379], 
         ArrowBox[{395, 378}, 0.08044205571367379], 
         ArrowBox[{395, 381}, 0.08044205571367379], 
         ArrowBox[{396, 297}, 0.08044205571367379], 
         ArrowBox[{396, 298}, 0.08044205571367379], 
         ArrowBox[{396, 300}, 0.08044205571367379], 
         ArrowBox[{396, 345}, 0.08044205571367379], 
         ArrowBox[{396, 358}, 0.08044205571367379], 
         ArrowBox[{396, 382}, 0.08044205571367379], 
         ArrowBox[{397, 136}, 0.08044205571367379], 
         ArrowBox[{397, 137}, 0.08044205571367379], 
         ArrowBox[{397, 139}, 0.08044205571367379], 
         ArrowBox[{397, 142}, 0.08044205571367379], 
         ArrowBox[{397, 166}, 0.08044205571367379], 
         ArrowBox[{397, 172}, 0.08044205571367379], 
         ArrowBox[{397, 296}, 0.08044205571367379], 
         ArrowBox[{397, 297}, 0.08044205571367379], 
         ArrowBox[{397, 299}, 0.08044205571367379], 
         ArrowBox[{397, 300}, 0.08044205571367379], 
         ArrowBox[{397, 305}, 0.08044205571367379], 
         ArrowBox[{397, 321}, 0.08044205571367379], 
         ArrowBox[{397, 358}, 0.08044205571367379], 
         ArrowBox[{398, 136}, 0.08044205571367379], 
         ArrowBox[{398, 139}, 0.08044205571367379], 
         ArrowBox[{398, 141}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          398, {4.332296747119669, 11.723750712524495`}, 144}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          398, {4.364062230625565, 11.532238281815781`}, 144}], 
          0.08044205571367379], ArrowBox[{398, 166}, 0.08044205571367379], 
         ArrowBox[{398, 296}, 0.08044205571367379], 
         ArrowBox[{398, 297}, 0.08044205571367379], 
         ArrowBox[{398, 299}, 0.08044205571367379], 
         ArrowBox[{398, 300}, 0.08044205571367379], 
         ArrowBox[{398, 305}, 0.08044205571367379], 
         ArrowBox[{398, 321}, 0.08044205571367379], 
         ArrowBox[{398, 358}, 0.08044205571367379], 
         ArrowBox[{399, 144}, 0.08044205571367379], 
         ArrowBox[{399, 151}, 0.08044205571367379], 
         ArrowBox[{399, 296}, 0.08044205571367379], 
         ArrowBox[{399, 297}, 0.08044205571367379], 
         ArrowBox[{399, 397}, 0.08044205571367379], 
         ArrowBox[{400, 305}, 0.08044205571367379], 
         ArrowBox[{401, 39}, 0.08044205571367379], 
         ArrowBox[{402, 401}, 0.08044205571367379], 
         ArrowBox[{403, 39}, 0.08044205571367379], 
         ArrowBox[{404, 8}, 0.08044205571367379], 
         ArrowBox[{404, 9}, 0.08044205571367379], 
         ArrowBox[{404, 15}, 0.08044205571367379], 
         ArrowBox[{404, 24}, 0.08044205571367379], 
         ArrowBox[{404, 35}, 0.08044205571367379], 
         ArrowBox[{405, 403}, 0.08044205571367379], 
         ArrowBox[{405, 404}, 0.08044205571367379], 
         ArrowBox[{406, 8}, 0.08044205571367379], 
         ArrowBox[{406, 9}, 0.08044205571367379], 
         ArrowBox[{406, 15}, 0.08044205571367379], 
         ArrowBox[{406, 18}, 0.08044205571367379], 
         ArrowBox[{406, 37}, 0.08044205571367379], 
         ArrowBox[{406, 402}, 0.08044205571367379], 
         ArrowBox[{406, 405}, 0.08044205571367379], 
         ArrowBox[{407, 403}, 0.08044205571367379], 
         ArrowBox[{408, 8}, 0.08044205571367379], 
         ArrowBox[{408, 9}, 0.08044205571367379], 
         ArrowBox[{408, 15}, 0.08044205571367379], 
         ArrowBox[{408, 18}, 0.08044205571367379], 
         ArrowBox[{408, 38}, 0.08044205571367379], 
         ArrowBox[{408, 404}, 0.08044205571367379], 
         ArrowBox[{408, 407}, 0.08044205571367379], 
         ArrowBox[{409, 18}, 0.08044205571367379], 
         ArrowBox[{409, 404}, 0.08044205571367379], 
         ArrowBox[{409, 406}, 0.08044205571367379], 
         ArrowBox[{409, 408}, 0.08044205571367379], 
         ArrowBox[{410, 8}, 0.08044205571367379], 
         ArrowBox[{410, 15}, 0.08044205571367379], 
         ArrowBox[{410, 43}, 0.08044205571367379], 
         ArrowBox[{410, 409}, 0.08044205571367379], 
         ArrowBox[{411, 18}, 0.08044205571367379], 
         ArrowBox[{411, 19}, 0.08044205571367379], 
         ArrowBox[{411, 41}, 0.08044205571367379], 
         ArrowBox[{411, 404}, 0.08044205571367379], 
         ArrowBox[{411, 408}, 0.08044205571367379], 
         ArrowBox[{412, 41}, 0.08044205571367379], 
         ArrowBox[{412, 408}, 0.08044205571367379], 
         ArrowBox[{412, 411}, 0.08044205571367379], 
         ArrowBox[{413, 403}, 0.08044205571367379], 
         ArrowBox[{414, 26}, 0.08044205571367379], 
         ArrowBox[{414, 403}, 0.08044205571367379], 
         ArrowBox[{415, 38}, 0.08044205571367379], 
         ArrowBox[{415, 41}, 0.08044205571367379], 
         ArrowBox[{415, 404}, 0.08044205571367379], 
         ArrowBox[{415, 409}, 0.08044205571367379], 
         ArrowBox[{415, 411}, 0.08044205571367379], 
         ArrowBox[{415, 414}, 0.08044205571367379], 
         ArrowBox[{416, 401}, 0.08044205571367379], 
         ArrowBox[{417, 136}, 0.08044205571367379], 
         ArrowBox[{417, 152}, 0.08044205571367379], 
         ArrowBox[{417, 416}, 0.08044205571367379], 
         ArrowBox[{418, 18}, 0.08044205571367379], 
         ArrowBox[{418, 37}, 0.08044205571367379], 
         ArrowBox[{418, 408}, 0.08044205571367379], 
         ArrowBox[{419, 18}, 0.08044205571367379], 
         ArrowBox[{419, 413}, 0.08044205571367379], 
         ArrowBox[{420, 8}, 0.08044205571367379], 
         ArrowBox[{420, 9}, 0.08044205571367379], 
         ArrowBox[{420, 29}, 0.08044205571367379], 
         ArrowBox[{420, 32}, 0.08044205571367379], 
         ArrowBox[{420, 34}, 0.08044205571367379], 
         ArrowBox[{421, 42}, 0.08044205571367379], 
         ArrowBox[{421, 420}, 0.08044205571367379], 
         ArrowBox[{422, 1}, 0.08044205571367379], 
         ArrowBox[{422, 8}, 0.08044205571367379], 
         ArrowBox[{422, 9}, 0.08044205571367379], 
         ArrowBox[{422, 31}, 0.08044205571367379], 
         ArrowBox[{422, 32}, 0.08044205571367379], 
         ArrowBox[{422, 33}, 0.08044205571367379], 
         ArrowBox[{423, 8}, 0.08044205571367379], 
         ArrowBox[{423, 9}, 0.08044205571367379], 
         ArrowBox[{423, 15}, 0.08044205571367379], 
         ArrowBox[{423, 34}, 0.08044205571367379], 
         ArrowBox[{423, 38}, 0.08044205571367379], 
         ArrowBox[{423, 57}, 0.08044205571367379], 
         ArrowBox[{423, 73}, 0.08044205571367379], 
         ArrowBox[{423, 103}, 0.08044205571367379], 
         ArrowBox[{423, 110}, 0.08044205571367379], 
         ArrowBox[{423, 114}, 0.08044205571367379], 
         ArrowBox[{423, 141}, 0.08044205571367379], 
         ArrowBox[{423, 152}, 0.08044205571367379], 
         ArrowBox[{423, 154}, 0.08044205571367379], 
         ArrowBox[{423, 412}, 0.08044205571367379], 
         ArrowBox[{423, 420}, 0.08044205571367379], 
         ArrowBox[{423, 421}, 0.08044205571367379], 
         ArrowBox[{423, 422}, 0.08044205571367379], 
         ArrowBox[{424, 9}, 0.08044205571367379], 
         ArrowBox[{424, 44}, 0.08044205571367379], 
         ArrowBox[{424, 410}, 0.08044205571367379], 
         ArrowBox[{424, 416}, 0.08044205571367379], 
         ArrowBox[{425, 8}, 0.08044205571367379], 
         ArrowBox[{425, 41}, 0.08044205571367379], 
         ArrowBox[{425, 424}, 0.08044205571367379], 
         ArrowBox[{426, 9}, 0.08044205571367379], 
         ArrowBox[{426, 15}, 0.08044205571367379], 
         ArrowBox[{426, 32}, 0.08044205571367379], 
         ArrowBox[{426, 411}, 0.08044205571367379], 
         ArrowBox[{426, 412}, 0.08044205571367379], 
         ArrowBox[{427, 147}, 0.08044205571367379], 
         ArrowBox[{427, 162}, 0.08044205571367379], 
         ArrowBox[{427, 426}, 0.08044205571367379], 
         ArrowBox[{428, 44}, 0.08044205571367379], 
         ArrowBox[{429, 9}, 0.08044205571367379], 
         ArrowBox[{429, 15}, 0.08044205571367379], 
         ArrowBox[{429, 44}, 0.08044205571367379], 
         ArrowBox[{429, 46}, 0.08044205571367379], 
         ArrowBox[{430, 429}, 0.08044205571367379], 
         ArrowBox[{431, 8}, 0.08044205571367379], 
         ArrowBox[{431, 32}, 0.08044205571367379], 
         ArrowBox[{431, 41}, 0.08044205571367379], 
         ArrowBox[{431, 45}, 0.08044205571367379], 
         ArrowBox[{431, 132}, 0.08044205571367379], 
         ArrowBox[{431, 134}, 0.08044205571367379], 
         ArrowBox[{431, 136}, 0.08044205571367379], 
         ArrowBox[{431, 411}, 0.08044205571367379], 
         ArrowBox[{431, 424}, 0.08044205571367379], 
         ArrowBox[{431, 425}, 0.08044205571367379], 
         ArrowBox[{431, 429}, 0.08044205571367379], 
         ArrowBox[{431, 430}, 0.08044205571367379], 
         ArrowBox[{432, 41}, 0.08044205571367379], 
         ArrowBox[{432, 55}, 0.08044205571367379], 
         ArrowBox[{432, 425}, 0.08044205571367379], 
         ArrowBox[{432, 431}, 0.08044205571367379], 
         ArrowBox[{433, 8}, 0.08044205571367379], 
         ArrowBox[{433, 41}, 0.08044205571367379], 
         ArrowBox[{433, 151}, 0.08044205571367379], 
         ArrowBox[{433, 424}, 0.08044205571367379], 
         ArrowBox[{433, 432}, 0.08044205571367379], 
         ArrowBox[{434, 8}, 0.08044205571367379], 
         ArrowBox[{434, 41}, 0.08044205571367379], 
         ArrowBox[{434, 132}, 0.08044205571367379], 
         ArrowBox[{434, 134}, 0.08044205571367379], 
         ArrowBox[{434, 151}, 0.08044205571367379], 
         ArrowBox[{434, 296}, 0.08044205571367379], 
         ArrowBox[{434, 425}, 0.08044205571367379], 
         ArrowBox[{434, 429}, 0.08044205571367379], 
         ArrowBox[{434, 430}, 0.08044205571367379], 
         ArrowBox[{434, 431}, 0.08044205571367379], 
         ArrowBox[{434, 432}, 0.08044205571367379], 
         ArrowBox[{435, 8}, 0.08044205571367379], 
         ArrowBox[{435, 9}, 0.08044205571367379], 
         ArrowBox[{435, 15}, 0.08044205571367379], 
         ArrowBox[{435, 19}, 0.08044205571367379], 
         ArrowBox[{435, 35}, 0.08044205571367379], 
         ArrowBox[{435, 41}, 0.08044205571367379], 
         ArrowBox[{435, 57}, 0.08044205571367379], 
         ArrowBox[{435, 58}, 0.08044205571367379], 
         ArrowBox[{435, 408}, 0.08044205571367379], 
         ArrowBox[{435, 411}, 0.08044205571367379], 
         ArrowBox[{436, 8}, 0.08044205571367379], 
         ArrowBox[{436, 154}, 0.08044205571367379], 
         ArrowBox[{436, 431}, 0.08044205571367379], 
         ArrowBox[{436, 435}, 0.08044205571367379], 
         ArrowBox[{437, 433}, 0.08044205571367379], 
         ArrowBox[{438, 9}, 0.08044205571367379], 
         ArrowBox[{438, 22}, 0.08044205571367379], 
         ArrowBox[{438, 24}, 0.08044205571367379], 
         ArrowBox[{438, 35}, 0.08044205571367379], 
         ArrowBox[{438, 38}, 0.08044205571367379], 
         ArrowBox[{438, 43}, 0.08044205571367379], 
         ArrowBox[{438, 409}, 0.08044205571367379], 
         ArrowBox[{439, 44}, 0.08044205571367379], 
         ArrowBox[{439, 428}, 0.08044205571367379], 
         ArrowBox[{439, 431}, 0.08044205571367379], 
         ArrowBox[{440, 42}, 0.08044205571367379], 
         ArrowBox[{440, 99}, 0.08044205571367379], 
         ArrowBox[{440, 103}, 0.08044205571367379], 
         ArrowBox[{440, 154}, 0.08044205571367379], 
         ArrowBox[{440, 156}, 0.08044205571367379], 
         ArrowBox[{440, 170}, 0.08044205571367379], 
         ArrowBox[{441, 89}, 0.08044205571367379], 
         ArrowBox[{441, 115}, 0.08044205571367379], 
         ArrowBox[{441, 136}, 0.08044205571367379], 
         ArrowBox[{441, 141}, 0.08044205571367379], 
         ArrowBox[{441, 286}, 0.08044205571367379], 
         ArrowBox[{441, 440}, 0.08044205571367379], 
         ArrowBox[{442, 9}, 0.08044205571367379], 
         ArrowBox[{442, 38}, 0.08044205571367379], 
         ArrowBox[{442, 44}, 0.08044205571367379], 
         ArrowBox[{442, 152}, 0.08044205571367379], 
         ArrowBox[{442, 410}, 0.08044205571367379], 
         ArrowBox[{442, 439}, 0.08044205571367379], 
         ArrowBox[{443, 137}, 0.08044205571367379], 
         ArrowBox[{443, 141}, 0.08044205571367379], 
         ArrowBox[{443, 172}, 0.08044205571367379], 
         ArrowBox[{443, 411}, 0.08044205571367379], 
         ArrowBox[{443, 417}, 0.08044205571367379], 
         ArrowBox[{443, 428}, 0.08044205571367379], 
         ArrowBox[{443, 432}, 0.08044205571367379], 
         ArrowBox[{443, 439}, 0.08044205571367379], 
         ArrowBox[{443, 442}, 0.08044205571367379], 
         ArrowBox[{444, 136}, 0.08044205571367379], 
         ArrowBox[{444, 141}, 0.08044205571367379], 
         ArrowBox[{444, 286}, 0.08044205571367379], 
         ArrowBox[{444, 441}, 0.08044205571367379], 
         ArrowBox[{444, 442}, 0.08044205571367379], 
         ArrowBox[{444, 443}, 0.08044205571367379], 
         ArrowBox[{445, 143}, 0.08044205571367379], 
         ArrowBox[{445, 147}, 0.08044205571367379], 
         ArrowBox[{445, 444}, 0.08044205571367379], 
         ArrowBox[{446, 44}, 0.08044205571367379], 
         ArrowBox[{446, 444}, 0.08044205571367379], 
         ArrowBox[{447, 137}, 0.08044205571367379], 
         ArrowBox[{447, 170}, 0.08044205571367379], 
         ArrowBox[{447, 424}, 0.08044205571367379], 
         ArrowBox[{447, 428}, 0.08044205571367379], 
         ArrowBox[{447, 433}, 0.08044205571367379], 
         ArrowBox[{447, 446}, 0.08044205571367379], 
         ArrowBox[{448, 44}, 0.08044205571367379], 
         ArrowBox[{448, 136}, 0.08044205571367379], 
         ArrowBox[{448, 434}, 0.08044205571367379], 
         ArrowBox[{448, 446}, 0.08044205571367379], 
         ArrowBox[{449, 41}, 0.08044205571367379], 
         ArrowBox[{449, 115}, 0.08044205571367379], 
         ArrowBox[{449, 116}, 0.08044205571367379], 
         ArrowBox[{449, 286}, 0.08044205571367379], 
         ArrowBox[{449, 428}, 0.08044205571367379], 
         ArrowBox[{449, 432}, 0.08044205571367379], 
         ArrowBox[{449, 441}, 0.08044205571367379], 
         ArrowBox[{449, 445}, 0.08044205571367379], 
         ArrowBox[{449, 446}, 0.08044205571367379], 
         ArrowBox[{450, 115}, 0.08044205571367379], 
         ArrowBox[{450, 136}, 0.08044205571367379], 
         ArrowBox[{450, 141}, 0.08044205571367379], 
         ArrowBox[{450, 286}, 0.08044205571367379], 
         ArrowBox[{450, 440}, 0.08044205571367379], 
         ArrowBox[{450, 441}, 0.08044205571367379], 
         ArrowBox[{450, 445}, 0.08044205571367379], 
         ArrowBox[{450, 449}, 0.08044205571367379], 
         ArrowBox[{451, 115}, 0.08044205571367379], 
         ArrowBox[{451, 137}, 0.08044205571367379], 
         ArrowBox[{451, 141}, 0.08044205571367379], 
         ArrowBox[{451, 147}, 0.08044205571367379], 
         ArrowBox[{451, 155}, 0.08044205571367379], 
         ArrowBox[{451, 156}, 0.08044205571367379], 
         ArrowBox[{451, 286}, 0.08044205571367379], 
         ArrowBox[{451, 447}, 0.08044205571367379], 
         ArrowBox[{451, 449}, 0.08044205571367379], 
         ArrowBox[{452, 450}, 0.08044205571367379], 
         ArrowBox[{453, 8}, 0.08044205571367379], 
         ArrowBox[{453, 449}, 0.08044205571367379], 
         ArrowBox[{453, 450}, 0.08044205571367379], 
         ArrowBox[{453, 452}, 0.08044205571367379], 
         ArrowBox[{454, 132}, 0.08044205571367379], 
         ArrowBox[{454, 134}, 0.08044205571367379], 
         ArrowBox[{454, 136}, 0.08044205571367379], 
         ArrowBox[{454, 449}, 0.08044205571367379], 
         ArrowBox[{454, 450}, 0.08044205571367379], 
         ArrowBox[{454, 452}, 0.08044205571367379], 
         ArrowBox[{455, 9}, 0.08044205571367379], 
         ArrowBox[{455, 18}, 0.08044205571367379], 
         ArrowBox[{455, 19}, 0.08044205571367379], 
         ArrowBox[{455, 75}, 0.08044205571367379], 
         ArrowBox[{455, 88}, 0.08044205571367379], 
         ArrowBox[{455, 286}, 0.08044205571367379], 
         ArrowBox[{456, 18}, 0.08044205571367379], 
         ArrowBox[{456, 19}, 0.08044205571367379], 
         ArrowBox[{456, 35}, 0.08044205571367379], 
         ArrowBox[{456, 43}, 0.08044205571367379], 
         ArrowBox[{456, 56}, 0.08044205571367379], 
         ArrowBox[{456, 57}, 0.08044205571367379], 
         ArrowBox[{456, 99}, 0.08044205571367379], 
         ArrowBox[{456, 103}, 0.08044205571367379], 
         ArrowBox[{456, 110}, 0.08044205571367379], 
         ArrowBox[{456, 137}, 0.08044205571367379], 
         ArrowBox[{456, 152}, 0.08044205571367379], 
         ArrowBox[{456, 158}, 0.08044205571367379], 
         ArrowBox[{456, 402}, 0.08044205571367379], 
         ArrowBox[{456, 406}, 0.08044205571367379], 
         ArrowBox[{456, 407}, 0.08044205571367379], 
         ArrowBox[{456, 409}, 0.08044205571367379], 
         ArrowBox[{456, 411}, 0.08044205571367379], 
         ArrowBox[{456, 412}, 0.08044205571367379], 
         ArrowBox[{456, 418}, 0.08044205571367379], 
         ArrowBox[{456, 447}, 0.08044205571367379], 
         ArrowBox[{456, 455}, 0.08044205571367379], 
         ArrowBox[{457, 139}, 0.08044205571367379], 
         ArrowBox[{457, 141}, 0.08044205571367379], 
         ArrowBox[{457, 441}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          457, {3.329106012160747, 9.433623458797147}, 456}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          457, {3.142478073763299, 9.871616607252605}, 456}], 
          0.08044205571367379], ArrowBox[{458, 56}, 0.08044205571367379], 
         ArrowBox[{458, 151}, 0.08044205571367379], 
         ArrowBox[{458, 167}, 0.08044205571367379], 
         ArrowBox[{459, 56}, 0.08044205571367379], 
         ArrowBox[{459, 62}, 0.08044205571367379], 
         ArrowBox[{459, 151}, 0.08044205571367379], 
         ArrowBox[{460, 56}, 0.08044205571367379], 
         ArrowBox[{461, 56}, 0.08044205571367379], 
         ArrowBox[{461, 167}, 0.08044205571367379], 
         ArrowBox[{462, 56}, 0.08044205571367379], 
         ArrowBox[{462, 139}, 0.08044205571367379], 
         ArrowBox[{462, 167}, 0.08044205571367379], 
         ArrowBox[{463, 167}, 0.08044205571367379], 
         ArrowBox[{463, 291}, 0.08044205571367379], 
         ArrowBox[{463, 294}, 0.08044205571367379], 
         ArrowBox[{463, 358}, 0.08044205571367379], 
         ArrowBox[{463, 382}, 0.08044205571367379], 
         ArrowBox[{463, 458}, 0.08044205571367379], 
         ArrowBox[{464, 9}, 0.08044205571367379], 
         ArrowBox[{464, 11}, 0.08044205571367379], 
         ArrowBox[{464, 12}, 0.08044205571367379], 
         ArrowBox[{464, 15}, 0.08044205571367379], 
         ArrowBox[{465, 9}, 0.08044205571367379], 
         ArrowBox[{465, 11}, 0.08044205571367379], 
         ArrowBox[{465, 12}, 0.08044205571367379], 
         ArrowBox[{465, 42}, 0.08044205571367379], 
         ArrowBox[{465, 100}, 0.08044205571367379], 
         ArrowBox[{465, 123}, 0.08044205571367379], 
         ArrowBox[{465, 154}, 0.08044205571367379], 
         ArrowBox[{465, 164}, 0.08044205571367379], 
         ArrowBox[{465, 183}, 0.08044205571367379], 
         ArrowBox[{466, 11}, 0.08044205571367379], 
         ArrowBox[{466, 42}, 0.08044205571367379], 
         ArrowBox[{466, 73}, 0.08044205571367379], 
         ArrowBox[{466, 124}, 0.08044205571367379], 
         ArrowBox[{466, 154}, 0.08044205571367379], 
         ArrowBox[{466, 183}, 0.08044205571367379], 
         ArrowBox[{467, 9}, 0.08044205571367379], 
         ArrowBox[{467, 11}, 0.08044205571367379], 
         ArrowBox[{467, 19}, 0.08044205571367379], 
         ArrowBox[{467, 35}, 0.08044205571367379], 
         ArrowBox[{467, 42}, 0.08044205571367379], 
         ArrowBox[{467, 60}, 0.08044205571367379], 
         ArrowBox[{467, 73}, 0.08044205571367379], 
         ArrowBox[{467, 98}, 0.08044205571367379], 
         ArrowBox[{467, 124}, 0.08044205571367379], 
         ArrowBox[{467, 151}, 0.08044205571367379], 
         ArrowBox[{467, 154}, 0.08044205571367379], 
         ArrowBox[{467, 167}, 0.08044205571367379], 
         ArrowBox[{467, 183}, 0.08044205571367379], 
         ArrowBox[{468, 42}, 0.08044205571367379], 
         ArrowBox[{468, 73}, 0.08044205571367379], 
         ArrowBox[{468, 143}, 0.08044205571367379], 
         ArrowBox[{468, 144}, 0.08044205571367379], 
         ArrowBox[{468, 159}, 0.08044205571367379], 
         ArrowBox[{468, 294}, 0.08044205571367379], 
         ArrowBox[{468, 297}, 0.08044205571367379], 
         ArrowBox[{468, 300}, 0.08044205571367379], 
         ArrowBox[{468, 358}, 0.08044205571367379], 
         ArrowBox[{468, 379}, 0.08044205571367379], 
         ArrowBox[{468, 458}, 0.08044205571367379], 
         ArrowBox[{468, 465}, 0.08044205571367379], 
         ArrowBox[{469, 57}, 0.08044205571367379], 
         ArrowBox[{469, 73}, 0.08044205571367379], 
         ArrowBox[{469, 103}, 0.08044205571367379], 
         ArrowBox[{469, 124}, 0.08044205571367379], 
         ArrowBox[{470, 8}, 0.08044205571367379], 
         ArrowBox[{470, 9}, 0.08044205571367379], 
         ArrowBox[{470, 18}, 0.08044205571367379], 
         ArrowBox[{470, 56}, 0.08044205571367379], 
         ArrowBox[{470, 73}, 0.08044205571367379], 
         ArrowBox[{470, 103}, 0.08044205571367379], 
         ArrowBox[{470, 111}, 0.08044205571367379], 
         ArrowBox[{470, 151}, 0.08044205571367379], 
         ArrowBox[{470, 154}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          470, {2.227801322122194, 10.406166126526834`}, 158}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          470, {2.294470486487039, 10.370259876933968`}, 158}], 
          0.08044205571367379], ArrowBox[{470, 159}, 0.08044205571367379], 
         ArrowBox[{470, 167}, 0.08044205571367379], 
         ArrowBox[{470, 412}, 0.08044205571367379], 
         ArrowBox[{470, 469}, 0.08044205571367379], 
         ArrowBox[{471, 8}, 0.08044205571367379], 
         ArrowBox[{471, 9}, 0.08044205571367379], 
         ArrowBox[{471, 18}, 0.08044205571367379], 
         ArrowBox[{471, 56}, 0.08044205571367379], 
         ArrowBox[{471, 57}, 0.08044205571367379], 
         ArrowBox[{471, 103}, 0.08044205571367379], 
         ArrowBox[{471, 412}, 0.08044205571367379], 
         ArrowBox[{472, 8}, 0.08044205571367379], 
         ArrowBox[{472, 18}, 0.08044205571367379], 
         ArrowBox[{472, 56}, 0.08044205571367379], 
         ArrowBox[{472, 57}, 0.08044205571367379], 
         ArrowBox[{472, 159}, 0.08044205571367379], 
         ArrowBox[{472, 412}, 0.08044205571367379], 
         ArrowBox[{473, 8}, 0.08044205571367379], 
         ArrowBox[{473, 16}, 0.08044205571367379], 
         ArrowBox[{473, 18}, 0.08044205571367379], 
         ArrowBox[{473, 43}, 0.08044205571367379], 
         ArrowBox[{473, 73}, 0.08044205571367379], 
         ArrowBox[{473, 103}, 0.08044205571367379], 
         ArrowBox[{473, 120}, 0.08044205571367379], 
         ArrowBox[{473, 124}, 0.08044205571367379], 
         ArrowBox[{473, 158}, 0.08044205571367379], 
         ArrowBox[{473, 159}, 0.08044205571367379], 
         ArrowBox[{473, 406}, 0.08044205571367379], 
         ArrowBox[{473, 412}, 0.08044205571367379], 
         ArrowBox[{473, 460}, 0.08044205571367379], 
         ArrowBox[{473, 466}, 0.08044205571367379], 
         ArrowBox[{473, 467}, 0.08044205571367379], 
         ArrowBox[{473, 468}, 0.08044205571367379], 
         ArrowBox[{474, 8}, 0.08044205571367379], 
         ArrowBox[{474, 15}, 0.08044205571367379], 
         ArrowBox[{474, 17}, 0.08044205571367379], 
         ArrowBox[{474, 41}, 0.08044205571367379], 
         ArrowBox[{474, 57}, 0.08044205571367379], 
         ArrowBox[{474, 69}, 0.08044205571367379], 
         ArrowBox[{474, 140}, 0.08044205571367379], 
         ArrowBox[{474, 180}, 0.08044205571367379], 
         ArrowBox[{474, 182}, 0.08044205571367379], 
         ArrowBox[{474, 401}, 0.08044205571367379], 
         ArrowBox[{474, 406}, 0.08044205571367379], 
         ArrowBox[{474, 411}, 0.08044205571367379], 
         ArrowBox[{474, 438}, 0.08044205571367379], 
         ArrowBox[{474, 461}, 0.08044205571367379], 
         ArrowBox[{474, 462}, 0.08044205571367379], 
         ArrowBox[{474, 463}, 0.08044205571367379], 
         ArrowBox[{474, 464}, 0.08044205571367379], 
         ArrowBox[{474, 472}, 0.08044205571367379], 
         ArrowBox[{475, 8}, 0.08044205571367379], 
         ArrowBox[{475, 18}, 0.08044205571367379], 
         ArrowBox[{475, 19}, 0.08044205571367379], 
         ArrowBox[{475, 123}, 0.08044205571367379], 
         ArrowBox[{475, 124}, 0.08044205571367379], 
         ArrowBox[{475, 154}, 0.08044205571367379], 
         ArrowBox[{475, 158}, 0.08044205571367379], 
         ArrowBox[{475, 170}, 0.08044205571367379], 
         ArrowBox[{475, 421}, 0.08044205571367379], 
         ArrowBox[{475, 466}, 0.08044205571367379], 
         ArrowBox[{475, 467}, 0.08044205571367379], 
         ArrowBox[{475, 470}, 0.08044205571367379], 
         ArrowBox[{475, 471}, 0.08044205571367379], 
         ArrowBox[{475, 472}, 0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          475, {2.0590844737655716`, 9.909092728876459}, 473}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          475, {2.027300325146337, 9.978582254758114}, 473}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          475, {2.428446792045151, 9.94776610307424}, 474}], 
          0.08044205571367379], 
         ArrowBox[BezierCurveBox[{
          475, {2.3475139311759885`, 9.79046686849054}, 474}], 
          0.08044205571367379]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.08044205571367379], DiskBox[2, 0.08044205571367379], 
         DiskBox[3, 0.08044205571367379], DiskBox[4, 0.08044205571367379], 
         DiskBox[5, 0.08044205571367379], DiskBox[6, 0.08044205571367379], 
         DiskBox[7, 0.08044205571367379], DiskBox[8, 0.08044205571367379], 
         DiskBox[9, 0.08044205571367379], DiskBox[10, 0.08044205571367379], 
         DiskBox[11, 0.08044205571367379], DiskBox[12, 0.08044205571367379], 
         DiskBox[13, 0.08044205571367379], DiskBox[14, 0.08044205571367379], 
         DiskBox[15, 0.08044205571367379], DiskBox[16, 0.08044205571367379], 
         DiskBox[17, 0.08044205571367379], DiskBox[18, 0.08044205571367379], 
         DiskBox[19, 0.08044205571367379], DiskBox[20, 0.08044205571367379], 
         DiskBox[21, 0.08044205571367379], DiskBox[22, 0.08044205571367379], 
         DiskBox[23, 0.08044205571367379], DiskBox[24, 0.08044205571367379], 
         DiskBox[25, 0.08044205571367379], DiskBox[26, 0.08044205571367379], 
         DiskBox[27, 0.08044205571367379], DiskBox[28, 0.08044205571367379], 
         DiskBox[29, 0.08044205571367379], DiskBox[30, 0.08044205571367379], 
         DiskBox[31, 0.08044205571367379], DiskBox[32, 0.08044205571367379], 
         DiskBox[33, 0.08044205571367379], DiskBox[34, 0.08044205571367379], 
         DiskBox[35, 0.08044205571367379], DiskBox[36, 0.08044205571367379], 
         DiskBox[37, 0.08044205571367379], DiskBox[38, 0.08044205571367379], 
         DiskBox[39, 0.08044205571367379], DiskBox[40, 0.08044205571367379], 
         DiskBox[41, 0.08044205571367379], DiskBox[42, 0.08044205571367379], 
         DiskBox[43, 0.08044205571367379], DiskBox[44, 0.08044205571367379], 
         DiskBox[45, 0.08044205571367379], DiskBox[46, 0.08044205571367379], 
         DiskBox[47, 0.08044205571367379], DiskBox[48, 0.08044205571367379], 
         DiskBox[49, 0.08044205571367379], DiskBox[50, 0.08044205571367379], 
         DiskBox[51, 0.08044205571367379], DiskBox[52, 0.08044205571367379], 
         DiskBox[53, 0.08044205571367379], DiskBox[54, 0.08044205571367379], 
         DiskBox[55, 0.08044205571367379], DiskBox[56, 0.08044205571367379], 
         DiskBox[57, 0.08044205571367379], DiskBox[58, 0.08044205571367379], 
         DiskBox[59, 0.08044205571367379], DiskBox[60, 0.08044205571367379], 
         DiskBox[61, 0.08044205571367379], DiskBox[62, 0.08044205571367379], 
         DiskBox[63, 0.08044205571367379], DiskBox[64, 0.08044205571367379], 
         DiskBox[65, 0.08044205571367379], DiskBox[66, 0.08044205571367379], 
         DiskBox[67, 0.08044205571367379], DiskBox[68, 0.08044205571367379], 
         DiskBox[69, 0.08044205571367379], DiskBox[70, 0.08044205571367379], 
         DiskBox[71, 0.08044205571367379], DiskBox[72, 0.08044205571367379], 
         DiskBox[73, 0.08044205571367379], DiskBox[74, 0.08044205571367379], 
         DiskBox[75, 0.08044205571367379], DiskBox[76, 0.08044205571367379], 
         DiskBox[77, 0.08044205571367379], DiskBox[78, 0.08044205571367379], 
         DiskBox[79, 0.08044205571367379], DiskBox[80, 0.08044205571367379], 
         DiskBox[81, 0.08044205571367379], DiskBox[82, 0.08044205571367379], 
         DiskBox[83, 0.08044205571367379], DiskBox[84, 0.08044205571367379], 
         DiskBox[85, 0.08044205571367379], DiskBox[86, 0.08044205571367379], 
         DiskBox[87, 0.08044205571367379], DiskBox[88, 0.08044205571367379], 
         DiskBox[89, 0.08044205571367379], DiskBox[90, 0.08044205571367379], 
         DiskBox[91, 0.08044205571367379], DiskBox[92, 0.08044205571367379], 
         DiskBox[93, 0.08044205571367379], DiskBox[94, 0.08044205571367379], 
         DiskBox[95, 0.08044205571367379], DiskBox[96, 0.08044205571367379], 
         DiskBox[97, 0.08044205571367379], DiskBox[98, 0.08044205571367379], 
         DiskBox[99, 0.08044205571367379], DiskBox[100, 0.08044205571367379], 
         DiskBox[101, 0.08044205571367379], DiskBox[102, 0.08044205571367379],
          DiskBox[103, 0.08044205571367379], 
         DiskBox[104, 0.08044205571367379], DiskBox[105, 0.08044205571367379],
          DiskBox[106, 0.08044205571367379], 
         DiskBox[107, 0.08044205571367379], DiskBox[108, 0.08044205571367379],
          DiskBox[109, 0.08044205571367379], 
         DiskBox[110, 0.08044205571367379], DiskBox[111, 0.08044205571367379],
          DiskBox[112, 0.08044205571367379], 
         DiskBox[113, 0.08044205571367379], DiskBox[114, 0.08044205571367379],
          DiskBox[115, 0.08044205571367379], 
         DiskBox[116, 0.08044205571367379], DiskBox[117, 0.08044205571367379],
          DiskBox[118, 0.08044205571367379], 
         DiskBox[119, 0.08044205571367379], DiskBox[120, 0.08044205571367379],
          DiskBox[121, 0.08044205571367379], 
         DiskBox[122, 0.08044205571367379], DiskBox[123, 0.08044205571367379],
          DiskBox[124, 0.08044205571367379], 
         DiskBox[125, 0.08044205571367379], DiskBox[126, 0.08044205571367379],
          DiskBox[127, 0.08044205571367379], 
         DiskBox[128, 0.08044205571367379], DiskBox[129, 0.08044205571367379],
          DiskBox[130, 0.08044205571367379], 
         DiskBox[131, 0.08044205571367379], DiskBox[132, 0.08044205571367379],
          DiskBox[133, 0.08044205571367379], 
         DiskBox[134, 0.08044205571367379], DiskBox[135, 0.08044205571367379],
          DiskBox[136, 0.08044205571367379], 
         DiskBox[137, 0.08044205571367379], DiskBox[138, 0.08044205571367379],
          DiskBox[139, 0.08044205571367379], 
         DiskBox[140, 0.08044205571367379], DiskBox[141, 0.08044205571367379],
          DiskBox[142, 0.08044205571367379], 
         DiskBox[143, 0.08044205571367379], DiskBox[144, 0.08044205571367379],
          DiskBox[145, 0.08044205571367379], 
         DiskBox[146, 0.08044205571367379], DiskBox[147, 0.08044205571367379],
          DiskBox[148, 0.08044205571367379], 
         DiskBox[149, 0.08044205571367379], DiskBox[150, 0.08044205571367379],
          DiskBox[151, 0.08044205571367379], 
         DiskBox[152, 0.08044205571367379], DiskBox[153, 0.08044205571367379],
          DiskBox[154, 0.08044205571367379], 
         DiskBox[155, 0.08044205571367379], DiskBox[156, 0.08044205571367379],
          DiskBox[157, 0.08044205571367379], 
         DiskBox[158, 0.08044205571367379], DiskBox[159, 0.08044205571367379],
          DiskBox[160, 0.08044205571367379], 
         DiskBox[161, 0.08044205571367379], DiskBox[162, 0.08044205571367379],
          DiskBox[163, 0.08044205571367379], 
         DiskBox[164, 0.08044205571367379], DiskBox[165, 0.08044205571367379],
          DiskBox[166, 0.08044205571367379], 
         DiskBox[167, 0.08044205571367379], DiskBox[168, 0.08044205571367379],
          DiskBox[169, 0.08044205571367379], 
         DiskBox[170, 0.08044205571367379], DiskBox[171, 0.08044205571367379],
          DiskBox[172, 0.08044205571367379], 
         DiskBox[173, 0.08044205571367379], DiskBox[174, 0.08044205571367379],
          DiskBox[175, 0.08044205571367379], 
         DiskBox[176, 0.08044205571367379], DiskBox[177, 0.08044205571367379],
          DiskBox[178, 0.08044205571367379], 
         DiskBox[179, 0.08044205571367379], DiskBox[180, 0.08044205571367379],
          DiskBox[181, 0.08044205571367379], 
         DiskBox[182, 0.08044205571367379], DiskBox[183, 0.08044205571367379],
          DiskBox[184, 0.08044205571367379], 
         DiskBox[185, 0.08044205571367379], DiskBox[186, 0.08044205571367379],
          DiskBox[187, 0.08044205571367379], 
         DiskBox[188, 0.08044205571367379], DiskBox[189, 0.08044205571367379],
          DiskBox[190, 0.08044205571367379], 
         DiskBox[191, 0.08044205571367379], DiskBox[192, 0.08044205571367379],
          DiskBox[193, 0.08044205571367379], 
         DiskBox[194, 0.08044205571367379], DiskBox[195, 0.08044205571367379],
          DiskBox[196, 0.08044205571367379], 
         DiskBox[197, 0.08044205571367379], DiskBox[198, 0.08044205571367379],
          DiskBox[199, 0.08044205571367379], 
         DiskBox[200, 0.08044205571367379], DiskBox[201, 0.08044205571367379],
          DiskBox[202, 0.08044205571367379], 
         DiskBox[203, 0.08044205571367379], DiskBox[204, 0.08044205571367379],
          DiskBox[205, 0.08044205571367379], 
         DiskBox[206, 0.08044205571367379], DiskBox[207, 0.08044205571367379],
          DiskBox[208, 0.08044205571367379], 
         DiskBox[209, 0.08044205571367379], DiskBox[210, 0.08044205571367379],
          DiskBox[211, 0.08044205571367379], 
         DiskBox[212, 0.08044205571367379], DiskBox[213, 0.08044205571367379],
          DiskBox[214, 0.08044205571367379], 
         DiskBox[215, 0.08044205571367379], DiskBox[216, 0.08044205571367379],
          DiskBox[217, 0.08044205571367379], 
         DiskBox[218, 0.08044205571367379], DiskBox[219, 0.08044205571367379],
          DiskBox[220, 0.08044205571367379], 
         DiskBox[221, 0.08044205571367379], DiskBox[222, 0.08044205571367379],
          DiskBox[223, 0.08044205571367379], 
         DiskBox[224, 0.08044205571367379], DiskBox[225, 0.08044205571367379],
          DiskBox[226, 0.08044205571367379], 
         DiskBox[227, 0.08044205571367379], DiskBox[228, 0.08044205571367379],
          DiskBox[229, 0.08044205571367379], 
         DiskBox[230, 0.08044205571367379], DiskBox[231, 0.08044205571367379],
          DiskBox[232, 0.08044205571367379], 
         DiskBox[233, 0.08044205571367379], DiskBox[234, 0.08044205571367379],
          DiskBox[235, 0.08044205571367379], 
         DiskBox[236, 0.08044205571367379], DiskBox[237, 0.08044205571367379],
          DiskBox[238, 0.08044205571367379], 
         DiskBox[239, 0.08044205571367379], DiskBox[240, 0.08044205571367379],
          DiskBox[241, 0.08044205571367379], 
         DiskBox[242, 0.08044205571367379], DiskBox[243, 0.08044205571367379],
          DiskBox[244, 0.08044205571367379], 
         DiskBox[245, 0.08044205571367379], DiskBox[246, 0.08044205571367379],
          DiskBox[247, 0.08044205571367379], 
         DiskBox[248, 0.08044205571367379], DiskBox[249, 0.08044205571367379],
          DiskBox[250, 0.08044205571367379], 
         DiskBox[251, 0.08044205571367379], DiskBox[252, 0.08044205571367379],
          DiskBox[253, 0.08044205571367379], 
         DiskBox[254, 0.08044205571367379], DiskBox[255, 0.08044205571367379],
          DiskBox[256, 0.08044205571367379], 
         DiskBox[257, 0.08044205571367379], DiskBox[258, 0.08044205571367379],
          DiskBox[259, 0.08044205571367379], 
         DiskBox[260, 0.08044205571367379], DiskBox[261, 0.08044205571367379],
          DiskBox[262, 0.08044205571367379], 
         DiskBox[263, 0.08044205571367379], DiskBox[264, 0.08044205571367379],
          DiskBox[265, 0.08044205571367379], 
         DiskBox[266, 0.08044205571367379], DiskBox[267, 0.08044205571367379],
          DiskBox[268, 0.08044205571367379], 
         DiskBox[269, 0.08044205571367379], DiskBox[270, 0.08044205571367379],
          DiskBox[271, 0.08044205571367379], 
         DiskBox[272, 0.08044205571367379], DiskBox[273, 0.08044205571367379],
          DiskBox[274, 0.08044205571367379], 
         DiskBox[275, 0.08044205571367379], DiskBox[276, 0.08044205571367379],
          DiskBox[277, 0.08044205571367379], 
         DiskBox[278, 0.08044205571367379], DiskBox[279, 0.08044205571367379],
          DiskBox[280, 0.08044205571367379], 
         DiskBox[281, 0.08044205571367379], DiskBox[282, 0.08044205571367379],
          DiskBox[283, 0.08044205571367379], 
         DiskBox[284, 0.08044205571367379], DiskBox[285, 0.08044205571367379],
          DiskBox[286, 0.08044205571367379], 
         DiskBox[287, 0.08044205571367379], DiskBox[288, 0.08044205571367379],
          DiskBox[289, 0.08044205571367379], 
         DiskBox[290, 0.08044205571367379], DiskBox[291, 0.08044205571367379],
          DiskBox[292, 0.08044205571367379], 
         DiskBox[293, 0.08044205571367379], DiskBox[294, 0.08044205571367379],
          DiskBox[295, 0.08044205571367379], 
         DiskBox[296, 0.08044205571367379], DiskBox[297, 0.08044205571367379],
          DiskBox[298, 0.08044205571367379], 
         DiskBox[299, 0.08044205571367379], DiskBox[300, 0.08044205571367379],
          DiskBox[301, 0.08044205571367379], 
         DiskBox[302, 0.08044205571367379], DiskBox[303, 0.08044205571367379],
          DiskBox[304, 0.08044205571367379], 
         DiskBox[305, 0.08044205571367379], DiskBox[306, 0.08044205571367379],
          DiskBox[307, 0.08044205571367379], 
         DiskBox[308, 0.08044205571367379], DiskBox[309, 0.08044205571367379],
          DiskBox[310, 0.08044205571367379], 
         DiskBox[311, 0.08044205571367379], DiskBox[312, 0.08044205571367379],
          DiskBox[313, 0.08044205571367379], 
         DiskBox[314, 0.08044205571367379], DiskBox[315, 0.08044205571367379],
          DiskBox[316, 0.08044205571367379], 
         DiskBox[317, 0.08044205571367379], DiskBox[318, 0.08044205571367379],
          DiskBox[319, 0.08044205571367379], 
         DiskBox[320, 0.08044205571367379], DiskBox[321, 0.08044205571367379],
          DiskBox[322, 0.08044205571367379], 
         DiskBox[323, 0.08044205571367379], DiskBox[324, 0.08044205571367379],
          DiskBox[325, 0.08044205571367379], 
         DiskBox[326, 0.08044205571367379], DiskBox[327, 0.08044205571367379],
          DiskBox[328, 0.08044205571367379], 
         DiskBox[329, 0.08044205571367379], DiskBox[330, 0.08044205571367379],
          DiskBox[331, 0.08044205571367379], 
         DiskBox[332, 0.08044205571367379], DiskBox[333, 0.08044205571367379],
          DiskBox[334, 0.08044205571367379], 
         DiskBox[335, 0.08044205571367379], DiskBox[336, 0.08044205571367379],
          DiskBox[337, 0.08044205571367379], 
         DiskBox[338, 0.08044205571367379], DiskBox[339, 0.08044205571367379],
          DiskBox[340, 0.08044205571367379], 
         DiskBox[341, 0.08044205571367379], DiskBox[342, 0.08044205571367379],
          DiskBox[343, 0.08044205571367379], 
         DiskBox[344, 0.08044205571367379], DiskBox[345, 0.08044205571367379],
          DiskBox[346, 0.08044205571367379], 
         DiskBox[347, 0.08044205571367379], DiskBox[348, 0.08044205571367379],
          DiskBox[349, 0.08044205571367379], 
         DiskBox[350, 0.08044205571367379], DiskBox[351, 0.08044205571367379],
          DiskBox[352, 0.08044205571367379], 
         DiskBox[353, 0.08044205571367379], DiskBox[354, 0.08044205571367379],
          DiskBox[355, 0.08044205571367379], 
         DiskBox[356, 0.08044205571367379], DiskBox[357, 0.08044205571367379],
          DiskBox[358, 0.08044205571367379], 
         DiskBox[359, 0.08044205571367379], DiskBox[360, 0.08044205571367379],
          DiskBox[361, 0.08044205571367379], 
         DiskBox[362, 0.08044205571367379], DiskBox[363, 0.08044205571367379],
          DiskBox[364, 0.08044205571367379], 
         DiskBox[365, 0.08044205571367379], DiskBox[366, 0.08044205571367379],
          DiskBox[367, 0.08044205571367379], 
         DiskBox[368, 0.08044205571367379], DiskBox[369, 0.08044205571367379],
          DiskBox[370, 0.08044205571367379], 
         DiskBox[371, 0.08044205571367379], DiskBox[372, 0.08044205571367379],
          DiskBox[373, 0.08044205571367379], 
         DiskBox[374, 0.08044205571367379], DiskBox[375, 0.08044205571367379],
          DiskBox[376, 0.08044205571367379], 
         DiskBox[377, 0.08044205571367379], DiskBox[378, 0.08044205571367379],
          DiskBox[379, 0.08044205571367379], 
         DiskBox[380, 0.08044205571367379], DiskBox[381, 0.08044205571367379],
          DiskBox[382, 0.08044205571367379], 
         DiskBox[383, 0.08044205571367379], DiskBox[384, 0.08044205571367379],
          DiskBox[385, 0.08044205571367379], 
         DiskBox[386, 0.08044205571367379], DiskBox[387, 0.08044205571367379],
          DiskBox[388, 0.08044205571367379], 
         DiskBox[389, 0.08044205571367379], DiskBox[390, 0.08044205571367379],
          DiskBox[391, 0.08044205571367379], 
         DiskBox[392, 0.08044205571367379], DiskBox[393, 0.08044205571367379],
          DiskBox[394, 0.08044205571367379], 
         DiskBox[395, 0.08044205571367379], DiskBox[396, 0.08044205571367379],
          DiskBox[397, 0.08044205571367379], 
         DiskBox[398, 0.08044205571367379], DiskBox[399, 0.08044205571367379],
          DiskBox[400, 0.08044205571367379], 
         DiskBox[401, 0.08044205571367379], DiskBox[402, 0.08044205571367379],
          DiskBox[403, 0.08044205571367379], 
         DiskBox[404, 0.08044205571367379], DiskBox[405, 0.08044205571367379],
          DiskBox[406, 0.08044205571367379], 
         DiskBox[407, 0.08044205571367379], DiskBox[408, 0.08044205571367379],
          DiskBox[409, 0.08044205571367379], 
         DiskBox[410, 0.08044205571367379], DiskBox[411, 0.08044205571367379],
          DiskBox[412, 0.08044205571367379], 
         DiskBox[413, 0.08044205571367379], DiskBox[414, 0.08044205571367379],
          DiskBox[415, 0.08044205571367379], 
         DiskBox[416, 0.08044205571367379], DiskBox[417, 0.08044205571367379],
          DiskBox[418, 0.08044205571367379], 
         DiskBox[419, 0.08044205571367379], DiskBox[420, 0.08044205571367379],
          DiskBox[421, 0.08044205571367379], 
         DiskBox[422, 0.08044205571367379], DiskBox[423, 0.08044205571367379],
          DiskBox[424, 0.08044205571367379], 
         DiskBox[425, 0.08044205571367379], DiskBox[426, 0.08044205571367379],
          DiskBox[427, 0.08044205571367379], 
         DiskBox[428, 0.08044205571367379], DiskBox[429, 0.08044205571367379],
          DiskBox[430, 0.08044205571367379], 
         DiskBox[431, 0.08044205571367379], DiskBox[432, 0.08044205571367379],
          DiskBox[433, 0.08044205571367379], 
         DiskBox[434, 0.08044205571367379], DiskBox[435, 0.08044205571367379],
          DiskBox[436, 0.08044205571367379], 
         DiskBox[437, 0.08044205571367379], DiskBox[438, 0.08044205571367379],
          DiskBox[439, 0.08044205571367379], 
         DiskBox[440, 0.08044205571367379], DiskBox[441, 0.08044205571367379],
          DiskBox[442, 0.08044205571367379], 
         DiskBox[443, 0.08044205571367379], DiskBox[444, 0.08044205571367379],
          DiskBox[445, 0.08044205571367379], 
         DiskBox[446, 0.08044205571367379], DiskBox[447, 0.08044205571367379],
          DiskBox[448, 0.08044205571367379], 
         DiskBox[449, 0.08044205571367379], DiskBox[450, 0.08044205571367379],
          DiskBox[451, 0.08044205571367379], 
         DiskBox[452, 0.08044205571367379], DiskBox[453, 0.08044205571367379],
          DiskBox[454, 0.08044205571367379], 
         DiskBox[455, 0.08044205571367379], DiskBox[456, 0.08044205571367379],
          DiskBox[457, 0.08044205571367379], 
         DiskBox[458, 0.08044205571367379], DiskBox[459, 0.08044205571367379],
          DiskBox[460, 0.08044205571367379], 
         DiskBox[461, 0.08044205571367379], DiskBox[462, 0.08044205571367379],
          DiskBox[463, 0.08044205571367379], 
         DiskBox[464, 0.08044205571367379], DiskBox[465, 0.08044205571367379],
          DiskBox[466, 0.08044205571367379], 
         DiskBox[467, 0.08044205571367379], DiskBox[468, 0.08044205571367379],
          DiskBox[469, 0.08044205571367379], 
         DiskBox[470, 0.08044205571367379], DiskBox[471, 0.08044205571367379],
          DiskBox[472, 0.08044205571367379], 
         DiskBox[473, 0.08044205571367379], DiskBox[474, 0.08044205571367379],
          DiskBox[475, 0.08044205571367379]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019553876594202897` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{3.8302782619591618`*^9, 3.830356783751221*^9},
 CellLabel->"Out[123]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
u5cc/37vitOxPLzwTJCUTMwL5YPbgA+Nmc8Q8aWraOl4pOLxyEJPIU71avcO
J73Xs2Irr64iukkTe78ltpWt0KZKnzkTRFBBO9rfd17uM0jsfatn+anv9Kw4
TfRqn39GuWG/z0GP8iX2YDqnhsgKnwFYfuaJYZfuNDLO84x15c0T3+tdsfXN
3mWnolP9M+Im2BHmfGCmmxM1+g7HVnvjw0kCd8/5ufcHA3zYt+MZL3UvPQH/
oaeuCpd8J1+4BLjHJsKxoYwtZaac2qp7mrlX4DFhAsMf9e10xiOphUcaVRFl
AcifLloak/HG1unrWKcfNU7e41qHNeocsDCz9WAYzN10Qe4Dft82YwMP+HPb
rI32gPG6Efb9eOci533FaiOvmQCaSISF5EuKeFzjkGuhB+DI4QFY5vqAMgAP
it0eQMCdh/AzzhkedotMiFgRO+XutzBwbzUEuM9znUuO/0BYAjWuhPQF1eh8
P9216Fj8BP49Fh71VOeiY37fNnMDPhlCxBAxvJG70foM5D4MIWwnDJFShkiY
Ac03Ec2b22YdcEPr9P3JtiAoF/ZGFHn6BMczt52X+wiI+k3hh3eF55CA+ggR
/qPtETiU+f/WttkbH04tOPK6lun7qZ1GVDb7EXneAtACO7zt2KFM2SFq5O9u
3T5ro7tj0Z/aZh0YuDl+lMwNF+TeHMsCXviX8AKxbX/zmOCYEvQc/Hpj64x1
3PFnTZP30ltv8reOZ26Xu8PhS+vHrYJ6Hk8tPFrhd4Js2c/U9i7CafAVMabR
V9zy8Kr2aegsd/3i3HuxZtzrjrbZB+u94sAKy8I16w/Em4ktLsm9ESTKjX4h
NKQYNhF072wSSf1ZsW8OFyFoN3PXLw3cS7Gq/K3oqa6Fx37Uu+MZX60bu6Pn
kJyEt4fl+7bS0oqfiRycb7fbIfd2GLuvCPd80Lvj6fC/2sDbkweXZ5KoYAj0
PSVQr8H/x/S4Jbn3RyFAne/0LD8N6mzKzHqkWXN57go9QJZwL7pEccfIkuly
7+cqZdj2J1OLjjE0MbIEuzw3gym42T1kxQR2aaRJd3lueXv7nIO45a9bp+2n
t/wfE/Hy3PyxzoVHc/OLG8atUjG+fcl5QbJK+fdFb77cteSED4VYj6/unKWs
hIL8nSCxZ8qSzQ/V1jffV1PXmJOzt0Pu7QBIQqWnQPurRHaqyqem4HuiZn8u
27d3UbR4ub5U5nWX5d5rWqKqCYp8t3f51v54WZ3CIEs7Pg0D2Y3fKffa9RXN
E6G713t2OFnQWVivRd6pBdNf6FoxAnqXsMzPdC4+TkVLBIRnYZS0cZ/nWjQq
1/4tNXeTXRsotFqWjkTnufbmtpkHcC3RXzPL9yxvGqv4QbHczrkXPpiafwQX
XtY4cVe78FNaSTU3XUmV50KBslu40C2l+oo0iLH7dwTqYwXnXOu915EqQVn/
7ll2CoSzurxxjFryYpg6/7gLH7rxK3OvxVHDzgKjx8rO6rXmDlyVdtTkuXZN
eeNodvbf3ctOiYjgVr4tFjomvvMLgStpj1nu5c7NyysDWcz7MFlt3c+nk/tW
5V54WcOE3bjwAcFSduF+OdVceS68qWX6Oi78Q+vMDXbh2Tlu7TwXkvvGhZgL
Jp5S0eIqvHjfaBi/Kq1n81z7jEAuriWkZHLSopjHpfP1g1WB3v0U3amsrhdP
1ms9y07mBvuVN02wG5j3JROIy71B/LXuHU4Gb77fu/z0j3pXnHFqsmveDa3T
1k0gF73BvwUz5w14E96o0L3+kVpwFJPg+z/6P0CvMhxJ6L3CFghiSf3Fu+bc
KHxr26yD7EahIvdvWFC0JjvLV70fl1tzlnuzGHjfbsb3GyJjFpUkU2rS51ab
5d4jigUcvMdtMkHzTUC+kDHkXGzlCXnusVdF03i7Hnl7YlXnbPMr7KJGfKbg
YLfcG6SiJVXv9yzf6sCdpsnYDU5STzX8nHsDdcK+Jm/uBI/whs0e+xfZgQxB
lhS6FiPg1e6lJw0kZJky3hAXIkF4+cGrcy+8p2PeoS4dIzDbg7XYC3GZe6Fn
uqyCh9tEDOwVL28EEilR8vbnac0yIjvnNp4LsmAheOXx+qb2YHm+J6VIphi5
f0W6aDl4uwDAGgEsrPMviuJyNm06DTRY6uNXY/sxYa2/+WkaAluYrlXOvflI
AWGNH60u5DV48AABBe46PCD090P5p8w+8DdYm/9mQwJCvZmVHa1O+zNzbzZS
QJj0o8EaF9R5f8kYwwm5d91+TOjvH56o4RnSsP0NgwUXnqRGjAl1GfZKl2+b
vyh4T6V68+z9raSs+uWG1u7H6xrbgoBQSSi3gDt4rwAjfkpsM9oNnFlc1WpI
0N/DYUhcHOQIJA2BBG+jEOfTNb3uWbPlFibALTx/Yhp+7JF7oQjWnSyyZhce
lYM9ghcqNkIa/0isaYxO8I9nSoehv+6wx5S90/nnuZeHcWWnHXj63CnxykHY
Y8/cCwmZqlduiV24X8Vg7JHnQnzFXuV3zrILz661wvHKloIXrhP8zKD9yRHR
10RT4266VDR3uWGPPNdmwQSVW4Y9MrWCe+VeaN53kl/swuM1vyYThc1zoYWW
yZQxKgJj8Dkevg7DGMFrFVHhv8IRZcWASsgzFVZ8Jh1g2Tvn2rA5dF2BoE6Y
TA0+w9tY8EJywBiEB9Mu/EIGNzQWvDCg16fbm/YKGeN5hqzTRel5rrUwjws+
62tacCN/gY9emNXuQy88KacFSJ4Lz82o0wbTCNgUlENgKTVbuWHwWtWLqOMr
Mt1BylRYWcCEaIgfv2/utbTHMEc7YFavPVhjnJm0vdxr06WveBpszgTCrUh9
vEGDPNcuCJqmem1/4H7pMoo811rGmwvF6ITX6meZoo/9ci+0EIDTYnphbteR
PBcSmUhH4FR/Edxh1ajjr7cmI3muDURVak03gYGzdXMwjVvVqdXe/qrFJ5jp
tYfnqOLca9P1uC55LJm5n5/M1H3TdWV5rh0I5ocNUqZfSivT/XMvDCZ82YWm
MTemNWaeC/cJpm7phWemVZapxzwXHl2VcqpoZxKvqv1rohOxOwjAVZtOzHNt
Vr5UpfssiorBJZz1Ju6i9bk3sJQn1zFEb0DTEkTc2ZpzkWm2EbyBwmjKi37i
u4nshdfa3yNujU9ILLy8YeKupLySYJTp9bAu517ZHUeq/GfWdce7yb0b2+UK
2VcOyerN0p1JMBT9zWKblezsm2SKdCho/9x77BxsXOLvETXkYN+ZdkC5q5M2
MFkOu4HpS7N8XHJYoRucoDF4Fyb1N4iwoXxGeAfg5cZvyL3WYjJEHGw5T1E5
zrL6wQfkXniZpiJBhXYhM4WRM7MNXqhGEPCNiBXGIKmlei1gxxFRenzutWFL
NSbMFir3+zW4ldopIi7SRSAH5t4jS1v47iV526vdVlJant1eLc+ELFcJWeXb
J2yfU39D7i0tS5suCaESTw7/m0d/fe7NLYHNmXMlmfmO1J2f55ZfCTaq8rcc
oS8/eDPFk3jvrKEVuiZwv+Hd+XnuN6jx1ajAK4/Uo59712CbrGW66/+jRz/P
za29lsst8fSZtt6eae3oGdajvyH3nlnmnOcbZ71dIeboaxV1qRfqW7ryuvMP
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
/iCaaHxSruIPNW1LPpHTtT+W6jxcI6t1WkJsbWIYfPUVvsQUWPfgTJqy6STk
5hAj5ay3a0nPYi1Dy8L+JTJx6ZOBjhPekAPODvxRVf30Nd74FMI3TiGUhZxu
UhVYSWKHa4G1NBHynEiMQgaRn63k5zx+LuH52LQLafSnmQdoAflAfnY0z1LR
xrXDMG0JKkLXOw0xPkNG55YsvmkJd2AfHk1lmrfV7xTQQrcYQ3suwdRudLtJ
BYbRFImN6DyUDZMKBIhD+VhpWSRevjLfjsof0gjE5gZrY/oJdW0T5hgnH+aK
jXSZaZQn3oXdB6r771x9hv1NLgqLZIL0G2StmOv9ostTvS0Ya9ruCzY8VOL0
oc1MHV6RbrVNNT2nMICaSxzV1i4pJaIwmgsvChL7xOGL9kDRyith2gkbujTC
hZpcCTdnSTUrujdOgHXhgVtWVSlaUWIlbicfwWCsZyW8oemI506ITQ6FIpfJ
aX2q4ZRWu4ruPPRU6cZbMjYmEYn3tPPn3vWH4qAkfMYjZd7I1fI7psfIajEq
pc74t4qa+r/pPJFpC7E1Y7vJ1cworvD8rajMiWJ0/pkUgKXGSWyV8y7e8DPA
BArfarz8p5kdayNpHKkheVNdsvkducY7bDL3hqpdkLPTAfhgxrIyFoDTBo2Y
WhvfJ9ohF7dJ9dJPveBP4Ylnw4uRCOhq8jRGpotP+HPdxGXQgXdKELpX05dN
I4Kg7t2heOsdjtoUiYZNkYlnP+sMtvZ6Ao07AtEmFvnJcoeLzt5TxIOjwMRH
q+4cnW2gRgnlbbbgnMfFSOyNpcaMVJvKtIwZlzlq8cm2snA5e3d/KNH2sWw8
mjBJzf9eloc4P6+EnC1zb/H4E/8Um/as/M6PxX6i3z9sa7nlEstZPsrTDIzm
cCJMQ2cibVok4+DMmfMOqoTq82ag86T3ZaPDON8oaOWN2kCdPVFr3X4NEJCc
HjE21XU+ioIOJw0oh13d07DgetRX5cmtoV9EbOtZBCw8SdINNEQZ30oCz4Bu
EI2Spo/PWs25o1BFN+nnqxrnYF8IhsTmTofvQmCPBQS40yBzZ03r4pNk12tG
aaFp21N/tKw4boRMr2EbGuqRLatfCjkOc5cbZzruTJZSqSZb8Lj8JG2zSExi
qLA4JsnA//l3wSrLAQw1xS2LkBxdndVPUnNWs8LVGrmBjkk4kGnkVWR4SbWz
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
wrK5cYfcvmFG81e6bUnpQLFQlqi42O0UTjR8NeSms3xJHqOkS4Oyiqsp1lN4
ACHVrMiVN9l+ZApS7F/aB4GqSB3Z4uxBCEJq7LgkqBQ6JpgUYbuegYMJxqjZ
lUxrGpytCpc7P3B3wdMQd4ZiKScQTsHzQ2hUVSfjCy83LLEmpR3Vqwqhu3O9
uvmrkLaDYoydZZpwN55CgJZ4dhcY8XOp5Tcw2Dsvj8ipa251gh1RJ9nd56Ql
Zu2X6+O6rWGSFVH1yl4lQ7D7iJzY41wbqA39//ASAxKoyslTdVGNzFgP0uDQ
b+tGzD/7zZ85C5dvVGF5abNgPc2C6nsDndOc7rW3lWDLBVZhbYHXnVpOWbBw
27YDeM9dX1YrzV0oof9YOi9htSqHEkqzero3+QrVsUePMjhSSRUhoKg+tNM0
h/qUdCvW95RzLitw1c3H533B8LHm9p5sL6C4GH4UI8a0eUQKeFC8ezBf2xTI
T+SJm1oTjlcyMXF5qqewLT6Ql4hoNJhZPhwdOvuo7M68ydIgNiE8kxvzdS3l
HE/jWfVSZtbfad3TsCxAYRaNSzYNJY4X26e8g3kycMxekkPyhlKgXHNHVgx2
zpUUlqkgZ1N9M4/6OmceEFdkW5TxGVQSKirVqNMWzh/nDAUoBp3SesWg05/G
5l6Ejb8nOkeJo/zOaODx+oqotuswg2CDqblr8YWXebW7si9VU1T1z2oBqbF6
hE4k0hIvX/tzMWd1hU86jzL0w0a43YwF5J7hiWH4KurGcYYN6r9V/y3b+mUz
layYQhbRLaAC8A9441RCwbrxIfgPJLC4+Z93zrn4vWJg8AbGWjZin+2oW1AL
DA5dIfQ2Ux6BugLUZZINDC3eAesJnEPjHYmM6pkx9UVsuY32wUmUuqOrf3gs
kNWEMzzW3T8TrXQmAvN29EQs6YbO312BzBLV82eqHKBLuITPqh6ltowtw2hT
GeSKtoqDQSedj0Ej+2pvYhbR/h1y0xQG7u2cfSGofVJcIbrqH5W7ea5jYOPe
+PzNP5Xo433iXkDoQPgNymhZlfr/9E2BoUGCouYAxmZcCr3elqUKpqSGYm3S
7zQDFEhjJ5rk5abd6C9KwsUnQCDVYlibfOpp7GaGAKBigUchaNA1tSVb+Pl9
Rg+Nq+AiaX/cpUKB+BCRElMv0vLEyoma7i40sdMukQ2lL6OmuC9Yug4eeJXx
LJYi4Q9nIFtnY3POp3KaV3gNoXB1UcewrsjgLtTwhiYq0dqJLHld9jUf4c9r
cz/Hod+R8Hjr7R9SrhBuetEmzTa8851GSHaX4SnupmlEvopRxz6TkFg65B6b
nFiXJ25ncklx4n3/+A2FTGOdC1NYGuBpKnCInCk84wzd7Ci/XQC4Zvzhrcbe
uQq51cfOXuxKFppNsiAWOxDPy9riKYuAurlEl3sqi76zgVi/pGmbHEm6nWZP
wOnpn1Y8fvXq09O9U19u8IYOyDkZxg+76sFl5eCctyOdI2PiCyMFtyxJa0bC
iAWXU/ceUZ3R4rqBrlpj/RWVZA4VdccD0b5ca9dinCNJ6zhl55Yia9UUZFwK
b0V/vOx692AI8952e8eHZBN+0NM5A4sB1EBATDhCCRs9imHxtOPpAlBd2CuL
/FgMfbZVtzwje4QjZvr4/lN+jM9Q87Hr1H89zCODGP/z2JyLP90+ZQMFhI+0
969FupGgmxhWgtC5IBiISZ8myeApcvIqQWoqquxwXJWUNKn/Vu8JZpbhW36o
gY+hBp3ZwG8nnFU5UJX+L8acs/796MyzK6r1z8BB7PBXPc28opYiAPRy5L4Y
UMxi/Edk6Nxa7V+IeX8Wm3sxEjEVlRK03VhRbZpdr0HTAjlPPQG86oHWzNJX
SzWDFYb3l7ZQ7AstHX04PQw2gJHpBLqxWnm7pqdSS6/HEeKR+OeX0ytuRm75
Dfn9qi6t3gDTHJeL+16ypaIRP8BacHVQnSBWUi+9xp+cQx84FV0QlkqdnZUY
aFMyTensQlXqxaGtUhqQtcWofgL4rs4N390nj+lmf2KueL75RAzWgS5wz1iQ
X5Y9C3iYqWkK8Hf6WjUU1krSSYWHHxP0sy9h/EPOmmkmgUgatfleCU6+JX78
e3KpL3nbEvDsYMAc8Ie6vyp+fmVlZY1VLvHpCrIi84ISGv8DeGhJTcCYSmtk
s75KA5S+JbVLp5oQC4gufEQKbGHY+Wga3BObfQFz10mtYTUhkPmbzvmX/UbC
LNJ22QoXc5e69F3/3bbJ6x6v94T2M77BHryTz7zECUeTRYZ7lWa4d/c7d374
S+ZRJKwrYKrsc5Ls0u1A8ZhJjSMGfNKCQOt25bTuTYnhtVx1ZTtUxTEyfsWR
GLZFA1RWBsg2z2g/UF7ArSsn2du6sav22+ySdSu6lQIX3NQwJNa0eYFN7PAy
VNXJAyDjRzrTtAPkZQVUjVi+Ur4i2j1dVk214WcUgm+FQAoER11jnazumPHO
eG8gvAkCeeZSIkhsiJ22s388j1VRFpEz1vmI5BTHM2t2yCJPkRxkYKJzlUv3
DWXltYiGZG1rq6v0klMCb0PnKN0SMUBKqEDCQSsQnzeaJkjVlfbs1uoWgIHZ
eU+oL98x9R3ZksJOi4t4e275M9FbZf2u4/5xpRT67J2+Ek/3PSDR0wvpZTc8
n1px42vdq29lRDzG64sdg+88qzk08C9ij5/1xmcxNHQkkpr6VFs4/nRLIPK4
HNNv+zXMgwFGCZHhX8TSFAAgsaMuQTUQjBopITpLCdfBnQDxKWsSmqMbaXvD
xbBe4tH9Qlh0EBjI7jRzgtFjBKkTUKPEUAGFg1AjGje33hv9RJsm21winhMO
PQO1janATdmqjEFE6qHz0L//HTNLQl1da0ZRJkEwTHxMJYKcgsIObsjVYYr0
jyrCG2wcjlRY7NYCiJmV5ytZFP4elZ8p+16t/zurqqbxPoC1kngnZr0/QNUu
CZJptkUKhqzydckoSQ+ZV3IIzkL3ujvUhCz5GY/tDUkh+RN/9Kbp3jhulFkZ
Vyi+6SZGc2PX7hMXJwnEBS06t8OI24RNUUP1KDJW3LprsK4qvLgGJGvxXP/Y
PqDEAlj15Q2tSW7thDpLY5g5VMptKYNEBs0Tkx+FofPeZWaRAhFSKzNsgNNq
jKZc2lTM7TAQrpi9kHJR2z7TPmUj82AeiM+//FExURDo1OyWE4xNNQ3LtlpO
PS5aUMhWUKPlDMANIH+quEQ7JpcKwXgUNr0Z27k3Kv8bZBV3e8JT/s0Tm/Y/
EvTQs/2fYjDk2Vx0X3z+Jrzov8v/ywY9m9jhJ2JA/iR74lX59uO+cA9oRDYQ
SuZC0VSZIFse7jtt9WXjyw81t3U9btQeJA644LeJBZe/1rVqG3hVTtygrd8a
s+xxq6Moe5WR1wG4U0o2Q39UAI3lJ8kw2JYtirgIRY6rS9NF7cnSWxUdOreg
saLbs2qKPKQiY1JXusU9uHxNhZuIdOu7/gmwKd8S6Mj6E3PynvYyy1ozXiXB
fGytI3GauinE1CEqlWzf9oKnpH1t7uLVfEzeSImqfNBM7xjPMROYI8+kfMG4
jrgwmIcc47W2nhWlMyo9BmSbPiobAu6ZFoFa5xaKvvOYeK3jYq/dan9lJCvV
byemuVSQtMpNBDZeP8HS8LyZNIIS4jGTeAyPIyT6ZjIz9eG65tafh6a+k1FM
JqC5c1SukhbmBzsXXkYcCZW+t6bJf0/HwMZnJar7YEMw9TGJS/+YXHgl+T/2
R42V1ScpAO3y7tDUk8hVCD45NkMSMvN3Bi2i8ESpltwCaRCgF0QBKatTPIXW
AjelWZm60C/jmgRJP/9PTIEf84+l/ZzpWmVwO4wpcCjCYGJSEHnyMPwAkIO4
kw46AqbWNXeQEYCdgGHpkLYFk2A1UPBxwFHAU1bdVDXUVjBIrrkN//gxVyMY
shVAV6RXYDBvt2u/upgQTADzl0yT+udJVdWLJfj/TMfAOxhpS7ZEj7QeS4Mk
j6LZeWDCvFrs191KwzcDx34em7uJVOl/4wuvYPYOlNL/js6+4C4xlhd4IoOV
KuerptJlnQh5nfEtPB7rcgCX/Jq7BKb5mJmT/YQpseleryqd531LoveyeVd1
5Sw5y0Z9b5Fy7LE0ZPDAOqMUbZkL2HNwR8vHpZDBxUsC0qidUQPQJIgVM0wk
+9y2v3vVrUdkxx1JZKa9LdKEJjKUlPTZvcaj8GM+3l6hKl51FV3JeL0mC/TN
al2btvJJ9ZLMRn/X7Al8q7Yp+Ak5cmwwW4CSRd2MmOxfU8tvoJDDRMgnYrMv
/GOwf/WjcpQOlgr9KHcy3BFNZhu9oWw4NRXtLgT2D4uH/ZsYoxfSK29i9yCy
ZjjLFx2SPJzY1SmtGpcoMAMC5U3Pbc6G5ymDaV2o8xUDmd1ZlFmoKcS60WLP
aYWrneFQJDmwPzx4at50MhjAyoB1d7r61Erk98sQqEJeMLZCksq1+NsdXzAM
68D15LU81UVXbXM6u6ZgYlXFhEa8zNqdrh4A3RnRMfWdTjg5uWiCg4VWgxt3
frSsHrFLTQelnOF2uYxCaQnG8y3RwZxEywpQU47R7WNrDX122r623lVjh3N6
3PThUSPVpbUF7cwBrat9RJ5odgyoVnBaeWYUeju6Sz+9dQw5uadYr+ebXlUy
EtrqvCb75hlxXk83+cMHQok+dDSP+SO9+8QYss8MeydAK7QWD1NDVnciQ0G9
BX3ZV7pX0ru8HRzoXE9kyi9i8zY/K/v7RfnsjzcGu9wnyPTiM1ESyQDykKK9
DRCjAcZQZ4aPBH8LAg8wBMAzCQLwOG0HGDaxfRdiH3FU2Co4TgTWurwSelZi
A2bIoF5KOxiBI61lIGxUI0A6IKmCjYv5nCr/thoHhQX8J3ntSU3tvYTA4P+E
yaRHQBfQybhyk5SQ3pypu9X8Fa4q/ttm3zb2yRL8pqbBO54YM04e2jo6V4Zt
SmgNSvaK7lFXIgEVlWrsRh206hdTK256f1v/qht9qfng9oWOP3PBGAxSkscV
ZKYecP1TZhk/Ik4CSUaWm7oBPCzu3xhTsNF2k1gxUaFScSCqocNaQFLV2pUj
qiNfxAmJW15JQQH3AgrzhdDgyRWV2rtYDqyrU03Bhc+M8TgubTL5ZbljzI2x
fG4LXeH6bScctX0e6IfF0toF4OHboS7mdQ3cGSk0icer6ZW3oJ8l52/LAV+o
a6JWUptTmcWxPAGSViS4TXELHgNZEv8EZqc6XLreZoQxX99t14m2ld+9rRZX
1TUxXkwCuJNRXAMzRQEa+d4H4wsuv1c2D1dyr7jEF71t8bI2CD/0qWygLZzz
tCWOSTK2X3zkY9FZ5/82Pu8SSqG/Syy+8un08utBWmlaR7mSce1KwrDULXeU
V3ktqpbrWV9od3BTa01n9c5jPcp4a5luVWRfP9ZZlBHs4E9l5R6ri910VUXI
bL2VmGxyCumNOITA2yql6BbDvoEZqq2kQJr1KD916nlXOJFYkiq+E01PLVO2
LPadKXDRXcEPqvB/pm5zcwOCxyXSQ7VlRJfRd4+K2Rmhf5rREpH0VBxLXnNv
lzhyXEs/ts5mFVkx3xNIezaMVyUrULsMLFpRmVUh6cHIjDNGoyUl+IJ/K5AP
Skrt4fKPd1TapMkhxLn0f2C3D3SvvQ0CmsS5NzCJ/Neh6af9r9iKZ9qnvOOI
xLYooiALz177H42fXIimBTO6K6rwXxUtx9XQXT2BgTAPiGu/eOS94iMO+MOZ
5zqiKc7VOGOsqsAsFF4hBtJKVMBdVQPpJVEiBNXmoZUAFlYNmAQYPYca+wiF
mHovORYwt9iA2QAVYneXEHYT4IKk/ymx5Gp80X0SCJqifS0snseUTIdm9xih
nAvMsIH/6Zy7iRL0XjU1d90diBNT9/++PFjAvCt98SHsLEQujC4J0Mw6Txhl
BahVxNKoCU0qBsMnKl00T9R3iwvAsqrBf3I7fxHrss/TlqwkYKhI7vW2Jx8V
Q/8LuSScLz2CBNZkISsagykc9rcMwZcHCFfu6dTSrdwtzfaWYMzrWXwWnZL4
2qZgFw6ESVrfUAOuF15O96gusS2/nuIBxkyvVgOMNxaaDAS8kgSV8WPYeR6a
4gEYWhY94XtM9QNysZpOq29XjWNwe7h1EoeMhQ0LZVIrBafyAklO+Uj2hRFs
g9jHTiJcUKCl/IJmgNow2R30DijN5LlcoVEVAv4EZMVxAq7yMnn8N6lpeXKj
h0ui2NJGPQMHWoYBGRdrYJwRSLGlv8OeU22FJ/QuY4IWLVtsejRPtKP87h31
SEMg/iPTm08gxY5i3YmaOESbvbHpWjxl6juflVs/atTaK9xtIIBr1CGWrjkF
1XbAHUjVdAQ9nVZziy5H1aSikp9UVD8qgc4hl8bReBJHKS1xZLyFrfeYakiT
1fYweuauYsyEZY1C84mez5OcA+fALdzjnjpWnLNj6zq7teiSuAvZZNTfW0Jv
UYNpKDZUogisGyqLrkx+Vu7KXFCcu9FwjIRFMVGZoR2fojGYOshoZOY5e7tX
bVOYWHLZ1tGWUG+2q3+orKKivqy5rdsZMywx5HLdAygWj8qpzp+ABa4KM5Z0
AZtBFiknv5UsbNea2/emV926Pzz91GwJzNZZgNnkJBio8IQkc60SsG7XYcmt
h1U34qxz/habe/FRCbMfTy25FsNFyP1XeS3cfQwS0SL2GYRfjODZNtJUowwi
Q+dSHTAeq+5Y99qdeC35nKueEIN4rKU9cyTdO/1E6LhpaKFwbY2WcVhV15gZ
ENhZo0gZsoEwo0AwZBBbidRtnI7g4z+2Td6AN6JAgUDf5yVgxGPx50+iyk5f
RYc+t2eLG7Tj8lpdxGgCRSKKx3z/g0bwFhPvk0Bsbero/UOTp7Usdq5xx85n
yCVx5k3cX2f1fBmBy+9PiCNdYBrbrH2m3GOHAPMuEjWElIiw8VC6blyNieGj
yWN4u4nyCctx14iBYlTRqWURjKU8VXXJaPdcDyjInVEBA+oUP9sLpoX7p35u
wD/M+rtai+G9EjYyYqIeudifyJo/He1MT2QmXhDj+LlJVboDRV9mjKSIGzWO
pYLSD5/PAvP/SwwlAF/6kkQOd3cMnry0QcOkwGpbfcl5GP4HOhde+pwa7LYS
+vzWhxWWtvpWtu/RyMyzj5vejvH0nw1/GAjVMgWATV0j+awcAcgpMqLGj/z9
7U1z3R5lgkJWAfVghuXXW7uXIZJIZqoXqYPu1NPElzxU3+Q7lJk8s6T1xHJi
Gf9gZ/im+4YOSIzwVzEeIBmPijEETWP2HUHZ47S1mOnAFQV9NVcJuFiy35Pv
XV9kGRXIZlVF/KngUFoc8eITGSG5pJnHmtszx8TIuLGrimKJxtZibO9isZhf
p7yZbFPHm5ilWu5cxZRCvcatgYQoLGgaC1PiUJrGY8I5vSf0et6SaQF8rJUl
dDUt5q2LK5MoKS/yKzXXOk9HLjkmdfGXtnYm5zLxWM/mXHh5EakTBxCWre1t
Tylycnj6aTmjouhesrxJ1kbEumeTy64bJ7/0jUHTDCKYZbBxCZOtZ0W+UxPM
c4n5lx2V4IqiXiX1o4qo8nFiSB5un3rSHxOLt5AGHeheffvTqeXXv9q98hY0
Sygrow9HszPnSo2vrNDSRlT96bfFhajpApJCIXTN+7Jag7A8/R7/rJnWdZgC
fAf1G6ujRmUEti6FGWo+2plUnW5KsmoUnBF+Apmz9CisLvYREu8cVw+kVSH9
XMfUd6A6cYW3cxbB7FfC006d2+CLustJ55eVk95dWk46hXJS/YRcMtW0/0hb
R/Tq6novH8tH4oSwl5hwJfCkPUMVl1tgfJlpHkTBiDWpRNB0EZI+0T6DiBSo
IVC++YzAx9r614H2ELjappH5Db5OMr/vmsI4jvEqb3xoeUMwRfWMeJ5wgNfw
edC2tKdp4C1wkvFhrAD4lDyI08l575LLn1wn+Yl2KUncOO4B/cM/SG4yHg/4
hXiq51BzW/p34ZlngaPaesYe3ENFEY0lAQCXg5tFteK3km+Taz8m+xyUGEoe
V4gCN+kWzEbTwAhj5VcS/HCXXw1PO423PJtedsNvQtNPf6ElEHsLwXHjXOzW
ogCDtoEh362R1M/OemE3qcfVfSLvMAaSK3EpE6qbPNMRSTKLWz9XVe/SxbIG
S8T4pJzBX9e1tB1Fz5QeFGoSq08627ntPZ8uSZzlu9/0h7r+HJ15NlAE9X1o
6EBvBzNrblOSFiWEIp/bMuZ0PWbPMTVkd92u4cSSq0fDQ+fki3y0ggCzsaKm
NuNRqYk2SiuPeUM9kpX30y894o/0MbH9UOfci1GPNtPq9uRtjpHXOUaBZrxR
F0rKBP/KQ3licPgGJRlobaGOcunWnTblKD6dSHnGZR1l3u0NZ81f7ixbe4qz
Yt3p6u/TZxeFPNzMcldZo5xmXW3wJ/t1/khPDnGTE0T80M1JYUaUBon4ccjl
zE2Qo4q+iurfBHHzS/5S39LuiJN2Rer17oRqBIKGWDJnjDp0wW0xnWpYtvQb
EoXlLZedSQSGq5aDpIw7g2XA3119meYrW+xXMsOejcLmwSe8kVl7G5Skoz3r
dh6Qv39RUmkt1JGcYyBypbZHhwrHG9hsf9ea7fiiY0nF3578FsfKeI+LzIQ2
2t+M96i61ChpKxFXzSetWmimudCeaAW/KfKcpjUDTzL9HorTdZrpjzR4DubW
tkcqjlKFngf/CTPwRaHopicC+0Cag63DPuIwVZojEfsHGwLJp9vDiYnC3AKn
d9Ik4B5LrVaQkMm6VDeK/WWGiUKDIiqn8w4npR1DE7gOPYvcEMna0sZAEovO
zy0xAccEl8F8VD14EF+3XBzX1qZg96fkjr/WEpnytdbupf8WsmLhLT9Xg5c1
Zw8pQCjAfByELeRNyP9o1AR9AlRR8iV6zaeBXIKl2bGouNgzZbEg8j7Y0OQF
ydvbEctgWL8g730+PHSW4gNICgSd+I/N3uDzHdH030Kxrmc9weifxL++Gp55
tmTc2yS/UALjEMCRX3lQHAX/D8f93s45FwLIkGPy5xc6Bt+Jm2f1LKGM3UnQ
TVPmdn96/t2ScOx3HaATyn+bp0Ex30rmsMONH+H5I7NloxeVUhk/QupwmTzw
RxGungBKG+tEyuRYVPEbbsRP5BmTkTbqCt2Dsr6Hg5GUQmNMe0lFdfEboJaO
RoEJFNJeVxwwt35PfvxCh9dd6DgmhkaXclfe+rAkzG/Q8kYDuRiqnPxGpmNU
zhzTAXI9BWmOiNuFGC4Ts1avezMy44wXJId8OT7/0jfFgrzSverWJ1NLtyo1
2Pj8y/JGk1u7K/ldUuWYSHOwRGRKFeeNA3TjVqBKTLDi92nnXeFMn7VI9aPi
RMo1AdW3D51XooItO9SRTNDx+NsrnXAsKebR39qmULJLr9ulHEdJNSIxV5nc
Anm6ZIJBqPA1kv3Z+TSGajfNUu1oe2UENVyOwozt8WRyN4l/R5062T25dGGi
JepbOIzmYLfT7A043X1Tyx1VPtHVn5NgbpiRqAWCQGHyrJpyluvVyuz0NI6I
/R1n8mxJy2VO4tLX0ytvHenRyj3PSeS2v2v1Ns4tHZDYYqUkZEwUXoTGkifS
S699TTwXzYovdEw5KRt10+VKD49xFXa+qprWbETkME/EWlAAit1vTRY/t8rh
5CO3GGUXfBalXJAWkA0LsMFv42hTj7HzINyyrMYTvZU8h41Lk9pwNIiPAjSn
qkMl56vF/KGB1Iar2irR4Z5g99KvGu0nbCvEBOUtTEF6nPJuA39/v9i+M6rr
ms/1hKcyYIeyzo/F+0uqdDLBvfmuEPURKvWWNgfpFjv32fYpG4EVHxJ7KynV
xbe1phcyVw7mXlBs/Xu8nTMeIYuU69neEp6yI9C18D8is87dH19wxVilBzWt
aqR78iwg3DcNMYC8YIsvPme1kudNLwIf+XNiyRbL3iONAQ1DXUDvEg9ZEVS1
n4vVAWSjVfGeypq6NxPdU07UqljWZs+OYfMZXi+NJBT7+VKyY9Rd+Gf9qBpI
v/D3VMJI96zOIWni3zpiXaVGxOX4x4JOb2N/aJBOE8ptuMBvHnql1oi4U5Is
io7lX4zNzypKDaVQDL8Zvkd/Yb4MVbFSuK5SgpzrWUzjYR7L6/GFV1D8yJcE
6Q2uDoYxU8eKQJRqMmmkSZ/a6+PJZdc9kVx63bOp5TdBmKGRz80ic2m/5jNT
ZisjF5tzkeqpL0WXfMWwO5xxw/0FPpeF4Sivh6MJp7nFq/QGGOVQsCINRVrs
0HmFCn6ZfS0JhamKyHZy3nnWpe7IPp/UWL56/1jiWkcpMrV+93Hm9cZmny+h
+PnDycXXOMxkkxzpkMRud3rCA/8vOut8RnuXOzvlY0hSDGvAtSQF0NJhADNq
uqCSZ164pVJNUfKrFSGrDLRFaSHK9qwFzNp9XCmprd2F/x01nSvcBv//bOe8
zYdPMLiDOOB4YtHVlYpRWnO/qVDY33eHBk+yyYAbYv5E+8C6n4kp4TW85zsS
To6Wm3fX8THm3Ur6K6FAbd4L0yDUIDI9B7UelhdBMFYSu0xPMeNp7hG7jlUz
RFxeQvMjjC+oV2Z4AyfLdovYwYQnIN2OHyvqwK+GyWtgRMShkH0I24y9bcL2
ghX9V2yWkoGlbAu6TTNEeXXUbMFuW6r5RU1d4z8bb8V1EuPyhRhIDAZ4NR7s
VxJjYbepFbAKiHgBPMMAgM3FKHWIUgAxDOsh5pdY7DpqbeD2EHpgDojdv/Ce
2KzzXhLbmB0zgaTg7odTfTNeaG7vWdWoJ54j5c2D+U/Z2TzrJ5NLt6LbBXPA
JEMeSvD06UmacR3VrC6jPUvv37cZMSaHezicmvJyR6z7gcZmr+39M4bclp5Z
TSpO2pDXkPhdbBJHOkrUaE+tylZLsoINJWIHdiEEABXTgjQ1VHO+EOhe8nCj
J/hWQ9lK7PqJdkmte5f8oKbBt8KIGrimu491Ca4G6Wg/+qegPRBaQGapkVXC
lazwDaeXbS30z02APRB6E8Yjn0XYNlaXo64cis/pLgTdZGgkrXT5QQe1pvGw
Lmdm9Qz3rLmDIvQ4cHtZeN6eUYFu4bjXmFgYkk+/8k0nnbGpQhuuhkKMy2/V
Ct4z4EgiqeaNlT6gxjHAjVuofOKBs4WOQlAJ0+FyXOJVNMuGiVvFaY0tWQeK
gzlj/Vaa187sHpWjd0Ssi2JPmVRmv68j/ao3PnM0NOMMt1Ozo4ZuufMTZbmI
Zj/R/jNl+lz1dUYRTQ9l8qqJosvWnsq3DCcWb9Ecgg27tOCZrRStV5UjvDDQ
4AjUsTJ+PYnccHQI/V01e/hxNY1i9TZD2fQ+LncHOmItOAA25whMHSNG6zYJ
Oefp7AZv1E1ELj88j7X45TAWrPo/G2wGIm5Fhz4OkGg+aSp+GBEtjdfIGA46
vvkmJssgyocf4WVAE/BwKImaQxXT7Wenc4FYRW3M37aqRb/+FAZVQplheA/A
ucGMmNsh4bLCsMGrf9E5d9PvxBiNo0JdmDJwIJmZ+mxTe/dOO9agQuNMuByg
Ke0Z2j8tETcL+amOgY2/7px/KcTn/V1rtkHU+0tq8TWgHc/IkYcEwON5uWsF
jcY7qOnI5VwDwoHV/qUYvj81iRUrwdkKVfHfNrX4LhZn4xo9VE39A01aHBLE
acM2xUVSwpbF3wJuZoTeJWYf+rUs8BNywf/X1rfqLkkBMsAt+l3uci5+2thm
fO2VZpDwF0JTT1b6uTqsn7AbQoNvtbyVEJi3XCJ5B4xjnokZF0R6Q22BmgYx
OoVjNVnelLzLjfOJPLgx7brM7H07e6ZPI4brcCB4PcAx1xT41HhXoOI5nsc/
/NO/IpyYlSwi54kMjmbW7IAIgXP+lmSugG/3KVBu2XXwjYbFQGWDvSuyvkhf
XmEGaSWVBVyeozrJ+U8uuTYrh4sBQM7sBSudu7/9i3JmRM4APK5m8JZSYXG3
aPj6PXnbgFwGhpd/ruMLpZ2OeH+5CIPhxrxTeSuPv93p7p06kRdK9U5zZDO5
xQcrynKVIunTwCzjYvSeYrIgV0VCYV6OldyrDtDKm+F6jkj45YxRcyrOakh0
9TtiXvJy1AsK6uDmLaG+N8xMzIqyNsR8o7/TiRiDW+Wy8zPLMactt+fCnWmX
oqa32D056xyQNUagFwhiGT0jD8GQkeTiq0clYskijHjKuZerB1JjyhO6Y2by
Xll0IgdweDbWsBh5GileNaE6dTV2KRIKGrVNL6Tmhnm1jVRU0GhpfVr+PE5n
1AQxDqpX6DZ/NzL9zHM84Sn1RXMAcxKT3ECbg7b/4D2FeFsb+gaafiVR3AoV
lYeDUtDXQ9NPo8ecQw0Bw9iEKkuuVONmdAYwoXDEV+XpzQVrUlPFKpr4HEJB
8nzaymj/RkMFQQ/wyYO+UHfZFi/oKTzjaY0uEz+FlwEPJ8w0c8vawEywl08a
DJ1i5o8is87bLdcKJE/NGCCB4Dckqf1FYh15PdxVLD/ulYgWYOGp9nC8nBiy
NxTPUEvUpKSB9Tg+PgtbyM+g0RrTzVLS/0fYjxE2IzE+bDSIfyyG/l9NizaQ
hproZJBuWzGlgoy2k+6cUZrqsF75J5IKxtfZ4R1v2WNghkUBemGZaYKksIPF
BtJxDX+rhV0NIMbiSpzRTRWmmKe9bTduKKTdE+6M2hJJERy/7BJGArqElYH5
GLLBNAzt3VL2+19FAZXvX3vyuc60WQsV2hCNd+VoqQtEMnm5hazk0TTp/yw2
9yL8FiUY9s0OWfHn0stvfF1CrZeQDAkNnnpUvlSpRiAVkph/ad50bI+GE33K
QiA9gvgeo+NcOH9eI9bnyGnsLTQkGK6n7FrbV10+SNeE3mKhmsVNTCCPWtAO
AcaWfV9qX/3uGqgE990nykO0kpXxKrExqHikyHsaKkhf2B61nBis5+WIDMuW
zzcGU068awyErcTAQvIIuvtnUNrIx8RYZ9ZNUDYoDggJdfY4HdG0y05Xa6DF
TPcYi9PlfIF2zK2rxE4YTa+7qnKK7RrRndWqaeC4uO8RCECBaN+xcLJfRfXs
FUhj8iz1l3bbT39Wlvn5zrkXiYG+9VHx5E8ktfgkDoBgj1SQLudz5ehb/gLw
An0zv1ezxAY2fL5j8KT3tPYsfwhmv5z/15uC6aOJnmnla/ZGMjOFvq+nZXsq
Qf3U8hvQbTitOdRnNFatVhAUSBulM1DCSjjQOK05PA2QWS7yRqdzNQAMEAIO
Ztbefm9szgUY+3Sxdw3JCSufPdMY/7rxxBWukEOD4ayYoQNB8FDsDtbt3yVV
PTSWpE5T1795otNsBwR6vb+LL7oS7Va8GgsDYmBgHz6dFwLDW0j95EmTlA0r
PS5bbj8oDvV73tj00/QA+hbb//U+A1ApfMPY3w8Fe1fTQIfQHS0HhhxKtgPC
jMehR451tZ4MT0i7iJ375K44ApEbO8w62lkTiJWo2RbGdI9Pr28cM4BYTDk0
KvwR3F4QNlrdjQXG8XNPYDYgKOjyYv3frjyTaSjTWeOEohlmsfnwT5mcz2Bk
1WxiUgX4Tvhqk3fMlaj6D7JzRjztaQab50EECnfZaqDpOejuvCZW9dHUkmtJ
aMADQdi2+dMLvxmZfsaPEVFLr7yFZlIaX9TYtqQGf8vksDWXnZjNTH6rKu4G
2wBV4PO7hsaPJwFePX6PVq0VgFDqSWPw+fpyMqIKYl06GQUzZOynZCJFAY/0
dCfiFvBYcHlpw1j5eF+PSy/iPLcnQY7Q8SfnOB3JqY7SZI31OrX1zU5ziw9w
3GI2Zu6CHianZGwHlaTIRDkDE4aavUXAzW2e1YS82RNOyMsle2cM1zZ4VddC
wUw3F8y0fKWKkFVL8frdh7rX3v54Yul1r8cXXTHa0tGbL6lPqc3jTBYf4m5D
MN9E3+GjTcEucdnXk4kR8klwtHJED4LbTamS4PohjUtsMtu4nYz6r+llNxi5
OQW9suGYHvMjeR5PE+42+TqebAvFX+mIde8zbU6fg6Uoi/2l0NRTgGe1ssWy
rQAaoDEm6JpvxA+g1lnb/A4z5hhyI/QDzVJQXErGlmGbnzJtvWA9tILhORSh
xox0AWa3yIodVW7TA4jfZjSx4io8ZpgN7vEhNOr/lzc56wZfct5mT+d0yI3Y
a9smTDAEwMw1PBhfcBnRKfGdtZwUGD9qBkGKoe4ozrXz3sV402Z/uCxeKcy8
PeIP97xXbL9rNk6VlfRROnOGiYMxQ3SHmWlwhICNjdX14l54vSz2KZZjOave
E3mXy0pbEIdOPFuF4LJNblJDnGetOrgJ/sYt5PFWzHUc858bAwmamWzjAvTU
jyqQIwXIMYV8CNBczYkIntjUGlGJaXpFuJqywZ1KtbFQqjFStlCeZJuv+D95
fTaRKUvYW92Trw54olPvbpuygVmhpI/sMfAKqryoJ9LLz6z51+Q39a2cOJ1x
4OIiMOtuM7LEvCWrTs5LYjYqSZaapiCR0UhmzQ47x9xQ4utN5LgnLycyH19w
SVaiRsfbkS4N5/wuEHdAiZBONOzLBrBpFcDuGafM5y8dt6nZdohdSKB7oX7f
ut0Fo2st6ls0GwNl5xNLr9GdY81KqtsX6XcmT59fIqaOWHkoGlcugnEdZjqC
3VHykjzjKeQwj8kAII80+9qdePfUMiPb4nzkn3/gxFM9ilgyQZ/UPgkT93Wm
+8e814XS8KBhjGAej3Sv24GgyCPJRVfDT8yP3QCDxaH2fYNOpn9Q/bvpWzje
0p75W5zNtVQNFuc0nN4S6mOT/Vl8PdH23vSqW4j00HYX/3/NHxKLr6KDBTSB
zkbaMMA/qHKBmW4PpBetbQx20xb0GUlGvyHhHW1B25pDk99rGuqJH+B/0PJO
ww5NWYq5lly6FYb1yoZg2kSCkOMKBEUd11bTH2tFg6DzaTi0mRgMfT2Q0v+W
fUKyro6MbOuvhaafyksJHHkbplNb52pMlQ0K6TE1LcXkrrboRRVwZjEeHFtf
KuF55cQUM+WJedd/FFf9g+isc0AJmOWM8A8DqxEqY96B4uvoPLhkWPJVktMi
cvaZtsnrsEcEx1gUrAwr+0RzR++LsUSmbKc0u7kHo7JkqEUhjEZaYEdnsvLc
GfwM03dKRv6QmVZM+GosfVHVevqpBthuQHKnz9U9BR2dIQrUDr+oaoctHaZl
txbQdl6DPwruwWuhhkL3NIYbNHlZdYPv902eQFksU1DAo9LzTXmgO4v4RZea
A4p/M8OMp6v/1tl6s/2N0MFH2yavVcQP12CF5ybOu9W0c9ngz6ZX3IDU4t+6
VtxMMWBEKcsU1FjULGLVezI2CitipGZkuXoka08+97gv0DHS4u8ARFRt+K2d
Azm5K3pccgUJngYlfiyWLudLzs61J9Drn+Y0SkDXme4re9qt5ZGsUjkDhHaL
39Du4qrGlZAzxlrLercVd5LLbOGvrE2qoQTXPnGXUWP5ZaqypxItgJcRn+V0
D8wulx1nwsXC5RvgYNqQROwzU8yy/q6FZe6iSQ+7SA44jYH4uC4nlprsyK6B
4CJXJctS0Vbo/5FFGUkv33q0uaPnLTjn10PxYBrOL2PzLqGj9Ehy6Zb82D0w
syD242sNZds7exHZfjOQXvCn0NSTgWJp7UNLF0pvk9gfdjSG8KDSqFy1Hdre
vq5V2xjnhCl5M7P6tmdTy27Yp/Qr16gRCC90rbhxh79rMd3qsJExDRzA95iD
CRWOrU80+C+G7sZBpP0FQBKIlEYHTftdcg0oIVCqPfTk78bgEunxI5gXvsKA
qwB9mTQvwgGzxHDAV6qJKJ+h9wYmaQ1PSP68T7KpH8rrMXJ2Hq+BMCRAn8tH
0LJp+mSVtr7l6nGBfJ0577XYzm5J3b8opmBsMaqQ1eyNp/uRIGOwt5qKqhQy
Jo+aWXxHu7UMxV/Et9HoBIGB4hNSRYAsdkZjuXAYBOJ9vo7Ur2RtPihXzOPT
hbjBdxKpfkwi2Oca/DGlfFa2pY6lemdQ6wCdFD9+O4sFYxBWCcH9VYZUd7VY
cGOhkanQg2QWXskTNBYaNwjO/r1i+3L9+RLL9hof8s2W6OAvOgZP+ml0zgXo
LkBxN+1TGGeYGyrc1d7Wgx/AwSPljRr6R9v71+4IdC9in2KBwTA+Li6JUP7B
1p5l46BFULMV18gM1dE4U52lF/Eb0Vz+BKNW+Y9Jv06ZNKnqSGn3pirdDEfR
T5l1DvX0l3UMfC0EdkBBW5tXoyzl/3MRCRhLwzI90YvwB6s8e8HKY03Nnhxh
WFmZCaiDMCynJ3pZmCExbqS4/tQLHI8/6FjQ2k3+TfVOo1yVEzOux6ps2D3M
qPOUCmIvwLxnzcAEVwA7rrrNmBEJ8a4BVfPTNnSPUv+sCJaVGbXWdFehT+et
YnB5/cY788nFW5xg50C5QjeZw3s+/rUCO+6dZ19KAJxjzOaYUQS1rkhoIMcE
HOOLtNWtLlrdBZdR8qukf6YimNcdNLt1U8+6XVlJ9HNFKvd0d8NmLr7wMgvg
Pi8b9VEVb8kyR2efWyrppko8R0PxzHNy/o8ml2wBV3hYgmWtPbN6O53kFOjM
9peIaIoRbqHR/0pkzSGNE9tCEKKzHiYLbgDo4VOSOFHcNwm1JWDcZaQ6Zkqw
aU8WYZNV2mX2FPEs0eZ5nsggXTMUL7DEDycWb8GGQjtgAriuwzGqchIlHN4O
xmiaXEibwU7fVxxRVkvT6bfl2fy8c+4m0AjS7KK4SRVVnM/L79+2eP22sPSb
Fo/vK/Iz1aauo+mqtaZ7HWKfAS1q3m9gWdv9p4byDqh/68SMkAdDF8D+cbgZ
5fIhcfiP1Xs6DiS6x5QYbHWpS+4OH/PJjinr6SihwjOasfJ6+klLznMb0xdw
VfdLEgrL2pItkB8Adj+Q6hksIlBhzvTR7v6ZrzQFOn8Q7FuF92OYnG32/FFr
z4rvi4mmmeavbZEkDTVPtvhDNNM8LGZcFRvMo97btUIhTep9ssKSXFypRlQa
+0zNDUTqx7FZF9IUaR47vEXKtP8ZnXW+nc5yv2SOP2tsTVpP8kR7OI4nOSwe
4//aJ28YavBGzKfiOVlQOynI4AhAyAyfRkqUSZBAWrhyPZOtlpZj0kMAuqNy
r6X6uKWMUGOlTXZjef+nSCJaHJ5aB0KiWrfMr/c0+GLDkdTUclLCG+FEn3zh
GYr8JMHd4cxaNTRwpDCMvGbUKErlxyb9dbp0H0sd87d3vlxdU/v6WECnwABC
CYCZI3Y4ivpTx5JzirGk37n4qu1OsKPTafK2qabAjlh3vsXXlvcEQvm2zowa
4GiCcIBHIw6gqBnIieQL2LNk4T1mpACsu3HMPuORFZUO4RRD5K5wydTYWfN2
VkBRbNPY7FKl6Onu9hWrFG1HGCvQW0xdQcu6SskmQKq+4Y67xpt9lhP7VR6g
6zXtcsfn0A5He4yOZkq3OCrgBd9le3AUO09XEum+ZPgo8sVEV9Ao3kAmO7X0
Oic0eLJc/HJHdm5ejm1OTKfOoNbtROWOKBi642h06Nx86V5QdIvXZTv9tX1g
PaNMXutatR2zIOZ3J6Kyz0hA89NAav4VkvQT7EQkAv5tYuFl7C8iZ/hXjJlF
d4v2Bkx4zuhg/kE8wByUY82s8fcYLAG6GH/OKv6bhwAUC2sJAXQyAgl7K2vq
CNUkGT8PTajDmjZ2G3okAwzK0gdqkemlpOOFQN0wOMAc+CdCXspE5pzxKvJq
+Gr8BGI1gZ/KYE0Ni3rQf9fU1O5ntM+GUy+sVCOwq/HUr/dMng42sazCCqhX
4yBgahOVAgnrsLrWNtvY3zsD3UsQA+nRC4IoAHVIAG7QViWwYtjWzNZ6V7Bn
2S/FBr8QGTr3CXGtjzf5Oh4Jtkf+GGwLl9St9DUHWERkQL8XHjqbMS94bHCr
NzNrbj+mWPPrd9qpbtgxYuF/l6t+TJL9I8hrjt+IdTTVO/3VllD/Q5JJ3S8+
8x4JhG3nOY8PNvHXDfx0rth5fhaqqmtWmVtGU4CQ7aaw/O9yKwAGWNA/SyB0
udyWaic1sw34zJ92zrkIF/T+1j5D3Ku3FYPvhGcokSw8Ee7msJEGckWXo5mB
WW80BZN3eeNDTLc3nxwC2rFKbXwERUzgKsZoP5xcfLWSfWFxMmtue0nxq1bd
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
rYB4BMkbOpX/Q/6PeOGx5rbxubrhRvGlPSVPydkLlNaXNk/pZLRt/Mnq8CRM
z4Ca/JaejaDVYVpPu4PC1KCZNKo0VPi37jsyOpGuYrNLJCJgxNrSrW9KIMhw
PcdA7QIM5FBDS2+iYdIFFLm1Gky1ESHbdTLG22a66RMSX6Yp42NUJEg4VFxi
BqSeaNVTQhVuZUHONBm8kCtINDR3D1fUhHI05AqUrM/0OUtT7eMmZAKMRh5q
qrV7Wsrb2JMA3hE7zkBA24APHUwjzAx9QVd0yTY9GkGLfRJukQjAvaHqZG05
wSiJIgLySOf+whQEQD3s6HkQDr4HX4RvYPCw/38IqcmJGygeEBDrnNdr0Q/2
GLb/jtrW+X9omLrWTIveAgSE2yEHgfaH+vsv5PV8nw4VTv1JuTW9lqU8FzwW
nomC4gUV9XHGBvSjlZndyldAK99gfNzkg25/6wNysA2cQ9axw7B+iFsUYqrD
pEI8EJ6KV8LfoT7g6tQxmYU63onGOjJJWLmzHrhDdgZVOqwtyZYmXE268Ot1
3acrDqTp2LQDdUiukXdZXdnQ8yND/sAphszMNsJpXmPnTBM9spAAvVQM+d4t
Rkb5RTEpA1nIo9Jg/WddoPHbkkdYx0DrDXkEiZIFX/tbNZkcuiW2mHzjeQ38
XAXi/5y4vqOBaIcjG2/hvd+XWOmF2rYlbBcgrL/Js6OfB9/0L5OzYOV1GWrp
dnz1NyUIxV/weVZmiaidrJ0RvrtlC8HB4jVv0xtU7ms5jEXPPWyIeJnRKukR
xeesvopJse/JwzZwWRlehL2EFQegA3bDjbOUW4rLa173NzSPlRhqw6xkJC2v
wBpwssF00G6aQEjn7OAAhmVwAY/L8j0jt32gyhfJnTWZQ04yNv1KvRPxGuR+
v6lpXfCcpzbg8DLlSrSsrrFtn9gsur1aDBhjOz450pD5oDaaSm4hQrPqbmS3
g8o4pBpKOZfXyBFmW5LN7W1ZcMMheU1fJJ5LFKp2KqAkZFsmKjF4o4PhQ5X1
rW9K9sTzt2IEeRkdYo+tGCeM/QbRI8N8ITpvMyVgo5+ogjalThVbvv158TkU
wnLGU1cQyA3WNnb0R2asT5iWaysCkrBQS2zx1t2SM4gxvjWPb7hqhyMzr0iK
w01V1cdSXn9TyhtoSkkgkKqNz7d1AiOOlZ4XZxmpAJrvqVFOmWnZ9tnCSfAG
Yil5ShmVNisJOtfxMEM8zKS/qScRnnmZrUvb5tlhQwO0MTqp8F8bZ1yGoSTl
VbL/4p2+7e8+A0q9glTloE3T/LZJLCThzN2mgQgBOg2slMOIsawI9hpk8avN
/uHsEV8TASvZJ236ozR/AYFAEEV+6YnwrCvJkAGJMXd0CZECMJkGyS6kurAF
L+sS/Q2HjZYz573f+G9LKHu9ecGNj8vDoHhEqM0H3lPbtnh/RW1kIN45Kacb
LtHWPW2gyh/nqD/G4GpP86zFRrUxpE8QQnz/Ye4QI6lUJNr1zz4An0hDIW+G
m1qPuxt6D+vpxbeAAXC3hh5CCkzQQ57DohRkPMiXTeaLl8HDmGJBIbxSOubu
l9wmh5qsqkTY6p/KuSPSZILSe2a860lDtLHoCGsNpuPKV+2QhTSA0421W1yK
VZkw79usuvDFdt8vK7BP1hgcELQbIg/qM4QLQ8gUGCFAiOgvNM3dSD72g0Dv
WYxzZlLSkAkZ8BvPROZeLXkZzebl1OyVCpNE6jBNoFiAjA77w21Jt7dOCQV+
+HPft6Cq2Ne+YFPnC2LWSGUoELPdzjMUM1aVpaPIjCuhqnuAnqas6Xb55GqP
VXtrVZytMZMiTPKXHZgD8BXsZtO5R88IySTEBeSpTdsoPo7KF/NyQHrk65JX
xKY5JcM/kMBjzPYGfRF8iqUxfE5cDL4k414quP2jwWgHnHhW/mn5dOIRvDN1
cp4kTh0tt3vTDAI1jddqs1m1cc44wRVUqtfloqH15KRdXicj8ph//DnDWDow
FdN1DGsL6HpYngKOEhbjUJaGiNaU0v11HoN9KPyEfjeqflBPkLp+KjzrqhwB
pl3sqf3Ni24ekHg/0Zw13dlLNJuIjZtypCrY1af76NKdzENaL/c2MBobm5xU
s2BU6LrrRHj6uiEgIm+wNS8lQYjLbdSM56bEOlqIJh2zo3bFHA09HnunWMht
CXfjJKV6lbmkQjUZgAKsxJQp2tjPvOgK05NemB6Zc8Ptn1OthJnJBCpmSIRi
4wdr25cYBk+9npOtUhfjN+jf0yohpPP3hCav7lctg9q9EXLRustRJ2SiPeAL
vnErCMcgW3Ae+D1MsMHGy84yOvSYmZq8wuKdlYEuSBKP1cTnPyGb6j9ld0Df
NLQGPP6UkuoGFApg6MDIgfFONOjKI0Fx1RxuWbqVTGm/aS8jcnoxOn8z1lvl
7GLhsUrI4gEFKPVFyb1pCaSWgl4ScMN9qmtJM0WpykJJoULwvEQ0RySBMIDf
eDUhQP7O935RE5uP9VQbPaotJvQVcGV7m1QLTNuBisepdI016Nrjb97XOO0S
Vo5EFY0lAh8knHB2Rqqd2Mdm55w+h+hGwc1ilI6661uyA7d6Z+CGugKKlf8w
lVwgJ1t+ts+bee+YUhZd0ubZTPkCiyXVpkn2ncracA5InR619EKlp36XHBG6
ongw7F9XoZ6AoAk1y26TcO0mipUYDRVqtekIgr/vMUpdZGbcIuFVnmoGLWLa
AnX8/YHes0/InSdrQ22pFWdebJtdHSaWnINFYi2hI5M6AVr9yN97Nk7+MaV+
OHfjK+Lsj7iDHUMt4rBNNuZIxpjhdl9JWWX9KfmFug9Nlam3GajPkHOjllaG
8aYfhdCVUOQHGWUXDySu/w5OOJ/7pk+V7wJEf87XuWxBYXkNrJm3Rhkq6GTN
WOqmMd3g2cpviGtanFdY+oi72ptxOWWsxxs1/igqZJQ/bMkY8JEjQRAETKTz
juoXm+ZtQtGRZIB6jk3haK0AVGsqKHPzPYsdgvp8XNwTaqtZ8htax2IgOOn8
o/IpCVXMnLomJc5BaWgYay02Te01W2DXzVUdFl4eyiixKJOIoX+yccYlt8oV
ker8vja+8HjLghtNx7Ki4yTaNB04IVs74Q50EHI5ubap9t7pSXegvU9JBS3a
glzAgEFgVF9v3Iwt0nJ9tyFEyM4bEE8rmUGb1bc3CFE4VxPYwOF2ztWu44ZX
RmYAwJHw95yVKqv2p1o7J2RdV1vX5GSFL5oQx5YqrfIphSu6+yco8XzdBX75
dTtTE6bMyQkpUrWBpqS7rtlQa+pUzVZp5GuvwiVBiuJ2Ja+/CJEFdeLiOkEh
gXkkPHMDWIxY8Zth2AHsEjRZ0R8etGlTVUbesNJvkhj8l2KLUNzNI2Bzdb9X
7W++BwkA8fTQLkld4aUQLwGMEj8RtrwUnXct7PRBg4sAqtL3/ZpJ5fc0L7j2
laYF1+1tXnSjEruX32GgBVdESxstOmaa+01fres6/azK+vZHzYmGUUeMhjIT
sdmbRumDsPCIxN3HJMV829+z8l+hKat2Qtcxk2U5txZe5P+9KDWZwUTOwpbL
0QtP+PtD8WHk0LrpRr8XPE6LclCNZcqiDak3SGixp8Lffjwc78kJ1zzOcO0/
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
m20qPz/37tDkVbbZjXicijq/R3OUTe9ONb2rFlFEHpIxFrvDc646qVuCbQt9
iRmouzPDLZevUCbsK3TEc+1dExVt76obP5JvrPM12/492dLWnWS0CF2StkPH
8FbUmBCqgSZAHjANgcpK01kpTrm/NtQxrAgK8lUTbEmBSC0/c3U6D/vYF3+c
umDdNQr28EsM4I+0p+iFKqtpTrnrmx0werIy0JWiP06W14oRWds+cXTbnqys
i6dkvVKjSPen+/2b9QBhV4FaM4/yQXLMUv+bToD6vRVa/0Xr3efO6E6H3cjd
vCrHmTxZQtiVgw3OTm8FyiTrG5qSCBaPMgVvsLK+9d3wrCs0m7kAu0s2DpRJ
eSJPNZTUYGNOmJHTh0wXkOG53ogyHzbn2cicjfeFpq79ielau7Ou89TfNUxd
Q0L2WoU3OKpgv9zAYGW170hjtNWhTTFCJ8mYZ+iK3zVCT/RdgxHbsRGEUGTa
oCGWJ6ALSGHVusqBVgi4dxTzbNJcRPX5faBT56Ef2UxUavMUmGt31cQXQMh5
QquXXcfqYO1ceUoMqgbrx/Iy6gDXtVsNNZ67GVUXqi68ligIVQPU9d5rWbJV
dbgx06NVjXS7jVX/Y2j6WutJeNx2aqPpaK+1KmD2iylWD0dmXv7P6PzNh+Qp
DSiaIVqJi2/BU0Aa61PtystuIy0+Fp17NV2aowkrTZu95GhZeWXOQ0xT1SDA
7AtNv+Shxhnryb/yuFclMnPpI5GZ6/H5ADd/k/D9jYr69hMjSxtFuaq3McO9
KdE3TGkh7WJNilMq4fbXJYz+P2uqG9P8DVO15QsNORhR1jSvVf9VsxOs8IJS
PpFtB+LcZOAE7eQL2wrLvAinHXEIp+XK+L4Vbm57orS6QVU3dKIQpZvpW3Ja
IU6wXX4nj+riqmDvuqpQL44TUQJuHuAa8SLQMXF08wk0aAslcKKlTjKqS4mK
0iOcNGTsEKPSfeAmP1qdnZT7U2ecvz7JvLDWrilZnTKo4USa21Knn7sulw1t
OeiGE7KDCqYeZS4mWy6bzp9ke+/0HEXMVHv3JGWJt3/8607tn3MvvjpZG2xJ
yI0lJVxOZcPligakZk9VeurSnf15hj5hDXxQHn+9RAyB6DgQZKR8k3KMk+7w
5FSZu17CZ59yALymUiwRNCmxebbWqj1arRnYuEtlCfzIqRSs+mJl7YDJaR+K
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
cONdxcojdMCOldR8Al93ynXsluv/QWWgi57DjeJBfiMnku6fRyIzL4dNRPUA
/3KupLGMIlZM0sjM9YSgXBeNIOvcofGLZT1+n19Y8iai8TmP6N36hvDbeXkF
L1R5atHPIzRN+MLjhiTFfVd2+IuhyauPjZTD8NmTcKja33xQiXbO2QiGRO8K
kklQZ3BLqDXpxpOF1wEzyrVtpeXBym28L0Y2R4OoKItC48rMr85bqv5llWxc
Iwxk4Wg6KR+ob/7/OXsP+LjLI/9/Ue9areqqrKTVrqptuffeJGM62KEGbDAQ
wFQb93K5NEi/3KWXy6Xc5XK5JJeE3C/9EgglhRQIBEwzhhhj3C3Zknb3P+95
nmf3uyvZJn+9XgZbWm35fp+Z+czMZz5jXGU2Sb3ltV7qttV7t0ptyC+t/abg
z/+Ru6prKUyLM4/hUFoWjtc/47ysrBvlytmnoCD2vqr2JRzCRyTe0WlCtVjl
2OzICXWEfxZUwxahZFx1h4VwEY52jzBhlv5x/BnjWMoxp+zMRQUHkCvoiLH6
T8nS/K0zT6EoeWaxbeaP9rUtupccConYhIet4+mNOwkl9VodBtk6bEgKPmwp
KacFSMeM5OGUM+xjO9ocGffHosrmq8rqu+UCrXEz0aZevmKXZvuBlFauGwi+
9qb7EpW1jYmyQF3CJvnaIRHvHhcDiVkhd/zXMXHRFAvj0Z5Rw1mJ9vEz5Okn
xCWTjTthckHK1uBzbFM0uWPafLspZtaH7uRSf6K6R8Vb6OC9qJI3yzdRm37L
1rNJkt14jmSlG15uFdfZtux+xheoabJ3nVnOPfWTVx2pbJt7pLwmvLemvvXp
qpr6MZCAEhZhgn3dMrC+YSeWGNoFwRr3mU3sB2B+NAV6C+idOrMptgf3Ivv/
4uQrFCP4QIGQw0o9mvYthJBZYgPfzs0vPNraMSGDtlJO7+RwW8eEh/ILihGO
YgcKJW8Gm0huT0dNcBkxMTIp1GX2o3A9fe0mITKypHrl5AoelEM8UFYXHclQ
n0RV4nBpdesj8vEoWnLlfyjvkTavm1Hj4+NXHR2I4tzSrJy8L+YW+RmXg5uG
lwGLPVRQXv9oTddyyh5cLKrYMFZTsh4FWgiyAlMXlphdx15EZQHVb/PyC5+X
LOGo3Z9korX2N+MSrWMSrU9K1D8hTz7M/GiaXSQRK8vQGXJkpfev5R6wSJX2
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
tyDa+8V9rsUVOMFhkgGQM+1+hjZPKDQkLLCbQMJGql+l8pqup0XZiTImOoKs
XxlU2tKy+4ft3aU1CIihH0UVlkVSh8tqwmeUUoOOLAZDHWgounwr9RvIs3Yf
hfU8OQm7lSG9pZCftpWhNV3d0wq6FWo1Cd58eX23PpbfgZW47IJ36I7U1Fkr
dM4whnBQu9mK7erIY+nRKSu9rDaSKMvcUViWzrufdzsdYi4OZkVLnKUI/xWc
/A7+TXUEEyGLNhZe+ykJEzgcOwCndQLCHPAcxZt/E+iAU3m8ee466mBQ+b9t
uXpkWpCSv8K0oCSHRrRt7q1bK9vmoZTjM9ORBbniJZgQh7PNgJLqbwn0YAiJ
6odRes/H2BwNkMjL/5mDUn0rc6b9vK1v2acgQJJJ8DZ4SyROlGh/LB+HIvkb
4aUb/1zXe/FbJVXNxzp6Jmfsrh3unDCD8sMh6O2mEMW2+YfkGjG9ZSeB8hjy
cMTED4gboK5OYc06aIaz0Kl8uGnmWjwNdTBgJ55GQuS9Rm1n1g2/FE/IrodX
5AxmLDIr4TQM6CjDpFVDqsvZt81WkSAN3n+aoOKZDsyoD+wPtXV9MzuvaFxO
Ydl/iaHvO8PWjJPhjvEjpRXVkk7d7dGA31NT3/xpsWC4hdxhAcN3fb52wkVc
hBvKG3vdDj464tr9tkrmD9r5/MkSXs7U+bSe6F7zG/zi57KystxobsZk7v/k
5heSfeWmQE+GnoU60ucCNY3sonCKGhwZ6gb0VHjP9FE4JqYiFUUGiAsKxhe/
5Uenhl+EvE/VQ4X/Jb1XyQu5aaTl1gntZNjdSQXHvPQJ+Tlb8pDSHuro1+Kv
G1JkzRnZGJjZFE+Xb3lBQuTRUNu4jOS2ItkfRWOsxF8tSKfXVmsWDDbOuJ4G
+quti+89FTGZYvztyesrCvGs9iyJm1kyxXX6R91UaKpjniTqmrsTJeVV6UyS
Co/MS3eM+rlNFLkUMYnEMYF7Q4EG7ccnOczlTVMSNT39CStRacmxnfr2qM9X
BsOnAm1zjjHEH7Y0K4kZ6L+yJ9vU1ZmjOH8H0wmcsgflbn/XDJxdiVqX63rp
8gn5QoEccGMG1xasp9gEKqEpQ23TAR8qQrS1EWrfZ/Yr3v3vwUmXqyyksfax
RPA4tm3mTNKDJwlEz8JhJGAY3NAu1mMYV4Y+WC4dI1wVHo+plJbcwgreNcFz
hT6snA/Ck0AuccvDyc2QKyOr52dMjl5UWtP+SOOM6w5KeDjAjrxUj7gI6xmS
kHHEH2w/YKtzCAlC9QImkWOSr5hUIki8dMoY7un1LYuTJW6zRA7FNFLbV9sW
30N8pMZ/2o5+IGJPnH8uvGA91xHf//lA27zXSiubzlS9RvabkTAnvMfx6RBr
ocE1Skk7mQ2+UBao3yj2fJvcnV/nF5XKBx+XGkLIc7Okv8zNzfuNeL30s5vc
iPu38urQBwXF3lbePO0jNV19pDFcIoC0nItL2SwNVuFawGzUufKMw3CxwK+f
Cu6Cfx6Sn1/k9WpjjYqmy/hYcYKzSCrkuaVGP5bPua60vgfYTzQ2fEqlVvIt
p/qjSg1WOnibwGICDrk20Jy83R7NSmjl+KXXJRCx4wY/aHYUS85lfZXr6znI
HLMsMyq8JyN92+xY0A47u9cAJ9MuIFXWK/n+sZb5dxwurg6zHXK0vlS0J4EK
BdokwCHX0Cut69wfmrnGcDmXbgQCGW31xu6MKn3lmcTV42aJZXJoww5s7BgU
/8ZylScC0XmkHmOI2gbSSSUt0wcFFJKHekXbocm9xSCggB7DgZtPE3E7mo1u
7UiOpcw7DX/L2I5JlsO5HwyE5xyRUIPED74MU6f3pXvK2vt37m1dfA+scoe7
XNueUlFKDzOPjIDi9HPWwgUS35xqQavUOTefOMgzQaxhQw2DUwQ05gpgYMwV
Kx9L3O3d8j3dYdBizjTIjyk6XVFs/dyHxDMAhlgV5Xb4Yi232YDK2CBrVZ38
iIohuS+TO5Yz3uhww80SgIB3kjlczUgb3hmnBycCGV7iOZOCr1cGWz2Fjw4K
HwO1oa5nBXnB3cDRbZar7NJoyEqkzPo+5YvL9PVg7+UU8x5vnr2OngCvh5NF
7vqhxunXABlR7COgYxyUZvVgdRjFAi1syR0DOP/Grnekvb+npK5zjKp1kiNx
KNTW80Shv/H7jVOuPty2bLMqJRgD2mkOkVfI2Y99MB7AIkJeQhK9FYjnM0up
YvrBUMdef3XTI3mlNdskw/9GbmH53obmyBnWbR1pjox7QbsiBlQTXqA9IwqC
/gKD8eB1loTQ2344NHutuJN5lEe9MoCck+dr6kNPlfprkiflwjQneE6tmbOu
v8nJFAYwvi2P48W0K3ES50zvIKUNUoW9EImpUsh3roSAfyTStxnBg/mFFc1u
8S9iD9w98DkGdFJXkSy7/y/hBbcDrYY1vvWbEpSvlptEXwx/h7f8l9qe891S
G7ck/bROQZrpCJUjMFPMO481zlzzekXLjKSkXU1DOOGvrNWN5Ts/+MVMFRRk
LoYEWA9Elm0G8qj3GXUwGjwK31c7MfC4GezY6QRbCQCwO+mmswKEzPn/1aJt
W9cVH4OoMRLunDxUWtt+RJDcG5ElGy0Jz+WzRVwtmJBm/a1nHxRO2qNXmJXB
36A3lMycS7XSL/CEV0JRhncG9P6jnDvUgJSjJveC+0TXzSPAkk/O+FW7W4HM
BMfH/JskfW22VF1cZafW4HW6xx0IL6WZueVQaO7Nf8gvrnBaZmdS1Lc6SBTA
1gi89AjWZ+OayTERujAqrSrQWuWaRxSg2M3kM4iuMhM/3iAfh5E1KMLiTPtU
T6R+2lVMUAEG3VQmWTodCSq3RxgQSlVfplnFsQl75fepAyLEymuzeoHm5c+b
Ztygu1oFRlM/VPqeRG+TPi7fDIze07rgTthhdDyg3LIjyHUKcQeUZ0Y8pDdd
NSnfQx9lnT805RK7pW9xbnHl97Kyc188BweLroXAq4tfbYXtxfKo+XcMyO3P
6E/pevTX65oiHyuqClMOYC5dHHPfdwWW+bIY+vP53difjuHLc1JuH2vv+MHm
SM/v8orKby2qitwsaQgbBSGiGcZM0f+J/+cj011ACobLQbbwPTQM8wpKz6F4
d0Gav1vp/N2a0f5OPaPVEcHffSoj4AIWP+MznEYrZJiHfCTnD4r5WvEHaMJw
HswxrOG4oPujQC+6XGuYP2ucofKmxDWaK4YI37+VxhS3HdoETSJGqPB+Zjq0
39VGtVmWpRsJAo9KWPxJI1v+elYwUYmDPGU4W5BId9H1cz2ek0raXnCXoPf1
MRbYoU06Y+4yZiQySBUxT96oqTPeK33U0CMpPU09G1MBu31Bg+RW7CCDPmZX
m9CR4FxLEN4wJOd2RNwF2xPcaj0nULEnOPEKKEpAfKbHn2tecAe2wPMxU88E
JxfBl20cnWbVFeHZXg5wkpcxcdq89LJLiXPd4j+nnBSc8bOG6deCrRYLzoAn
wJPydtGjJJKayJcPmIPagNLCl2onXMSmZhwa47X2tBTQ/wPnU0wVR7cewtSL
Dc1t6e9gbDF3IyShCog0GAiTnB1moBESw0kxzWjI5Lk8DKFGHoKPU7qZ8WFj
KQAXEPqRwEfcltVZv7U6OrTpKOHZTj4KCzwluqDHq5u8RfAOajfHa5o6j8u5
BW2AxV6z2T5ZP83MAzoVwBYbpWjrxiQaSrgwogRSXFQrH9IB1Im6HACtRza6
wlgTzHszu2h5rBwTraC9YaLGne+tbF9MpVork763MddkPlMBKm+sPad5CjZd
UxRoPlJWGz5DseSgv7YVj8VbA7Pg4ZsFTkO+InJAguZtAFFRYvqswOdfy9nY
L3Zk11pno1j4jLzsL1PM6HLGmFi397KZd1uPV8Xru/15DDK8LMGRj8q5YQfJ
29oCsNLr2HI67I0fQ7oDaqz6LFNZO2OtxMwdBjltcHQ4ebgzchHMmUN/3HQB
EMlf7xakDBnz3O6WTTCjhowVkdyeBS1s01g+bTYf7fRlkar6Kk6oFtriezAe
itxs3YWxOZxyWts4Y8Py/yGamHW9l5HUDQrAzti+aTuDkd6hhinvSKqOZWCe
zJXsZHqMlhpcpp0Mp3a2C5f1Ygt+WFxQ85ybhgWpnqifdMVeQeVHxNlKkrkt
blQOrmOT88kWOBHLtxwTSIgTdoOI5Ecg2dNOqD8q3tJ4sOSkmHzENMk3+k4U
W9MqLEXefvsWyegI1ojEAHZpA2OBkjW1mvucDxvA1dzfX92xlAhBbEePxp6F
XCoSm0uD4/5QXFaZkb2P0huvNXZFo4u5arhOVPdcBwJKITI35mG5TPw5UXDY
1TpObTzVGcRqtVuzPxzt2VdU0bCv0XgLUgcz+2o+FACOuYbXxFuc8jeO1wUD
6VWZGqoycau2NECpONqvzH+V25Y75BSVLXsL87ubtvjxyLItlF7+2rJwPQtu
yEDHi4PlOucnxRdV65NCNa76y1ZvBwyHE3tBx7Tm3fo92wPBW3QJPnBcpzGr
7VYdGAYKa2vRLPyMYIhc33nnfUh+sL+xteNM9CroC49KTPhSXVK9PZc5aOah
SfphzYNR7WsUuffB1u61kmhfIT8XjNhBKkZjGMYK4tKFdGt9OfuaZq6FlnkO
Jfp0V5RtsdPekNzddFGJ11oinb8uKKvtyi0KtJhPzQgoSS1NFng8XEU4PPjF
VwxzdKMyR3f4gsAiCoGY1xuW+Thi5W+ATbicAxGzydOQxc/fdUoH6fq3PxKa
eaOY4xr0DyhnvNy6+B5cxEC0b/vdkur/TQxpRICPLwus68se9te0xEorahMr
Lr3G55ne5aeDDZNXDxsxQ03hMlFIls3+7E1Cvv2gQIhT4sXMNGdquB3Afgz2
YcPUa4bLGntHqkM9rBph+RLqqm8WV0fZmOtKfZxl+lMQZOUsbyZKqlq3Ebf1
0xtFfWLEjmV6S25ukhS6CK2E4ar2xXG8YyDYmgg2hTNoFkx4M+nxsZqufpDN
8y0L7uRTYz5bK9vmWh+Sj1wTJw8nzjco1/Jv8gKLk8cS3klXs7bDcgR5EJfR
6zW5HAWfawTDMDxknRCLS8+D+eRGlWgvkOsZB3M2IdMKrxj4X1Ufgo0F552H
YixTj0gt/qBh2jXQiE/YSYLToTnrhsqDHRk93iqjqDN+xqmy2uir9ZNXEdwJ
9MRMICxTov8VnLyKQP898ZW3SErWklNY8UnJ8Xkc+ATXgQxkg3gZc0XLgCu0
LKYV+Os/r8Wfadd838zm34RGx3c9jVzgKqEa0Ss7YX2Xv2Um+TYwY3J+WdAN
4MDFPFvyRz8GQMnCKyDOx+XCO6dCO472qSTaE9HkCuHOzc1VhQK6d/hLnA6R
gPYFVU2cJFLmh+uaO894863/MMSHYldrGksk4bf5xeU0EYlrmoOHjM+BD8Pb
xf8yU2COTqkRN5nJcoW1jzah67jwLkpEEArZhTto1vsyYbvBJUq2YO7nZ6S/
I3YruHM0gn+24KIZvJSzMgdK6LG2ZVtelXzuL/klVW+ipZOejybaOiYkqmrq
E+/7xH/kWN/gmS0fFlenda42yf4kaUq0LTqjAqzqq5bWdQ4IonCMmZiZidll
Rwp3xzmtZXXt8c4J3rFuP92Nkc7eGdh8XOIrvmegvX/H8egypSHvtxsD6IzR
MX6Xv3kqS3Xl6mhr1aKWmKnei3dd6fiv2w7icugLVbUvSqSJmpQ4yYOTwclX
uA4OgNjmtjvotNNBpL8GZDFFpAKgJzdxhZ0sZBEXmTVtObB4QcqxnFVNxlS8
s1GDodKOM3GOBSeD+B4sYss6ziNY2rokNMvLmYw7z+c77/wUchmtbpnMnJ8o
Lq34ZEXLjP+WN0kE5XO6aWRfNmHLV4TK0xEJsYcEdkGD1OVS9eHxr/qrQz+W
d7lO0jJKCnatkCvTQ8ihHanULisPQdGX1Q0/apx2nSC8Jf8psY1hbaI4xTWs
wq1cWG0VkyFwiCu6mnL7WqsyyHPbawL1hGuirSp7K0hvnwjNvlkyvbselF/B
XNfLH8DJz87AZTLZcy43FTvlXb+3qmPx11OLg5QAQB2OtJfMCnI+79iwk7Iv
kjzk6eraM2tXW69hqJklC31jD/BfBtIpb5rEa8I2oeVLpDCKt3VsF+JHeG7r
UgF1l+gWzPppV5M0/7hh+nUgeTw2E31wZ56RDOeN8NL7QMBsDrWjdkk67ctK
q1+y0RRli3VbX3SFattQlUGNhMTn8dDMtS+W1LT/rUkw3pmYAUiP4gs/+43/
sz+rctDidEvHJGgmbs0r7IX98rIxQ2ryzLyEe5l7oUv3lkSMI00zrvPCAtPi
zVUJHxTVKpomDEd6pnoa1k1m4+T4GbFA0/iYjtj070RKBxIGZ/wFQdHkOndV
NM9gMp9lZm4CTfO5DrMn1PpRLbsj8bVHfPKApV4yOxkbvT252OstB+VjwSBj
9oPamtmKS47Zt5Vc340kU2MjeyCZpxFxXWnDBOhFkDNoUNi9UY4WSToDyM9P
GfrbkEOpSFkIJNovWiYWnEqekKNPqhBMWoMfIqBTTmGI0BYox0JIRUQQ+HvP
KAd4we3UD8DGDmbgVuTy35tFPPLlo10v8buaN7ZTgP1WieUuuXe6+WRvJCVu
vtsuaO5EshEZDnKij1G+8Jm9ThBOnb9k3nG26w6a66RK0mh78gg6F06xC2o9
23d5fhS27FPwqanVaw5qWdJfFA8HP/yIOENbt8r7lWQWbHO5x5c+G2Jmi3IZ
3aUUhmQqaYsqflikwifh2kPAhJ2ibrTg77qr1rNsNC821jy7G8fDVbqbTrlO
qS1mJ2lwjXgap1DUX1zVBsiDssAlC0rI+Wh1d98TzbPXUdNn5xV3lCFDaJMY
1DfrJ63+o9kCch8Zjcs42EAip+E2M2tiSIxDRt1Te1z4GHSxv1oZXTzGDo2W
ZFc+UB1MTJ21KLMW/2xBafX+0KybYB3Q7sbl4a+GHYWovW+HNpPEmBIUP+RE
7hW/82Z46ca4BUsJUzpO6oLFJLuLp60Z9NN1Z83giHhWl6FzjhlIot70jPiQ
b9VPWf1Y85yb+LfKeFlFSNyW9awuBztih1Nj9ioNIZUjIHakuX3SmRadwHs4
JZD8rwLzAK5zCwMhiLD7wkvu2WsHhZ9rWXjHl4MTLqVsaU5Ykdvfhr3QvQaq
CLKfCtOOdURUOi8pqeu0OznyJLn4sTiIlxpCbW9rTMpMBRRQiKMwi8dAz9dB
EoqmqH+YY5ZLzQVkrkRHcffYhW+JsXav5hfcbArZbq2J25AF1rg6K6cgI9Zq
hV+MseEWyUtoc9gKApTjq8qCPatL63powz9n5fQ45TeUNSgpiXTKwI4Khge9
SdoVJcHu39jNFRDe+4qrI+pOxPXC0HIsA5bpAn0onlhfU82HhtVITvExy5iA
m6pNPq6bvEs+GR4BvqvzcTxmQWGgGXYXHuAXOXmFR9HOOUtv0Th2FcjnLYCm
yGchVvC2LYThAoAimfzGmYMy4UBYjs/bkYx5pbElgqdTRfIs9TzZSaft8yWH
5naYpyTVcxuWUKTAw/lMeIlANwf64XTkFGhnwTULlOXmo9OZVwRPTKXRJFGi
DA1njPIL2ixuyyOVXELLCeVZa+N8B80Zht1iye611SoSh0MWJSa4aY/g61OC
ZlMJQJnOstWFovGSyiaHQ+CPPVZc2/HdALSapQxY0uyib78B/q8AhO0m3Sgz
XA5j5NRWB9vt+J26lxVJFzPIyLAAPDeqa159Kl3YWGOkdyA48dK3Iks3nYyu
2Eqygwav242Bd4M3dSoKCbhvm2MFuIk+R3YHxuAXDM3E8ElxS6fFAw6W1LYP
jiHnMBzunHy0pKp1j3hKZio5jMCRH4vNcOEpezMdTEwnuQYuqBiB3FhNxP2t
M3UlgXhYCBLGB1XTTObCgUNBNMRmtK6xbs4Esbf0vJw8bIHm64uSVZxLgMON
uGFP2CVNXRf7aYRjv3gLuy0iF5tyzCVwAivQfEvNc/B3x1X0WXnxT8pHf7yw
uOwc0demDneJz+L3lohdYYaakZjcIMC741MbdsyEi34VmrHme4LWKbuSIIJw
nFcA65E4ucfzf/wg3zcvlXedBURGUb2r3xAskxojlK7xRRQd3EbUz9b2XPAd
ucZjVJjGbtfYBh7sJhry8DfhwIBSLXLxI29CR5LjAaLEn51NPGWgtaP3xbwi
/+ezsvMpxY5FDLPeY6d5ddSEOBHuOuDWbOZbQBxxFyHXLka9296DReJVjf+v
vxM9KUEE8Kj/qHOJM9cwg8kaImIBQmFM0dO2MfxAWkB923jsq9hZ29L7Fal0
GCfCz/hd6rnsyxhJ0yptthMXvSPybmON065BUxrwcSAsIKh14R3U94ckiRoR
T3xC4u5RyUJoFsejK3amKJLqHbY7cdKYZeI4HRH3d31b4g/dXjMbCcfTjmFH
8vHGGdchjnq83XBrJXO5063qxBXoRKxWDPu0Bc8wvs64WPk9JwQIQ8dkP3T+
l4u76ZcMRlxL45Qr/yo29qeissp9NQ1h1rkpF7EyMu9Aw1RIhAL/F9yFLco5
mQn7Df/9r7UTLuXUk1AKYnoHtm+7CyVug4Yk30uobdBkAFTAsyb15/sATthH
chvXmaNY8r/irWw/4y507r9Q0TL9S3J4nigsLv9LVW3DH6uqg9583+bsgAOA
FBHKeQ7oM2QBcBMtZScXL+XY3ViWsncNZsnB2ojifJ9KlOHS5hNmgSt/twyb
sfHsjXY3I8ZnW51FXIhP1fSsJKdixvLG8sbJyLl+1Tbh8dUkMlZyDd/HGIKb
hQGrgFlUSMP4inxqSYyEuYI4n9KNIHu3L2Lj3Ef0Up4rqag7V/PNZpA4NVaT
Aat4d8BPr9obUHRbcU37p+QIPFxQVGIb5LmPFhWXPV1cHX2rsKz2jZZI99mg
zzLjMnYZ30iq5QpiIB/8IsVBo9aUDVueH5HUOQYpWRnfu1rVZ/V7DZw3WAAP
2yos4Y7xVnDD/siSDdRROGwoZHMW3TyN2QIpACHSrwkOY6sjhtmmGvRPNc97
17PiF4b99Znrbqu8cxAj8npm39X5yZ2GA/VTrorLwWYAPtYQmcgk+5A/NHmk
Qdekq68YUeaNGXs1GUd2vD25ncSpYebpGJyYfuYUa7YdNbWTqPFAU+9pFHja
+9Eh26QO0LP4hFciiWGyQqfvIsu3cjXY5zBsleHcNi1bp64l1TNK9/3K9n8s
NGvd/woC/ExFZO5eyYUHGqZc+bvg5NWo2aLyA4Kjt8HaComdF+NF4CLRriTC
03hjHZ3ePat/7Rab6uYcO9tJ9KdD+/W6iZdBc2YkFohMSQ8239/sJhUSKse7
5bSzw/MnFeE5nxPr2BQIz+ZAQdXjWNMDIe1xRku8omD3KQ+1D94IcnPa1jT+
RLd+wPdAMwzkz6kE7Rth0FzcErbOtzFKQp8TZPpUzfgLkkDFvgRy4CquzJfL
e84SiL0gyhLI3C4h5UWaSd0iEjd8ONUxcDmfmF4KV4zH4jXhTloWLQnadlta
cRCLp7OeBkdGOQEfeZdEA63AyN+ZnnHv4u684sDo/X+ezou9fjm+87KIDAgV
0L35QFXn0tQEfyG37oe141Z+U/zAJ0pq2tcWBZq/mZ1fuh8ZtLcDfgwo9O02
r0Y9Hf/nIsC9lnFle4DvtxpFmshal8JhszWWWfZ7jW7CD4I7YZAD9736qVfT
2oc8hxwrBcEXJEzva1t8z6CVvaIZ9GyLblLdYaUWNxmBFwMZjrQt2/SLpunX
vyXpvHdNqhsb9wwgjEg0YIMevzZkRa/ZUBHHG3VPnJW+ZnDiLGhvIwKQhswU
wQ5FHNFkGScvJaPuma71TLlmjKk63sTSlavjHRNmxFmNFJq91u3YO50SSR83
bGd2eXa2m73cuugeqrNAOUbVuDjDugfJdGWskBN7L3a+GF58J10L/C4e5Beh
GTc8bbzEuzjPsI0RDaKT454Dr4aMLz9HnhQ/jrQGRf7/J3+nUE2dXVG9j+S1
KEBxgz4jZ8Ec4LJ7bLUUx6Q3XSx5Q0WrOiMcFsMOgFNWc99Z0TIDOEPH1GQc
UFkveUCsimPDEA6klKvK6sdRH+SV/sfmC4ADBnB0ZNW0FHNhfeDPXPOFNrdV
gMvlcbxjcAynl0huF7zkUJ2g+wnmYQbdI5E0064ncKOS56Sy2SbXbjtognSk
xS6lNGvBRNReXAWSoggOhGQfeRy+B0MF0Vz9aBbIFGVl59Jx+bDVJ6FIgtKA
JnCWaONiPq7fzV5SZlIYZ93zOZtvYfNpgXeI69HFx6MxcmJ9rQrGHSivaTkH
xcR6kHebJ+ReuTfPRVBXYTp9OT12bwSdPj6o9SDtNiHFt9vr0LXK9sTI/+R9
LcAYWOv3ZwEVhFREVZ9qnn/bC62L2F90r9mlpDNbulMDIA9IUVJRpG+L66hg
fDzmeTH1gZLa9pExFmUiFxm3izKdJ6KLE2PxJlqOkZ7pnj24BSptF+2ZNuJv
6o1FDBwg3PMePB0ckMGpCDnJyt1uo6jTmIZ3wvynd4SU+U9oL8OIurGJhFlo
W97wytPioVbs8nXhF1j1RiWWwjRTPAi8iffb7jox5DQW0eweMaXZTY6WjKPF
T7xh6qc3I9ECvkP8nrqUy8+GbUeH5jKtD2pSKs0jX2jUUr6h/goQ5nuuvYk1
WrNRoPyVYO9l5Ngghk028yX2ku1ahi+cE2heFPA4ofgcHvKl1CktgRDyiLwF
XhZ6jRtZhWfPiaKgQKpFXwPGqKW94HOS4kB2FwTVXWZlrrD/N5VGOY1ybqni
OEPWRGWmiZgUVNtsK5VmJobIpzLIP4+iKEnHjWKzfAqVoBEYlZV6F0n3U+ie
cWzxLfvGncSgoiDjccqW2wXuXBvxFAHnHPG3ADgAGWDtv23plQQOf20cip99
GGA056zALWQK2p+RLxyLq/7yONdV4mVSvIC328JpT104etA46i+IF9xf1xRN
U631YCHrYv7RuBiSPTctgntXhWMzJpztDhvcNesvx1Os+Q+7DE/77vLlthRz
A5AthuoDXZom29G25VugR78aXnIv6GSfKhcuvZ8NKBjK6+JvUCGDSmTnOZPF
DEZ+qEHKzzY8IVh2v5xY9ioOBlvHnQy2dLOnbVhiRqx59jo3X8lzKpu+hRWR
YvypsVdViIxVh8bFJCUYtqKgxylSRJMC9XmAgkFLYbV7E3Z5df9X7PQVo9rt
FmqRcB2Tz+OUb47boSGTgK1wTqk7bb0B8/kthpQJJX8w0qfLOKDOnjYL+nRJ
X3Jm38p544NxRnsE1f1cC9iz1uJgnmtZuN7usNye1LkSx0IyCc2Y32Ecg1OK
cagkdXjRXWzeJma93xbPITZZu8HE6O/8wEpxwZfA6E3ptJDzNj6/pPYuv5HR
/r1dNcn/H7ZblixQKJCU90oalzwFjRpOFekA0Rtbsi1GfsQvYMGYoAZyA4+K
nR7V42X+AKQH/o9Sw315xVXOlsiX1AdNM8+HuyNe8nKslfwk6+itI4EggQIu
dT9Gh/CSlBxsOuHAmn5ZkdIPqXT91KsUO5jOlZ+36IZj6ZDyTfAK3oHvMX3g
lrBSGDGbac1bhbFqMpwynA8507ftEBGOh0EbqpOC5MJcQKI8Em38n8fwqezg
9t9dKeoyn+icqMY6iveYE8H1xBHw6lR6ABM4AyvP5FpzOlZrPlg7l5jv4dL5
BumzFkwk+vBvfoeaKjWpw2Zl+Da3eIExVxgkBFJs4DDjEvgN+29vwVP3Pka1
n7GdwsszUJLkjL9cO/6C09gp9PV2s0fKk2ZgLqfrp6zW+Z7kckq/8vAaIxNP
y4c8aXcniVVvs6XN3UADKELQ2fAAg8HJq4YESQ3ZBW3m2Uu0ftFhZm2cU9Ph
b8ksAF2nrGwizkqefrNJjWrcrtmEHekVkEGhFf0O9RHD0f6d2DZvnnEDskBG
FWyzyjDVBLjQvP1t05x1XG/6LlZChk7zScvPtdlYKTAOLjjQDxV4giJReVdV
ZCEunB7MfTYZIWKryorxE7nLiirDYCPAwhdrJ1yi/TePhCDsBH7HAoxizjYW
50yMPh1WS2Al+aGeQMKjPQiT3WQ7hgsCOq6cQfZBRYXfd7OWZ1OSerywuPxX
8rlQrqOK4ptkTjXImRBI2COQ401IE2ytkZgPkiey0ZLUoe0O8/E+bk2Rj2k9
Qg5+je9R6gAf2YWXVAKoGxE4+TEOgr3kqFm7pIeahpIAjVmX6h2w5ED+kOjg
z1ySAl4ABPGcXA3k0uzvvu0iTvffhTWsP3ivuXLsUweVOtV5hh8g/tgrQR7C
TcTn+bNyCsw9GufSNcpUfIPqG//mnPBvV2elt0to46yeNphbcLI2T3cIpNjs
OKHgaPqyJ23/FlewL2yIJFYaYpeEwHsIs0eMytoWap2pKeXzPevnjIzOSMPU
K9UnJJfO51mfMAmfYORfNCpvNxZUdozqrT80za0YZxwW5ZmjEl+OC6R2dU/3
qhg0fsG0fvOdLuWbkSUboYYYvr9+QHAJ2zSCuA7d6iYfdNiWR5PTsPJvMNXj
zXPQVLma5s1pq5HPh4IwRf+KghwXV7fVyXPhEr5XP+Wqo5G+zbFUAlXC80Jr
YxUvOpo2ll3+YFXnMrolZAQ/apx2LWx5WpAWM2BHxqXPuVn5VWIg8LA8Qsm0
bs1aTWPG2BaHmKhpE4d8XAOGgVgD2TlFBk4RPEr3e5+vUyUaU8202yX4OfMg
GqF9piJ3Fjmnh/IKSsoExhgRsFxgOSbH5+EVNXfPSdEfKBXSSCKO4+Qou/aY
D+bGf4BX1hFkb7E5GFZvrbIY67YSOlexFxroRbaASKJrO+AZtOJreWyMcAAt
HA+E27C9Mjr/y9bqQEpXWRsi3LIb6lxll4+LY7qTMN3z/xNAWEfwfvPrKAN9
1JZ2wXjMW7oQ4BSE+Lj2bbU4Wp5DRs7kSZL4N7/Pv/+ldtz5UPsx95jV8sVK
iID7wypRsh1EPaypuu5hvJ/HHIks2/xtuZSaBUSN/D/NgFMSSUea592WFdeC
TNyuV3TyxrawoM1SfkThIH1HX7Gy9CV/OCRYGkdkGp392q6IKTeiJjrIoFaq
65TrBAaOl1S37RHbPNK2bIu1s3yXr2gR00P3MMEZB+ELMXIKJjLoY4VdmrVi
B3kGtOskHupwqukrdjGRTHuFMUNGrvm3G4hBVOOZ1gW30/74kUqHL7nP+QJ4
Fwe1b71ip2n4FOPojkaXbaaGcV9FeDbNN7ohjzbPvolBO6OPNXPN+NSwXT6G
/l6bWL+3sn3Jp2uMfWgX3jymEMVMOJYUIb5hoyJwGUROiqKbEEwamkOygW1x
MJgoKTAVNWLs9RIQH7biRmNpGxmoq2x3qiSXmhUos8gxGC6xUZ7uIqVR6mQQ
pXURwURzgp3BerSRc6jx6QmV3+ONmQJL8XzDE1nhonWbLU/QE3Q9ADIRuj3W
GEroAmPz1Ij5OQUYIDGpWXd+SRU1IL5PJZe3YH6t8ExlDT4YEEohTvffBwZs
P/QDxqpJ9lyZhhIGAM21v123ZmEKciSrJjoNJV+UNlyiog8QR0YWiJf+Wl3v
ZW9ZsUwTAhtd2m36kSw0Rmx82SZn0HLmrgaHHtCtwnLkWbQq6EgXErpFq3aR
QEKgv1tDleI/rNip9UCEM5PDeiUQv+ljxipCk1/Usn7/DjcEozR3+TQnPZPK
xiv2uubPYGvHpKeLAs1PNM280dFAHdtiWFezst45yYpIFSgkmTluC5ox+bS2
56m/M6hrW5cL0hFAHzUd2UORpfdjxHabiyYycgE32kRoN1ePwqym36FZa+wK
2I1mAeicm//WtvQ+t1LMOp9icamKQ2h6YWFgS9rqvwnNWQcAoRPyf00zbtA+
pUmM1YZA4u4kMx3FwXBdPeU32OjDDedQEExd2KYhSWVBadFmxK3MuXv+gGM5
wqhQgcYJEXY6tUYVp+R9OhmfsVR8IsbcycujggJog6zTiYz2xdSrbDjH1tBj
oZdPUyWsbMbzzptq3rgDtEqssnHMsdmJVdaFFTNy5tzcuyWtYKiOHwBtH7BF
CYr39PRsJ6GEQgNAGXiLB4ZJROwkQ36vpVOAedzs+lhESYMMcpzBAadAXsba
z91rsUypB8yl4o7REuGZ4KKS6JCZGEiXw4A86IcXgSGRm/Lw6t2rOnQ7e1pI
t5Jg7pL9pHHGdQy3AlxTcbacqHwounQT9TMC8pD4hcHQ3FuH2dcpMYtBFEUU
le2Ln26Yek2srK4znq6zn5sme2t013ZbpkJFsofYYYbD3HQdO0BpIA6JmVBn
cNv2lOsoMRyVjgySSigl+VdZ/wLkrOjKZC3PxNx+jclKX4iuSLoAt/vODbVS
RbD7RZMELUe84HvMPbDbUPA6PZfNWbrepdJxr1BUGomap3zNrjr3WjobzSj1
nW5Pl4lDRg+1gs/ovlBzd7iZd0qsPWQUqXfw+2vLmiZZ2XiM0qn602qAsMAP
KFC7lj/VHMuboIdIlHvAw4fiWAPpdA+KofUow5CA6VnJc26pmhYTkEgLWN1D
pgi3j6DkADrFT/hXVNEogXM+8T92lYtLu3WJkIlhumeNlihjFDgAc+BLSFu3
esSTnEocrIF77YmmowpUgMttrxfJN29Ih2LlFiBbfKGVmWYvwL/KK5yJupiT
uiOOZcorcHlJiyyEOVPEt8L9D5pHUTIk5XDMLsil3AB7rS+wI8y4IOtQ8gE7
VB7pV8CPcMVL7TiZ01LL7/20aeb1kILd1jHbNdOYRjQm/x0MNHSwTUuHx/m7
3KfTTTOu/3PrvNu0eCqI6EtyX041t/dmECrqPAKx0+ySN8XmGsGjNq42zrhB
h9AFhOs6If4vCCneNP2dVgdvNyszdaWR/A5F+qE0omWIYzZQ39pzWj5y3BIV
afjbaY7d2COY2+F7R0Oy2HqnKdvZMNwy/w5IVNoLaJ5/eyJqxNr+R3LqXzXO
XOMWnWGgWRBFzRIBbQvUDRtNtC1st0QPxk1aAMZNQU9ewMb/QaMzs+WnjTOu
p9xE5YsbQzuPRgJxnJ/TXQTjFiZVHHIB0y55BEzqEKjtfQPAqdFwcjn4ZM64
ci2VWzOmYEYmjpCZ7Ta9LREWM7WRxwkmenOCgIY4FczOIm8QIeZGRZh3o35m
nnkVimauxwbl34JP145TqoQpLZBFl2L7fJ+npHrOD/ABRLRvWAVVfpdE3xx9
7WK8t7JjCTUXIjGj0l8SCPRSYXlwX3O482zsQWu1bqzO/YFGAL43M1U6Oio3
AZThbJsL6uUuuW4tYMWJertGAb4SlMLfJZXusuVEqB2vy3tWTr780a08TgOL
WrfESt3qmHr/hS4PRdf0YNOsG/+ltnvlSoENfynx12TEu9xReqYdSdhY4HZw
6FrZ5jm3JBhFYLsO/5afWYaPEyLUuNUw7ap0unOVU5iIq8C8Ga0wAHVFMosd
0tV9/TtS5TmzI5eUVAD0xpHQ7LVs4YjLuzRLOMa7DOCkJLYkxxAWIDp8Ndh7
OaQHGDk0wiwJQWvv3maCEh/MlMcWCPK/Cs1c857K6OKjrqmn0XfFzoFI/9ZX
w4vuQZFS8a18YZM/Ex/JEhIoWm+El2yEb0jU0GkC+aKE/Amr+khJRI3KpnT0
v9CAo53mICjHn0ySEovGzE5jGueQHvlSVnY2R9wQ++Ch+QgCIOkbLB+ffNQG
T16Qkj/NHeSX8QKoLCwy55O/8kCs1gVP8Lt7n5x28+3ccs8MMiSny1IhBJ2c
sGteYQJaJTJ2WMCiSUrdzIn8PjTn5mfEFF56m7piFoFABXA5tnNdbHzV0VO+
jOiC78Pm3QAQ3HYjZjX53PZG5FCS44NRYlNJHP12JbkRudIV8tk/Lg9H/I9F
ZZPzS6sZ7ZbM/WrKTPhqzsvetkX32ELstpjkMrGWUaLoBZ4VelNOyYV7TIIG
KhLHrQJ/UoUwKa95lRsFchhT7dKi3uT3DAYucIPaKsRCrKobf+FIWVVzep0/
zzt1HLPrqrBfQ7wt9ZTHd4J07bPutuVy7UoPtS68Iz4aoVc4r3O0pCqMUjFJ
7OOhWet+F5pzi9UuXcnsJ7b/Rnjphl+KwUGZIwmGHEjS4DMwOMjs5cdqevq5
b2hEMsWUQtNA3OWb6MLDbZGTWOCiHiEHWU+q1j9vmn4938MIN1UAIseroyUF
0nzPuPUCoB15GxovVM9pjVGaISkFOY4zNns2CQ+nFeu0iLF1xGLJkaD2KcvH
tMhzMQzypcutKrx2tUyilk0E5VEqKWBjIPKR7m3binMJ/RiIGIxQUtuiPwtB
AwO5SEz6K4LFObPfkMz34uLqqJ0J4tNQ1Ptx3bgLnynx156Dn2ZHhZxag9fc
SB9xLwBZq5Hk+4h5EczI/QqQmKgJGLfGi/W5koJNCwLvF/T8rDwMZb/naoKh
1+oa214qq2x4UuD9w9WdSylI0qx02x6hYH+xbvxFx8WHxEaptue7z8GcCYtZ
fxJonXWwLtSeuQIqZWbp1RxCoLG0soxv707YDkwsNPPGeBXxqLF7pKFtQoxN
Yk0pTauMbfGQ5YbwC1ZRQadjon07qHaNJJvURXEJSQmxnERw8qpYaNaNMV3f
2IdLmT56VXKP8ygnW9t735ST9pQY12NNs246GjWbhcgBmTwmR3y1ddG9rBN7
NDTrJpAjlB1aQW7sj7zT5Zf8LlEPuCEprlJ38HL8/J6KllkkQNxCSM1zCgNN
PxZETlv/D4JoKZIwE8H4IURleiPa8LG332rkthMW3NaMn9qNl/SLiV+UESlq
GsPLX+gbWwVDOxOGx6UzrQQnClSMLcNySU03M0ZyMeQNJtSIr5qnmon4bOrF
PIpKkcWY2tDEUEgmKfUY3kMJb9wtpnmgVFJgeZMYyzPVdY375Myijf2svPn3
lRgMbYMMPRs8/dmIWpYAD+D3Qsx/t3It2kK3Ye2j5iMTq7lSbhIZTEyNzhLk
XAKrhXiPAMQTeYXlA7ZvYRy3QvvBSNfk5wrKan5eM24l5RhVv2hdcCdtPzL7
I8GJV8StXqonUiHr9WrNuAtZSHWsvLYtY1wlN7nySHfa2qqNt/viaccmkedu
X9iWcnehv4M0kNuBpNFx9fXrEzXBxkRrpDuzxj3Y2jHxdGltFOFCs9vhfJUX
gw8P4jBjait2IXCYsGMy8D9iNc3j4hUtU+MSNUd7lAlej/Ik2wBrxl98JLqc
uu5W5kqwmCEzTXw308ZoNHHxKZ9QJjjVrkx0Bm3vYTLNkW4dDHY0fbrfWCaF
ig9aEtIqW1QndWJ6+U1xgP8sMYSGDlNHT7bMveXjHvTD2eaOUZOxsiEQHcBn
Mwr9DQ6Xra8wFCxyxvEmao0pCmHh3pjjJhZUEgx4t2Rc5H4gRuqKF5uTSNmR
B/Kh3CLd623hgSzVtn5ySR05R88UlFZnyGRr9e9kpGsSa7g/LNhVQbYtjhJA
vyYmdjTY3JVmXh56k7HEPFfPxtaJm3ghEkNrWR83kR5G6ifsZfqHyvZFFH+p
SNMmxtqa8R52otepsu1ram3PQHxJdd5Xmlqjz4jP/PfaCZfQsv9N8+ybf9E0
Yw138WT95FWJNLvS0IRO3eHgxEth/R0oa5gYGzWzkezW6gIeFvEAnBQMpqHE
ldpJtCgxV9Gh3KYxtvY0JP7xY19NTJm5IFYeqI7XNLSiZXy6or7jeblXPxQg
waF1ZUYO8qNNs2+iu8iBHJYDHysfa0Ckd2aiyB+MB2pDiSXnX5F48NPf8mSf
PdxdtjOKD7kAzAYHi04mTAS3zp5Ruv+TZAs2wq+bZ9/4kaqufsYvDGPy/J3P
tCxY/826yask7KxlSMvuu97lLYtSdKG//Ifmee/iFrp1PQKupsrPNuIXYEqQ
1NHxcjMabC62epiX2XBVBCalIF9uhXXoQLyzvKGXai6Jgavrm4JkHvAU1hOd
fY47dsluQhuaqMdQ4qQEiC1qW+UKYyWUL2zvcaVlTGiVHlV4noL+ZSB1Dj8v
NueVaLY3Ns+dwyMt0fEvF9dE/kncATHc2s/lggpR/D0HI8iaEO+ROhJ9UTfV
RDpsTeifTByj9+HYkrz7DRWGCkSXMS0aFZX6031tifO1jxWX+ieel51DR3mf
1WamjYKSftyjf5tjF03YtwtufFTMG57zL4K9lw+L3xvGekbtgumaalbowRfM
GJ72sP+Sw9QdNnLttpv5PLthUrLLjyVmLegbLq1qOi1x9JAc2CdCM9c+VN29
/JggCd2YIEHwUHjpxj8169ree1+XROe0v2lSjAFLRiNctsgOlzmLzk/4A9WJ
YGNLItrVq+sMLrnypsSOB7+QbQOTFaJ7pWbc+Y5JRAOGdUmnrX1AQCSHYkQK
ePj70NxboPsiywe0owj5TKuuhlujswL+llknBP55iUxG60tJjDskv7qFxIWl
mJ+XeInINaxvCiw/apz2zoDkVgyzfEEQ+h4rqsx4BEnQbF1vRZdRD3ijTb89
1B4dKvK5L7PxU/lnZ5kVoAIOG+UmOytAAZ8q4pXmVejN80DlJhozyr7K0lMh
Ebkpm7GF8JLpxJ6yQD1q2lQ7CLCwglzFA/P7YV5pzdteG26bawSffisXgxQM
rHwIyzqYZfOqT5hrwLVy9VC5hTeTFIH/7DYTfvwhuTyH6kIdaUqFt299qrq2
4V/kRdgvtrd1sa5PxtmBNOIV4VmjBwL97j0fDkXGfVnu5zcsyGRCaAB47w9N
e7KoNDBSH56A3r2u1aqKLoJtT70gz5QmhqNJN+xgX44a2ai1IuVuCe5Q/ZTV
AwKhjooHHgjUd4xo5dA0/Nm5O0iLUSLOX8QHDVU2dCnnf/Tej/kpfDtVy5uT
5Vv8iAAkD06qZVfURX5V1jDhhGSq1EMOhbWnZlSttUtv+IbM/xxuW7ZJAsQ7
UWnbH166Qav6bcu2Qm9giIZRNrkNpcgrDbK2wOgz7LCcRs2jBtv7tiP3i+wp
mx/QfSY40QJ8w26fdTswITbR7QJRwpfBzYJDbCpFE99RULx5eaNdNmRXXp6V
HA9DA7OgSQR/i/28qLReZ14C8hsPBEBaFrBqljgQSY3TilGOofWWbw5fXcMD
4g2+5klTNP2yM8hTJN49KynWWFs0vIwVG/7g1VGdxLkop8jYyD8bGxGTzLmx
rGnSHrt7RvzEwqbkuI6OVNsZwT4SMtb/po5gJ84UaTpWHv1C9YSWbDjStnzz
n5rn3yY57rWD4sxipcHuscIJVb2TJdWRO4trOyRrXKUjLnIGUFLdVtE2Z6bc
hCHx/2h9HJN7vje88G4GTOK0kOl40QGjtN4oj5HHxcTJDkWWbUkV5FYmcV3D
tGsyVlfkuXJGvG7chaN3xpYmF52V1XUeFOj0F7mfGBbcCrUGt2ICw0lHD9OS
vTp+tnjF5Ug2mkWRbT3xgpLAyfrWbtJA+LCDgfDso6g+t/e7OrtyXexgyw7I
6nL678SSJP/ZwdWlsYGoSo8dTgchU8uHDQzPhWoGQtjQALEUcAA9SdMnW751
IAJhXveNbHu6df5tHGe8O6k0PSHqZF+y1WKq4bhZV40AxLjNTM6EFjoZb746
kwfnbMxxeGOMdlGGI/LpPOla8xKUD5TbIPHJmRC5mENDREOPCWUMaRR4sxhq
+m6uHgIJn8QuhkBg9c/ixvaVVjY9W13XCBdktJZJzjWWqAV/h3LJ3V7QVuJd
orBRPu0f2E/ZNOtGd+Um2qk/rJ6Pa6ddPyix4LeFJf50QFbqPOzjguM+VxGe
TfShGsV90j0E8nclNMqpH5JPM1BeF/VloQ/jq4wLuEJ294RkSVQjEIE9bWtn
rFy5orSui9J9zBIzSBvwnm5poBbRypom0zO2S9uzE9WS4svnj4llaxSSWJS5
P8pFfE+RfEQyyzGypWRyh3jxsOCOk+LfdKPQGmtSxCIbh8YAE7oKAaFCujol
ZX7W1thkt42fo/UPDeawfBKukh0L2cEnduvqT6nGjtEQoRIBWZZCORoklHrh
CHOlKayb9a99WwdgejWqZPzleMkDyrs3YM+KIGszDnrKtaUNva73Sarh5IvJ
nhlOJ7Ox+IcJ7U9bajR/IH7ZDvJZ2dbQQSGSvEuMCuPqtnq5NxuLmGr5Yqra
ZfUuKyU8OboK46lVKfA2eq6hKDOL4YsX2ZRSjGLPodtt+K7y0BSmtz8jFrpS
EKRjXhhqWC4BxPWeqWwqUfQu86ymeFCVuaxub21DmLrgT8TVfNG2dxFUFLez
wnW8MUc+fcl5WTmZ5Gxz3NrGBJHydW9F62y2SD0r2OWRppnU7e47pasw+7a/
IRhjUJ5+QP6okLXViuLMmMVDpmdLpMTrUtrUGYmoacacVKm4/h2MXCbKg53Q
qTza2yWwbxNd8j0sqHH6O5Vl3cheJfKc+bcnKlpmjl4hkO8+Cspyp8rqx52q
qO/I6Eon14LQ743LcdZhC8tASGzY9XG1rGTkzjNNs1A4UVpekaisrk30X3x1
qlDenrGPeMqwhIyTdrZCmeYq7rBC1/u4LpOZge/bYnctbEN545fiOo4JwmVd
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
4rzsmlvU/bd39yaCja2JMn+V2snW938my6plu7g1buL0BLkfD8/cINYa7d6f
k5tPxYkZgEPhZQIm+3dSkYi7igQhUbcD1nedqmvuGqqua0rU1YcSl119c+If
PvJv+jrwOnn+dDMtGYtrYUPSbh03l5g50tI5yvJtzBluEbBIUoUp5aYQIbMp
fxPv/qEq1NaMwDAkOFAEVTAGoF8SX/y6ePc3/DUtR4MtXcfqW7rotjFuMyQu
0WzgKuTmHLKmhDotEIxC1l/lBp9r57yt4Z2NtMrf+R4/4zFKZjfChdleRTCn
ouiRROjxGR6fFtC/VxlZ8LfiQNOR9u5JnlJSDqWkQ+3dE8F5C1OGQ+vKCZYB
53TU+bZRoG103S8Jxh8uKi6dnZ1b6JGKLCTe8mad5jVhD9bqtbY6rirBlq5O
OW+3xPKXyqoaXq9rbDtSWFw63JSJLiq95O6YAO+4TfJfal18NxWheMpmHNMg
qXyWqYBqb1O27vtmvwo2c9YOZ5HmAz2909I6nN6gxfl+x/Xrs/mGWB5AKxzt
frKgsIgDIG57WSw066ZE2oRFlW25zovVTb5iv3j51wXPjDS09iTeccN6tQhe
5eNfekiixGIx7rNSLJys2m5fDqXIoYqGMy1g1cxKPkOubSOIEzxQF2p/TbAI
iriXldR1vqeyYxF7VRmXADg94A9NO1Rc2XIy3DHRc9DLlbIX6Z7Cz55umLL6
qZYFt1EsZTzrQGTpBlIe1J2ekjvwF/Hj7C3JgMb53kGE7+Tkl9wptkiGoQol
FqEBYQh9hBBAn1K6jWJGtjtUWImbOmAPhmPGgLuMgeSAq36QV1B4gBQ2vSK0
P9ze8wM55RUp1IW2ohMq40XSzOLvr9tZQgKSJ67mQLF+nWWfqwal3Z2XWYlL
XHHdbXrX0m5ocrKIcg+TvyeV389OcAEmyXzlfE/uYuKMKl/IHWGhfUy31+px
LIxXBKOJ4vIaZ+lnaVoWj2pa4g48deNk01OMRH7n/nf/s1gFBiOJzp6a+ub3
FVQ0HUJWtCzFPTWHKmi7M5p7v9Iw49o9EnUhGR0JRcalWcDk6QvigZrGeFFZ
5WmJNxAzoNOdEH/2SHV3P1O6Izr3v2Inagh75aoP2S0zXl3rRHNbR+KuLR+0
GKzMebbXyqtD+wV3UWCm4Pxo0+wbKXyyMeER+f4bkpgPt3RMSvdUZd486FhZ
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
mRc+//+3F0IH/T+XDqOr\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"036bec46-3d6b-4852-8c2e-bff24b0916b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:4f9d\:8d56\:56fe \:ff08\:7b2c\:4e00\:5377\:547d\:989847\:ff09", \
"Subsubsection",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.007332696335403726 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8302784758621197`*^9, 
  3.8302785329732237`*^9}},ExpressionUUID->"7d211b27-0a1c-4bfc-b930-\
9ce46579d87d"],

Cell["\<\
\:6539\:7f16\:81ea\:ff1ahttps://writings.stephenwolfram.com/2020/09/the-\
empirical-metamathematics-of-euclid-and-beyond/\
\>", "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.012407399999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.012407399999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8303568382882376`*^9, 3.8303568680997286`*^9}},
 FontSize->14,ExpressionUUID->"14d9ceaa-4590-47e7-bc72-c2959db8cc74"],

Cell["\:4ece\:516c\:7406\:51fa\:53d1\:7684\:6700\:77ed\:8bc1\:660e\:8def\:5f84\
", "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.830278489775896*^9, 
  3.830278497866995*^9}},ExpressionUUID->"290b1dd2-23d7-43a9-b2f3-\
8df871c6ff03"],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    TagBox[GridBox[{
       {
        StyleBox[
         RowBox[{
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"CN1\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#CommonNotion1"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9843137254901961, 0.8803921568627451, 0.6352941176470588],
           
           FrameStyle->RGBColor[
            0.9686274509803922, 0.7607843137254902, 0.27058823529411763`],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.14\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition14"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.47\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False]}],
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]]},
       {
        StyleBox[
         RowBox[{
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"CN2\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#CommonNotion2"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           Background->RGBColor[
            0.9843137254901961, 0.8803921568627451, 0.6352941176470588],
           
           FrameStyle->RGBColor[
            0.9686274509803922, 0.7607843137254902, 0.27058823529411763`],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.47\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False]}],
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]]},
       {
        StyleBox[
         RowBox[{
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"CN3\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#CommonNotion3"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9843137254901961, 0.8803921568627451, 0.6352941176470588],
           
           FrameStyle->RGBColor[
            0.9686274509803922, 0.7607843137254902, 0.27058823529411763`],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.14\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition14"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.47\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False]}],
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]]},
       {
        StyleBox[
         RowBox[{
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"CN4\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#CommonNotion4"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9843137254901961, 0.8803921568627451, 0.6352941176470588],
           
           FrameStyle->RGBColor[
            0.9686274509803922, 0.7607843137254902, 0.27058823529411763`],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.4\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition4"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.47\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False]}],
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]]},
       {
        StyleBox[
         RowBox[{
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"CN5\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#CommonNotion5"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9843137254901961, 0.8803921568627451, 0.6352941176470588],
           
           FrameStyle->RGBColor[
            0.9686274509803922, 0.7607843137254902, 0.27058823529411763`],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.16\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition16"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.27\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition27"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.31\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition31"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.47\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False]}],
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]]},
       {
        StyleBox[
         RowBox[{
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"P1\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#Postulate1"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9843137254901961, 0.8803921568627451, 0.6352941176470588],
           
           FrameStyle->RGBColor[
            0.9686274509803922, 0.7607843137254902, 0.27058823529411763`],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.47\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False]}],
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]]},
       {
        StyleBox[
         RowBox[{
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"P2\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#Postulate2"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9843137254901961, 0.8803921568627451, 0.6352941176470588],
           
           FrameStyle->RGBColor[
            0.9686274509803922, 0.7607843137254902, 0.27058823529411763`],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.14\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition14"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.47\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False]}],
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]]},
       {
        StyleBox[
         RowBox[{
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"P3\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#Postulate3"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9843137254901961, 0.8803921568627451, 0.6352941176470588],
           
           FrameStyle->RGBColor[
            0.9686274509803922, 0.7607843137254902, 0.27058823529411763`],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.3\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition3"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.46\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition46"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.47\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False]}],
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]]},
       {
        StyleBox[
         RowBox[{
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"P4\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#Postulate4"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9843137254901961, 0.8803921568627451, 0.6352941176470588],
           
           FrameStyle->RGBColor[
            0.9686274509803922, 0.7607843137254902, 0.27058823529411763`],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.47\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False]}],
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]]},
       {
        StyleBox[
         RowBox[{
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"P5\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#Postulate5"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9843137254901961, 0.8803921568627451, 0.6352941176470588],
           
           FrameStyle->RGBColor[
            0.9686274509803922, 0.7607843137254902, 0.27058823529411763`],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.29\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition29"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.46\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition46"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False], "\[RightArrow]", 
          FrameBox[
           StyleBox[
            TemplateBox[{
              StyleBox["\"1.47\"", 
               RGBColor[
               0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
               StripOnInput -> False], 
              "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"},
             "HyperlinkURL"],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->10,
            FontColor->GrayLevel[0]],
           
           Background->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           
           FrameStyle->RGBColor[
            0.9235294117647059, 0.9372549019607843, 0.9784313725490197],
           ImageSize->{Automatic, 20},
           RoundingRadius->4,
           StripOnInput->False]}],
         StripOnInput->False,
         LineColor->GrayLevel[0.5],
         FrontFaceColor->GrayLevel[0.5],
         BackFaceColor->GrayLevel[0.5],
         GraphicsColor->GrayLevel[0.5],
         FontColor->GrayLevel[0.5]]}
      },
      DefaultBaseStyle->"Column",
      FrameStyle->GrayLevel[0.7],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], TextForm]], "InlineText",ExpressionUUID->
   "b51be6bf-81ee-4cb4-bf3b-a6caf9cee781"],
  Text[
   Column[{
     Style[
      RightArrow[
       Framed[
        Style[
         Hyperlink[
          Style["CN1", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#CommonNotion1"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9843137254901961, 0.8803921568627451, 0.6352941176470588], 
        FrameStyle -> 
        RGBColor[
         0.9686274509803922, 0.7607843137254902, 0.27058823529411763`]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.14", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition14"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.47", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[
         0.9235294117647059, 0.9372549019607843, 0.9784313725490197]]], 
      GrayLevel[0.5]], 
     Style[
      RightArrow[
       Framed[
        Style[
         Hyperlink[
          Style["CN2", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#CommonNotion2"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9843137254901961, 0.8803921568627451, 0.6352941176470588], 
        FrameStyle -> 
        RGBColor[
         0.9686274509803922, 0.7607843137254902, 0.27058823529411763`]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.47", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[
         0.9235294117647059, 0.9372549019607843, 0.9784313725490197]]], 
      GrayLevel[0.5]], 
     Style[
      RightArrow[
       Framed[
        Style[
         Hyperlink[
          Style["CN3", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#CommonNotion3"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9843137254901961, 0.8803921568627451, 0.6352941176470588], 
        FrameStyle -> 
        RGBColor[
         0.9686274509803922, 0.7607843137254902, 0.27058823529411763`]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.14", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition14"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.47", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[
         0.9235294117647059, 0.9372549019607843, 0.9784313725490197]]], 
      GrayLevel[0.5]], 
     Style[
      RightArrow[
       Framed[
        Style[
         Hyperlink[
          Style["CN4", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#CommonNotion4"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9843137254901961, 0.8803921568627451, 0.6352941176470588], 
        FrameStyle -> 
        RGBColor[
         0.9686274509803922, 0.7607843137254902, 0.27058823529411763`]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.4", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition4"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.47", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[
         0.9235294117647059, 0.9372549019607843, 0.9784313725490197]]], 
      GrayLevel[0.5]], 
     Style[
      RightArrow[
       Framed[
        Style[
         Hyperlink[
          Style["CN5", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#CommonNotion5"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9843137254901961, 0.8803921568627451, 0.6352941176470588], 
        FrameStyle -> 
        RGBColor[
         0.9686274509803922, 0.7607843137254902, 0.27058823529411763`]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.16", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition16"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.27", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition27"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.31", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition31"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.47", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[
         0.9235294117647059, 0.9372549019607843, 0.9784313725490197]]], 
      GrayLevel[0.5]], 
     Style[
      RightArrow[
       Framed[
        Style[
         Hyperlink[
          Style["P1", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#Postulate1"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9843137254901961, 0.8803921568627451, 0.6352941176470588], 
        FrameStyle -> 
        RGBColor[
         0.9686274509803922, 0.7607843137254902, 0.27058823529411763`]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.47", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[
         0.9235294117647059, 0.9372549019607843, 0.9784313725490197]]], 
      GrayLevel[0.5]], 
     Style[
      RightArrow[
       Framed[
        Style[
         Hyperlink[
          Style["P2", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#Postulate2"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9843137254901961, 0.8803921568627451, 0.6352941176470588], 
        FrameStyle -> 
        RGBColor[
         0.9686274509803922, 0.7607843137254902, 0.27058823529411763`]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.14", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition14"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.47", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[
         0.9235294117647059, 0.9372549019607843, 0.9784313725490197]]], 
      GrayLevel[0.5]], 
     Style[
      RightArrow[
       Framed[
        Style[
         Hyperlink[
          Style["P3", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#Postulate3"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9843137254901961, 0.8803921568627451, 0.6352941176470588], 
        FrameStyle -> 
        RGBColor[
         0.9686274509803922, 0.7607843137254902, 0.27058823529411763`]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.3", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition3"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.46", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition46"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.47", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[
         0.9235294117647059, 0.9372549019607843, 0.9784313725490197]]], 
      GrayLevel[0.5]], 
     Style[
      RightArrow[
       Framed[
        Style[
         Hyperlink[
          Style["P4", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#Postulate4"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9843137254901961, 0.8803921568627451, 0.6352941176470588], 
        FrameStyle -> 
        RGBColor[
         0.9686274509803922, 0.7607843137254902, 0.27058823529411763`]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.47", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[
         0.9235294117647059, 0.9372549019607843, 0.9784313725490197]]], 
      GrayLevel[0.5]], 
     Style[
      RightArrow[
       Framed[
        Style[
         Hyperlink[
          Style["P5", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#Postulate5"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9843137254901961, 0.8803921568627451, 0.6352941176470588], 
        FrameStyle -> 
        RGBColor[
         0.9686274509803922, 0.7607843137254902, 0.27058823529411763`]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.29", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition29"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.46", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition46"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197]], 
       Framed[
        Style[
         Hyperlink[
          Style["1.47", 
           RGBColor[
           0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
          "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"], 10, 
         GrayLevel[0]], RoundingRadius -> 4, ImageSize -> {Automatic, 20}, 
        Background -> 
        RGBColor[0.9235294117647059, 0.9372549019607843, 0.9784313725490197], 
        FrameStyle -> 
        RGBColor[
         0.9235294117647059, 0.9372549019607843, 0.9784313725490197]]], 
      GrayLevel[0.5]]}, Frame -> All, FrameStyle -> 
    GrayLevel[0.7]]]]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019553876594202897` 
     FrontEnd`AbsoluteCurrentValue[{
       WindowSize, 
        2}]}}],ExpressionUUID->"0740f24c-732d-4245-a3ca-572eeef58edd"],

Cell["\:76f4\:63a5\:4f9d\:8d56\:56fe", "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8302785415400305`*^9, 3.8302785429761596`*^9}, 
   3.830278610509186*^9},ExpressionUUID->"43750ed7-769b-4293-a510-\
11624b711c58"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Association["Book" -> 1, "Theorem" -> 47], 
       Association["Common Notion" -> 2], 
       Association["Book" -> 1, "Theorem" -> 14], 
       Association["Book" -> 1, "Theorem" -> 31], 
       Association["Book" -> 1, "Theorem" -> 4], 
       Association["Book" -> 1, "Theorem" -> 41], 
       Association["Book" -> 1, "Theorem" -> 46], 
       Association["Postulate" -> 1], 
       Association["Postulate" -> 4]}, {{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 
       6}, {7, 4}, {1, 7}, {4, 8}, {6, 8}, {1, 8}, {3, 9}, {1, 9}}, Null}, {
      EdgeStyle -> {
         GrayLevel[0.3]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       VertexLabels -> {Association["Book" -> 1, "Theorem" -> 46] -> Placed[
           Hyperlink[
            Style["1.46", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition46"], Center], Association["Postulate" -> 4] -> Placed[
           Hyperlink[
            Style["P4", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#Postulate4"], Center], Association["Book" -> 1, "Theorem" -> 47] -> 
         Placed[
           Hyperlink[
            Style["1.47", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"], Center], 
         Association["Book" -> 1, "Theorem" -> 41] -> Placed[
           Hyperlink[
            Style["1.41", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition41"], Center], 
         Association["Book" -> 1, "Theorem" -> 31] -> Placed[
           Hyperlink[
            Style["1.31", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition31"], Center], Association["Book" -> 1, "Theorem" -> 4] -> 
         Placed[
           Hyperlink[
            Style["1.4", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition4"], Center], Association["Common Notion" -> 2] -> 
         Placed[
           Hyperlink[
            Style["CN2", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#CommonNotion2"], Center], 
         Association["Book" -> 1, "Theorem" -> 14] -> Placed[
           Hyperlink[
            Style["1.14", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition14"], Center], Association["Postulate" -> 1] -> Placed[
           Hyperlink[
            Style["P1", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216]], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#Postulate1"], Center]}, VertexSize -> {0.8}, 
       VertexStyle -> {Association["Postulate" -> 1] -> {{
            RGBColor[
            0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
            EdgeForm[
             RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}, 
         Association["Common Notion" -> 2] -> {{
            RGBColor[
            0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
            EdgeForm[
             RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}, 
         Association["Book" -> 1, "Theorem" -> 46] -> {{
            RGBColor[
            0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
            EdgeForm[
             RGBColor[
             0.7411764705882353, 0.7764705882352941, 0.8784313725490196]]}}, 
         Association["Book" -> 1, "Theorem" -> 14] -> {{
            RGBColor[
            0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
            EdgeForm[
             RGBColor[
             0.7411764705882353, 0.7764705882352941, 0.8784313725490196]]}}, 
         Association["Postulate" -> 4] -> {{
            RGBColor[
            0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
            EdgeForm[
             RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}, 
         Association["Book" -> 1, "Theorem" -> 4] -> {{
            RGBColor[
            0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
            EdgeForm[
             RGBColor[
             0.7411764705882353, 0.7764705882352941, 0.8784313725490196]]}}, 
         Association["Book" -> 1, "Theorem" -> 31] -> {{
            RGBColor[
            0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
            EdgeForm[
             RGBColor[
             0.7411764705882353, 0.7764705882352941, 0.8784313725490196]]}}, 
         Association["Book" -> 1, "Theorem" -> 47] -> {{
            RGBColor[
            0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
            EdgeForm[
             RGBColor[
             0.7411764705882353, 0.7764705882352941, 0.8784313725490196]]}}, 
         Association["Book" -> 1, "Theorem" -> 41] -> {{
            RGBColor[
            0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
            EdgeForm[
             RGBColor[
             0.7411764705882353, 0.7764705882352941, 
              0.8784313725490196]]}}}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0.3], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 3.}, {-3., 2.}}, 0.4], 
        ArrowBox[{{0., 3.}, {1., 2.}}, 0.4], 
        ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/IbzZ80EgZ9wPjh4zH/A+Z8PK6U+ePkNzmcHWb/h
K4IP9u8XOP9rT+yef5Wf4Xxw8NR+gvPByqd8hPMjEv1KNA58gPMh4IM9AIO9
YI0=
         "]], 0.4], ArrowBox[{{0., 3.}, {-2., 2.}}, 0.4], 
        ArrowBox[{{0., 3.}, {4., 2.}}, 0.4], 
        ArrowBox[{{0., 3.}, {-1., 2.}}, 0.4], 
        ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HISfb9bY7X/YXv+1Wj7jTHYH8b1hDql9V+0V
dgTKCkqxO4To/W48ffOh/fm0Bi79ZjYHucw5+Tu5X9nbfd9kFn2F1aGsvd2k
bt1H+5zMlwun8rI63OnXND/17Jt9zF5ln3t6LA5HfLfsP7Dujz3X50RTUwtm
h2kPhJ8bNDM6VHItiZ2lyeTA/dVx47VvLA7LmV8d4WVmdGBapBX8aSarwyY5
FrVJhxgcuJasab+ryeZQWrjrpmMJg4PS7+N+M5axOXz4zfNARoLBwXN5zQol
AXYH+5rvhW4x/+0bV5yaUpPG7iBQwHtyZc4/+5P/NgovW8nu4Hc5+mhy4l97
hVVGqvNvsjv8WPoorcTqj33HKp+T6d/YHYRfLFx7+/sve1i4pIHBN/v/YMDu
sNj/1xL/X1/g8o8t+oDosz0jlK+sBAKf4PKJ3NsSuLd9gPPtX062ezn5HZy/
ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAx3D3zNnZft89/AJc/x989pXH5bbh7
xHMOiuUcvAaXl6zYZWqvcwnOX5H+5tHX86fh/Cl2IAcehvMfvLz2Z4PHTjj/
n9aZTj7WFXA+LAUBAHOR1Ds=
         "]], 0.4], ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQo4HNRucey7nbXTfvod9okhs9gdLD0CUr1Fztjv
r726JFae3WHniUJPH77r9qWPM6yl+9kc9Ce9j5y6+YH9bt5DIb0vWR3apX9U
JHQ9s+//8+DDZj1Wh6SGS43t3G/tv6w/yt8fx+KQmGBv1Sr9yf6FesFGuUpm
h+C8uhUlbN/sc1IeXE2qY3LgyFrGPcntl31dqlhtdB6jQ9/RORaKVb/tl1U4
zIsSZ3RwYo/Ib+z8Yx+87ESo9lYGByX9G+s3lfy173i3bvFZdwYHHVvZX1us
/9m3LnrG3zzvv32Kobpfx71/9hxztVn5pv+zP8H9bbVO7H/7WWd01G0q/9pH
nOkUXrT9v7254atSXtc/9mLFj1pevP1v/+hU8sfGX7/soQHjMGsmCPyE88/f
OPp6vvkPOP/zYaXUBy+/2TNC+ezRG1ijN3yFy7PPyzvL3/0Fzv/aE7vnX+Vn
OP+Sei0QfYLzwcqnfITzIxL9SjQOfIDzIdQHewBZbqr0
         "]], 0.4], ArrowBox[{{1., 2.}, {2., 1.}}, 0.4], 
        ArrowBox[{{0., 1.}, {3., 0.}}, 0.4], 
        ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQECDlCGA4y/fN7G7uv2/+1h/KSJRh9Ksv/ZM0L5
ejeadG80/YXL8xQvcmZs+wPn/0oEafiN4C/xByGEepu7s+TFfsL5hupWIgkn
vsP5aWDwzX5yqKj9zR/8DjuWhXrZMHy19wsL/ZPymN/BfOrvitdLP9sbMB0w
X7yf3+GBYcSn4vBP9maRoR8n9/I7bKjJ3nZV5KN9SrSoprkvv0PE66wuxT3v
7XdwMNzv+cfnsMgyx9Yr7a29SaKo8NSFfA5OT261qmq8tr+WEnrU34zPwfT1
tuTNjC/t5wsf+LpnD69DtR/D9c+fntmznfddmHKTx0HGxrx1Uupj+xrz86xi
bDwO7+/aiEdIPLD/5+OifNGJ2+FZupJUp9gt+y7+tT+n9nM5+NRknF1fc8Ve
uZ6zM+UNp4P6p+kTPI6dsz8xO/KiTSSnQ/WemaJnJx+1r0yde0nuGoeD3Po1
wbcO77I3v3OlhyuZw2Eer7np4kMroOHDAYsvBgADLqKJ
         "]], 0.4], ArrowBox[{{-1., 2.}, {0., 1.}}, 0.4]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[
          0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
          EdgeForm[RGBColor[
          0.7411764705882353, 0.7764705882352941, 0.8784313725490196]], 
          DiskBox[{0., 3.}, 0.4]}, InsetBox[
          TemplateBox[{
            StyleBox["\"1.47\"", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
             StripOnInput -> False], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition47"},
           "HyperlinkURL"], {0., 3.},
          BaseStyle->"Graphics"]}, {
         {RGBColor[
          0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
          EdgeForm[RGBColor[0.7450980392156863, 0.5411764705882353, 0.]], 
          DiskBox[{-3., 2.}, 0.4]}, InsetBox[
          TemplateBox[{
            StyleBox["\"CN2\"", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
             StripOnInput -> False], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#CommonNotion2"},
           "HyperlinkURL"], {-3., 2.},
          BaseStyle->"Graphics"]}, {
         {RGBColor[
          0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
          EdgeForm[RGBColor[
          0.7411764705882353, 0.7764705882352941, 0.8784313725490196]], 
          DiskBox[{1., 2.}, 0.4]}, InsetBox[
          TemplateBox[{
            StyleBox["\"1.14\"", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
             StripOnInput -> False], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition14"},
           "HyperlinkURL"], {1., 2.},
          BaseStyle->"Graphics"]}, {
         {RGBColor[
          0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
          EdgeForm[RGBColor[
          0.7411764705882353, 0.7764705882352941, 0.8784313725490196]], 
          DiskBox[{0., 1.}, 0.4]}, InsetBox[
          TemplateBox[{
            StyleBox["\"1.31\"", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
             StripOnInput -> False], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition31"},
           "HyperlinkURL"], {0., 1.},
          BaseStyle->"Graphics"]}, {
         {RGBColor[
          0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
          EdgeForm[RGBColor[
          0.7411764705882353, 0.7764705882352941, 0.8784313725490196]], 
          DiskBox[{-2., 2.}, 0.4]}, InsetBox[
          TemplateBox[{
            StyleBox["\"1.4\"", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
             StripOnInput -> False], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition4"},
           "HyperlinkURL"], {-2., 2.},
          BaseStyle->"Graphics"]}, {
         {RGBColor[
          0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
          EdgeForm[RGBColor[
          0.7411764705882353, 0.7764705882352941, 0.8784313725490196]], 
          DiskBox[{4., 2.}, 0.4]}, InsetBox[
          TemplateBox[{
            StyleBox["\"1.41\"", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
             StripOnInput -> False], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition41"},
           "HyperlinkURL"], {4., 2.},
          BaseStyle->"Graphics"]}, {
         {RGBColor[
          0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
          EdgeForm[RGBColor[
          0.7411764705882353, 0.7764705882352941, 0.8784313725490196]], 
          DiskBox[{-1., 2.}, 0.4]}, InsetBox[
          TemplateBox[{
            StyleBox["\"1.46\"", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
             StripOnInput -> False], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidbook1proposition46"},
           "HyperlinkURL"], {-1., 2.},
          BaseStyle->"Graphics"]}, {
         {RGBColor[
          0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
          EdgeForm[RGBColor[0.7450980392156863, 0.5411764705882353, 0.]], 
          DiskBox[{3., 0.}, 0.4]}, InsetBox[
          TemplateBox[{
            StyleBox["\"P1\"", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
             StripOnInput -> False], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#Postulate1"},
           "HyperlinkURL"], {3., 0.},
          BaseStyle->"Graphics"]}, {
         {RGBColor[
          0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
          EdgeForm[RGBColor[0.7450980392156863, 0.5411764705882353, 0.]], 
          DiskBox[{2., 1.}, 0.4]}, InsetBox[
          TemplateBox[{
            StyleBox["\"P4\"", 
             RGBColor[
             0.3137254901960784, 0.396078431372549, 0.6862745098039216], 
             StripOnInput -> False], 
            "https://www.wolframcloud.com/obj/computable-euclid/euclid/\
euclidaxioms#Postulate4"},
           "HyperlinkURL"], {2., 1.},
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019553876594202897` 
     FrontEnd`AbsoluteCurrentValue[{
       WindowSize, 
        2}]}}],ExpressionUUID->"11364f32-908e-47fc-be70-07f2277dc9e8"],

Cell["\:5b8c\:6574\:4f9d\:8d56\:56fe", "Text",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.0124074 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 0.0124074 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}],
 CellChangeTimes->{{3.8302786047232976`*^9, 
  3.8302786071288404`*^9}},ExpressionUUID->"7bca4e3e-24ff-43ed-aa0c-\
a06bd26c5fcd"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{
           Association["Book" -> 1, "Theorem" -> 47], 
           Association["Common Notion" -> 2], 
           Association["Book" -> 1, "Theorem" -> 14], 
           Association["Book" -> 1, "Theorem" -> 31], 
           Association["Book" -> 1, "Theorem" -> 4], 
           Association["Book" -> 1, "Theorem" -> 41], 
           Association["Book" -> 1, "Theorem" -> 46], 
           Association["Postulate" -> 1], 
           Association["Postulate" -> 4], 
           Association["Common Notion" -> 1], 
           Association["Common Notion" -> 3], 
           Association["Book" -> 1, "Theorem" -> 13], 
           Association["Postulate" -> 2], 
           Association["Book" -> 1, "Theorem" -> 23], 
           Association["Book" -> 1, "Theorem" -> 27], 
           Association["Common Notion" -> 4], 
           Association["Book" -> 1, "Theorem" -> 34], 
           Association["Book" -> 1, "Theorem" -> 37], 
           Association["Book" -> 1, "Theorem" -> 11], 
           Association["Book" -> 1, "Theorem" -> 29], 
           Association["Book" -> 1, "Theorem" -> 3], 
           Association["Book" -> 1, "Theorem" -> 22], 
           Association["Book" -> 1, "Theorem" -> 8], 
           Association["Book" -> 1, "Theorem" -> 16], 
           Association["Book" -> 1, "Theorem" -> 26], 
           Association["Book" -> 1, "Theorem" -> 35], 
           Association["Book" -> 1, "Theorem" -> 1], 
           Association["Book" -> 1, "Theorem" -> 15], 
           Association["Postulate" -> 5], 
           Association["Book" -> 1, "Theorem" -> 2], 
           Association["Postulate" -> 3], 
           Association["Book" -> 1, "Theorem" -> 20], 
           Association["Book" -> 1, "Theorem" -> 7], 
           Association["Common Notion" -> 5], 
           Association["Book" -> 1, "Theorem" -> 10], 
           Association["Book" -> 1, "Theorem" -> 19], 
           Association["Book" -> 1, "Theorem" -> 5], 
           Association["Book" -> 1, "Theorem" -> 9], 
           Association["Book" -> 1, "Theorem" -> 18]}, {{{1, 2}, {1, 3}, {1, 
           4}, {1, 5}, {1, 6}, {7, 4}, {1, 7}, {4, 8}, {6, 8}, {1, 8}, {3, 
           9}, {1, 9}, {3, 10}, {3, 11}, {12, 10}, {12, 2}, {3, 12}, {3, 
           13}, {4, 13}, {14, 8}, {4, 14}, {4, 15}, {5, 16}, {17, 2}, {17, 
           5}, {6, 17}, {7, 17}, {18, 4}, {18, 17}, {18, 13}, {6, 18}, {19, 
           8}, {12, 19}, {7, 19}, {20, 10}, {20, 2}, {20, 12}, {17, 20}, {7, 
           20}, {21, 10}, {19, 21}, {7, 21}, {22, 10}, {22, 21}, {22, 8}, {22,
            13}, {14, 22}, {23, 16}, {19, 23}, {14, 23}, {24, 21}, {24, 5}, {
           24, 8}, {24, 13}, {15, 24}, {25, 10}, {25, 24}, {25, 21}, {25, 
           5}, {25, 8}, {17, 25}, {26, 10}, {26, 2}, {26, 11}, {26, 20}, {26, 
           17}, {26, 5}, {18, 26}, {27, 10}, {27, 8}, {19, 27}, {28, 10}, {28,
            11}, {28, 12}, {28, 9}, {24, 28}, {20, 28}, {20, 29}, {30, 8}, {
           30, 10}, {30, 11}, {30, 27}, {30, 13}, {21, 30}, {27, 31}, {30, 
           31}, {21, 31}, {22, 31}, {32, 21}, {32, 8}, {32, 13}, {22, 32}, {
           33, 8}, {23, 33}, {33, 34}, {24, 34}, {32, 34}, {35, 27}, {35, 
           5}, {24, 35}, {32, 36}, {37, 13}, {37, 11}, {37, 21}, {37, 5}, {37,
            8}, {33, 37}, {36, 37}, {32, 37}, {38, 27}, {38, 21}, {38, 23}, {
           38, 8}, {35, 38}, {39, 24}, {39, 21}, {39, 37}, {39, 8}, {36, 39}},
            Null}, {AspectRatio -> Rational[1, 2], EdgeStyle -> {
             GrayLevel[0.3, 0.5]}, 
           GraphLayout -> {
            "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
           VertexLabels -> {
            Association["Book" -> 1, "Theorem" -> 19] -> Placed[
               Tooltip["   ", "1.19"], Center], 
             Association["Book" -> 1, "Theorem" -> 2] -> Placed[
               Tooltip["   ", "1.2"], Center], 
             Association["Book" -> 1, "Theorem" -> 41] -> Placed[
               Tooltip["   ", "1.41"], Center], 
             Association["Book" -> 1, "Theorem" -> 7] -> Placed[
               Tooltip["   ", "1.7"], Center], 
             Association["Common Notion" -> 1] -> Placed[
               Tooltip["   ", "CN1"], Center], 
             Association["Book" -> 1, "Theorem" -> 15] -> Placed[
               Tooltip["   ", "1.15"], Center], 
             Association["Book" -> 1, "Theorem" -> 27] -> Placed[
               Tooltip["   ", "1.27"], Center], 
             Association["Book" -> 1, "Theorem" -> 11] -> Placed[
               Tooltip["   ", "1.11"], Center], Association["Postulate" -> 5] -> 
             Placed[
               Tooltip["   ", "P5"], Center], 
             Association["Book" -> 1, "Theorem" -> 9] -> Placed[
               Tooltip["   ", "1.9"], Center], 
             Association["Book" -> 1, "Theorem" -> 5] -> Placed[
               Tooltip["   ", "1.5"], Center], 
             Association["Book" -> 1, "Theorem" -> 23] -> Placed[
               Tooltip["   ", "1.23"], Center], 
             Association["Book" -> 1, "Theorem" -> 20] -> Placed[
               Tooltip["   ", "1.20"], Center], 
             Association["Book" -> 1, "Theorem" -> 16] -> Placed[
               Tooltip["   ", "1.16"], Center], Association["Postulate" -> 1] -> 
             Placed[
               Tooltip["   ", "P1"], Center], 
             Association["Book" -> 1, "Theorem" -> 26] -> Placed[
               Tooltip["   ", "1.26"], Center], 
             Association["Book" -> 1, "Theorem" -> 8] -> Placed[
               Tooltip["   ", "1.8"], Center], 
             Association["Book" -> 1, "Theorem" -> 14] -> Placed[
               Tooltip["   ", "1.14"], Center], 
             Association["Book" -> 1, "Theorem" -> 3] -> Placed[
               Tooltip["   ", "1.3"], Center], 
             Association["Book" -> 1, "Theorem" -> 35] -> Placed[
               Tooltip["   ", "1.35"], Center], 
             Association["Common Notion" -> 5] -> Placed[
               Tooltip["   ", "CN5"], Center], 
             Association["Book" -> 1, "Theorem" -> 37] -> Placed[
               Tooltip["   ", "1.37"], Center], 
             Association["Common Notion" -> 2] -> Placed[
               Tooltip["   ", "CN2"], Center], 
             Association["Book" -> 1, "Theorem" -> 31] -> Placed[
               Tooltip["   ", "1.31"], Center], 
             Association["Book" -> 1, "Theorem" -> 47] -> Placed[
               Tooltip["   ", "1.47"], Center], Association["Postulate" -> 2] -> 
             Placed[
               Tooltip["   ", "P2"], Center], 
             Association["Book" -> 1, "Theorem" -> 18] -> Placed[
               Tooltip["   ", "1.18"], Center], 
             Association["Common Notion" -> 3] -> Placed[
               Tooltip["   ", "CN3"], Center], 
             Association["Book" -> 1, "Theorem" -> 22] -> Placed[
               Tooltip["   ", "1.22"], Center], 
             Association["Book" -> 1, "Theorem" -> 46] -> Placed[
               Tooltip["   ", "1.46"], Center], 
             Association["Common Notion" -> 4] -> Placed[
               Tooltip["   ", "CN4"], Center], 
             Association["Book" -> 1, "Theorem" -> 10] -> Placed[
               Tooltip["   ", "1.10"], Center], 
             Association["Book" -> 1, "Theorem" -> 34] -> Placed[
               Tooltip["   ", "1.34"], Center], 
             Association["Book" -> 1, "Theorem" -> 1] -> Placed[
               Tooltip["   ", "1.1"], Center], Association["Postulate" -> 4] -> 
             Placed[
               Tooltip["   ", "P4"], Center], 
             Association["Book" -> 1, "Theorem" -> 13] -> Placed[
               Tooltip["   ", "1.13"], Center], 
             Association["Book" -> 1, "Theorem" -> 4] -> Placed[
               Tooltip["   ", "1.4"], Center], 
             Association["Book" -> 1, "Theorem" -> 29] -> Placed[
               Tooltip["   ", "1.29"], Center], Association["Postulate" -> 3] -> 
             Placed[
               Tooltip["   ", "P3"], Center]}, VertexSize -> {0.7}, 
           VertexStyle -> {Association["Book" -> 1, "Theorem" -> 1] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 2] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 19] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 27] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 7] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, Association["Postulate" -> 3] -> {{
                RGBColor[
                0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
                EdgeForm[
                 RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}, 
             Association["Book" -> 1, "Theorem" -> 10] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 46] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Common Notion" -> 5] -> {{
                RGBColor[
                0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
                EdgeForm[
                 RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}, 
             Association["Book" -> 1, "Theorem" -> 14] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 13] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, Association["Postulate" -> 4] -> {{
                RGBColor[
                0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
                EdgeForm[
                 RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}, 
             Association["Book" -> 1, "Theorem" -> 47] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 5] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, Association["Postulate" -> 1] -> {{
                RGBColor[
                0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
                EdgeForm[
                 RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}, 
             Association["Book" -> 1, "Theorem" -> 22] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 37] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 3] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Common Notion" -> 1] -> {{
                RGBColor[
                0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
                EdgeForm[
                 RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}, 
             Association["Book" -> 1, "Theorem" -> 15] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Common Notion" -> 2] -> {{
                RGBColor[
                0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
                EdgeForm[
                 RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}, 
             Association["Book" -> 1, "Theorem" -> 34] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 9] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 0.8784313725490196]]}
               }, Association["Book" -> 1, "Theorem" -> 26] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 18] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Common Notion" -> 4] -> {{
                RGBColor[
                0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
                EdgeForm[
                 RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}, 
             Association["Book" -> 1, "Theorem" -> 20] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 29] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 11] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 41] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, Association["Postulate" -> 2] -> {{
                RGBColor[
                0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
                EdgeForm[
                 RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}, 
             Association["Postulate" -> 5] -> {{
                RGBColor[
                0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
                EdgeForm[
                 RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}, 
             Association["Book" -> 1, "Theorem" -> 23] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 16] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 8] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 35] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Common Notion" -> 3] -> {{
                RGBColor[
                0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
                EdgeForm[
                 RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}, 
             Association["Book" -> 1, "Theorem" -> 4] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}, 
             Association["Book" -> 1, "Theorem" -> 31] -> {{
                RGBColor[
                0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
                EdgeForm[
                 RGBColor[
                 0.7411764705882353, 0.7764705882352941, 
                  0.8784313725490196]]}}}}]]}, 
      TagBox[
       GraphicsGroupBox[{{
          Arrowheads[0.007277084719434334], 
          Directive[
           Opacity[0.7], 
           Hue[0.6, 0.7, 0.5]], 
          GrayLevel[0.3, 0.5], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJw10Qs01FkYAPCRHhpqJ7NoVbIyxcwY5mnmL91PFHUmlEE6PVRr2FBztlJW
D3mVtBkdYTUeqza9aJckkUxWm/SSR0mFIpuhLRmvTLO7/9vec+6553fu+b77
fd/9dsuONSGTKBTKd//u/87/V5iF8Hn+IAF3Ki59lM4uQGa/lJundxFQ6fQn
fQWtFG2R1elKHxAQH/P4fqhJNfLmbkyjXCcgz2rCz41Sh1qd4xqjTxMwTMxt
lEY1IEoYt3p+CgFb6m0dWYJGdEcdHjioIGAq/ZaOo2lGnGXcnA8yAkLHQ5q5
nU+RYPBQ6jxnAhIO0kr59Bfo6Z0NnCgLAh6uvryyqLAT5Z6iFESNSCCRmJ5Z
U/sK9bt71G1/IoGesZPVTS+6kVptl7WxXAIDqf7qN9o3yNKs2HJ5pgRyJzzz
xozfonHXZiljjwRGUeRaE2sNCl58ijMRIIGJoLp+K94AktIMa+6KJHBhpe96
7tK/0c0KY4M0cwlUtTKWdok+ooxzfj82/ioG4c5r91NZQ2jgK7E777AYKuN8
2/WztcidLfXaHCYG7ynvtnH1WpSpS03euEIM78aV+2xfDqPueMNpTKYYsrdK
aG1lI4hz82xNLVUMMtTL8EkaRVGXo6+yNM5geTz7RpLPGLou2/fX5gZnGPDx
e3Jw1jj6VFwcIL/oDOFJC25lZU4gifFukRvhDNODbEMyCB2yCiy+WDnHGSb1
2dqE3tWhmZzOQAOdCFZJGGNUz8+IqqS6mL4UgWY5o+/Qb5/RjP0O/u+qRdBh
ytA2TNUjS63X2ZN5IrDLsbV8u0KPBKPrOUaxIrjdsyCoLVqPApK+H1gWLIKK
fpsSVYYexedtf+0NIqCcsWLw8/UoP+0APfGJENK3ziO9Pma0fUm5ECKD5pKe
HfLDmdEMISgT55Bu8e6PKIkSgrbXkrRSLBdGBAghLxZbatOpY4iEkOqDPdVk
3e0OMyH8IcO+pW06/rNWAKDEPtCxKtCvRQAUhN+ztnhmsyNCAA9KsNspMo2d
VAC7hrCz+u6XvmIJ4L0hrte/2XOfylgAbl34nlat9gjQ8CHsGPa9QpcZtAY+
yKdgH0kra6m/wAdCivvxiHHMjT/Kh55gXA8l5LzcdRsfso+Yky5QCXlBBnzI
CTcjvSHp8rhpFw+aDn1N2lJhX3uvhgdEA510a9DplKR8HjzyxD7hPk8GsTzI
HDEl7e2QOXd8Ew+OP8OmWszqKUU8uPoe+zYlpShyPg9oBI6P65sctUjPBbkR
ft/WJs3NPYMLP6VjdxgbU3W7uVBhgutVaRMeX/XnwnsF9tqOz9kKIRfYamx6
/d6tTDMuKHTYj0oGWd1DTlDJsCCdoooYyml2gpkEtmfSm6rAK06w7YsNFcGJ
s9KdgN+N488U9vs6sJzA9y52cJr8m16qE7SXY4uHa2rdWhyh6RJ2Sf0VWVm6
I4jPY9vlnOuxkzkCtQg7X6GKUtEdYeU1bAsP5TRaEwdGv+RXWiRkxZ/ggGkP
tpFmj/3Iag6ErsP1rVqnrOHEOkDMa3xf65CwugA5gKsAz2uxwd5XZno2XJLi
eZc1h+9MrmZDHXsmafa5TZN1+9lwrNkI9xfjd1LhygYDj0mk5/h4LuyeYIF1
zLgt+b82LuWBVSwYiP5A2niY49UQwwI59JKOq7dpW+LCAnX5c9KdXuzI/RNM
ENQ/Jk2z3jxtjZoJtbvqSZv4qAurkpkQcr2GdGuL1PuGPxOss6+RVlwx/OTH
YMIQ/XfSbX09RbGj9tC56ALOF/1R7v7QHrpbTpM238ReqDpvDxSrXNJ9KqXm
6GF7+Afgw7oR
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAAAAAAAAAAABoFzXcoPI6QAhTQN44
hsg/iIGhRpDgOkBBLuAfJyTbPzDWbL2kyjpAGgcgCZBR5j9cFZdA3rA6QFjy
j9EBMPA/Cz8g0DyTOkDy1/cut971P0JTCGzAcTpAWLTHHOg0/D/+UU8UaUw6
QMfDf01KmQFAPzv1yDYjOkDIqM9U3msFQAYP+okp9jlAMYlTJDCSCUBSzV1X
QcU5QNe/ChbItQpAcbh4nIK2OUAc5BsEzMwLQP05CPGzpTlA/PWG7jvXDED2
UQxV1ZI5QHn1S9UX1Q1AXACFyOZ9OUCT4mq4X8YOQC5FckvoZjlASr3jlxOr
D0BuINTd2U05QM5C27mZQRBAGZKqf7syOUDGnfGlX6cQQDKa9TCNFTlAlsrH
7CMjEkBIoC5S8pI4QDAlHVPaahJAOFVgDUl4OEB72cLWUasSQFEBE7v2XDhA
eee4d4rkEkCPpEZb+0A4QCZP/zWEFhNA9T777VYkOECEEJYRP0ETQILQMHMJ
BzhAlCt9CrtkE0A0WefqEuk3QFSgtCD4gBNADtkeVXPKN0DEbjxU9pUTQBBQ
17EqqzdA5pYUpbWjE0A4vhABOYs3QPQFfIWNrRNA530VS9hrN0AxqbFn1bYT
QH/pL5hCTjdAl4C1S42/E0D+AGDodzI3QCiMhzG1xxNAYsSlO3gYN0DjyycZ
Tc8TQLAzAZJDADdAyj+WAlXWE0DkTnLr2ek2QNzn0u3M3BNA/xX5RzvVNkAY
xN3atOITQAKJladnwjZAgNS2yQzoE0Dsp0cKX7E2QJTd/uo=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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

            "]], 0.3499999981077877], 
          
          ArrowBox[{{0., 26.947767031633163`}, {-0.6999619592251634, 
           25.529463503652472`}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAAAAAAAAAAABoFzXcoPI6QCo/uHZV
a7s/+9hxmTvhOkBMCEAvHmfNP/ozrghSzTpAEt3VLS2K1z9kKOop5LY6QEfN
J9BXr+A/NLYl/fGdOkBPnoY3ixjmP3TdYIJ7gjpAnGEHzbAA7D8cnpu5gGQ6
QJoLVUjkM/E/L/jVogFEOkCKXzdB6ab0P6zrDz7+IDpAnqwqUWdZ+D+VeEmL
dvs5QF9cQaqn3vo/F5WOUFfhOUDrw2SNF1v9P+326Mp+xjlAQuOU+rbO/z8U
nlj67Ko5QDDd6PjCHAFAjord3qGOOUCkpI05wk0CQFi8d3idcTlA/sc4P1l6
A0B0MyfH31M5QDxH6gmIogRA5O/rymg1OUBeIqKZTsYFQKTxxYM4FjlAZllg
7qzlBkC3OLXxTvY4QJJ7w07r+gdAZvi5O+7WOEAiGGoBUgAJQP1j1IhYuThA
GC9UBuH1CUB7ewTZjZ04QG7AgV2Y2wpA4j5KLI6DOEAqzPIGeLELQC6upYJZ
azhASlKnAoB3DEBiyRbc71Q4QM5Sn1CwLQ1AfpCdOFFAOEC2zdrwCNQNQIED
Oph9LThAAMNZ44lqDkBrIuz6dBw4QCIuym8=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJw11nk41NsfB3BLXZlKVJYSxhj7PmMsY/J9f+NKm6zZWpDSbgkpFQktJFtE
KtlTqhvSIsRtsUQRVxHJlkjlGhHym1/z3PM83+c8r/++n/NZzlH09LHbISQg
IFDC+/6//7d2SbM6MkbZaFSojN1V20uMivYxOz+wQXdJq26/M060/Tji31HH
Rvt+J3aInxCku8dTLhWx0VBnrV11jILCp87ZshfZMMxy2XKtXAIZORkpmw+z
8fbAKr9fpVIYDmvw2+rERvMLD7sJjRWIc/rIUGSwEdfmFvZ8viLi1DveZYuy
8XEJzazbjI5P4492D743gTbNXEotVxk/m1y/zNSY4Ip0e7PwQlVYb+K6Xik2
AWtsMCjgoBp6w6Lv1l42wUipz+zht+p4YCc3Fh5pggbPffuXEpp4VVeg8Hyv
CVrGuirNs7WgNsxkpdiYQOBA7aSIqA6qiu4b/Ms0gW2DpozHfl2k00zk2yVN
EOvqVDoSzUDn0TphgURj7I+R/SIqx8R5wqzLPtgYF5wGR4RuMfHoU6Xw7GZj
CJdVlr01M4BHsL2fIGmMkgfXNsU2GuD4CFfVjW6MOzYxZVR3FqTW5asuEDHG
97CwkbhvLKjF7vFdOmiE4LXHhzvDDFFcyhEKqDWCZWHkPYqEER48l3+vccMI
9LPqTdFnTXBcu9Y9VM4IQp7BzHSuCW7XJgwKzTXCt1YvpwPubJyVMu+5NGSI
oU8jK4V4eVsg0b5h7WtDcFOkBpxYpmA8dFUXu2eIBb3tdj5XTTErURU4kGoI
xkuzE1aiHATISDBbjxpihz3h3+PPwfmXqz3ebTVEXtB7ZXRwYKu/U2CMMES4
yCAXnWaQMQ6TCshkISGyXPYKlUBIYwrF9hwLGa65gX6eBEI96HGdQSzkRWUI
P8oioDKinLdiGwv5ooVPj/QS2BeYvnG+JQtN3/u2OC8G7H6cOlOgycL6s7/8
dRhAx8FPDj8XsWBuTc2ssAXmDD3+6+eoAe6vXDc03w9o3Dwv48YbA3QTLu9u
iJHIynv2vV7PAKmpSYxEKgkXDdNyipwBOPtnDDv1SWzut0xtFDFA3cPEgZhV
JG62D4bLfmfCPNzJ4qodiT8p9JCRNiZyq602SHqS0PLnnrCqYGLsuLfQV18S
W5dsTVHPZkK7uGi7ViiJji9bHsWfYsJmu7bfyxgSuYLcL2G7mXg4nKB9t4pE
0qR8DuMjAxPalHxqPYlVpgeWBb1gQFNy2dKDb0ik+hfljhUyYJNZ4Xe9nUTK
1ZH1txIY2N0yU1ndTcK0SmFBVhADgbeaBav6SZx6Z9nb5MJAgDZpkP2ZxJFP
21tWchjYaWfpvOcLiaXDQV09cgxskOvZv/QrCce+UKGnv/RRpSITmMkznRZP
mifrw2MX313z51NmAvVxMYfvdG5E0z1HfXh38u3c9SvNl6WP+sXLfntJTfB2
DUl91K7i+9XdUc3eMT24H+A7On3f2OU3eoi5wPfqqP4yp2I92N3nW9jXPVIi
SQ8UqeW/nZ03bKOtqYcEfb7d43cuG6Do4f06vo3HK6vJFl0MePF9t6bYoSRJ
F38d5Vvtcn6fmoMuOIl8Z/imB6Uv0cXpfL6lLeJExJt1cKGM7zjpiIsnE3Tg
2cj3vKFD6j9sdTBPRPa3N7jGVeqEaaNGge9q7QjbTEIbelZ8cwSDP0rOamFl
GN8lb/YePFOuhW/P+dbK3zZn5pgWrBRW8OMLsb/gu1KLdw58y25crdI7rYmh
ab4TaKalTmWaYJ2U++354zpWdSGakD2q8Nsbd6zuEirQgIA49befGZv6Bu3W
gHYc38QCXcHPahrImOa7tIuWsOWTOpwcFX9bp0hK6XWeOjal8Z0bRSm28FZH
Wh3f8q6/LO6rqIM+yHey9miLZr8axkb5FhPs33k1Rw3nyvi28/0109qsilcM
M3oiz9u+tqWtT1SF2uNE/R08X34atvGZnSouuNEuy/As+i9X1mKxKiTFPu8s
HOHl55CxwLPXKih48zlWieed9lbT6+JVYHebLhnCq1+3KGXxVhsVLLqSMlk0
TOKY+CtTL3EVfMgw5zQMkXj5fXXoeKMyzKybdrl8IuEQUrLixgwd1aFz680G
SNwbViqlPua5eyJOmtcvX1NPeaUdpcM04GZpTy8JgZMf6DIcOjSNqMjqIdGf
pzOROqWEJA0HjU0fSWTO8+9UeKSEYGuroOkPJAxzCv65fkQJzZnTSsldvPiO
tfUYsZWQr+rHVOok0Rk/JVQ7SUO5r1KK3lsSm6L2mYaq0qDjPXnx2j8kwuy3
R433KyLSmS0l1Epi0VL3PwNzFVFp0S9mx+v/OS88g6d2KOKD5kx4fBMvfp+9
CmeUFdG3MNS/8hUJGcoRtnwfFQ2f977vbODNg4uxNQ+zqbhcVV09zJsnT5Zd
r9/qRYXNhSjlz7W8eRZbY06hU6E3RTtN+ZvXL7TVxbmZ8lA/m3O64wkJ72jO
+yxFebTWLXh4roLEnUMblr7MkINRpfMK+cckTg4cdqFR5bDW+8ztcw955/Pu
yc2sqysg8eTKwY5SEm22ymK2CisQ8/LiLkoJCdf12cc0rsriQcyhWOm7JHbV
mk3pKsgi7Re7T/g2CZH6sSiPq8tBGZ7o0M3m5ce45Lv1uAxGDstElGeQsP0x
FhMRKAP3bvOYeZd586Kvd7kTVxrutBDuwlRePQpFXnoWKI1hTnlFQxKv/za2
iDWPS+EP/YVDa+NIsOtaAo4GS6Hwl/eh8GjevA2Keln1UxLdOQ1egVEkLGwH
ZHKPSSJLhSxSOkHCxm1ik4qgJCo1a+LH9pEos1bS/bFmCXSX275o20nCcnTc
x7VmMc765gUeduf9//nMkZI1i9GsU5/a6kJilq5yQ7ROAnMdKwy+8e4LzeIT
OY4bJKDSE2b5bB2JWE7J+9RX4mC8FW90tiChWl5p3+ogDnUjn4Y8DolhP6tF
UsWLIDZzyaLIgMSES8WoT6UYLBmRtWmSJMJraG/NTOfDxCGK6rOAV6/bNeYl
m1Jg+dCpqUWIRFVi5sJZiMLba7KrYQKocosePLxuHjLs9q5xHQEEH/Ve+sNN
BCMRhWLBPUD4X7foOT5/wH6qQletDTAnBk86npmLxpLMm3vqAQuvpAfS+XPg
WewYSVQCp6l3ng7VCSNu8ME/5hGAzNBMnvzTWcInec4yxwBAc65ZbnLbDHHD
fnxO/nZgSPZJ/FPZaYJUPH+JYwc46Z7acyP2J8GcbejgXefwIeL0rPQnidAv
JS80tAHG+o6eS8IThNqw+baIZUCm496I3Lk/CK2p4AyFuUCF28rFu4zGCSlW
gcxkF4HTW+3OfbjIJaKT7vxpWExgeksBd5EGl9jh/Mrxbs9KcLicEr8r3wm3
wfhCKzYHxPl3KoHlw8T+1dz1k6VsrCkIora09RNp/j+Zf282QZKptZNwTDfR
s+ea53U1Y1hGVSXP3n5LWOl9bsuXNcLwiW2TSYdfE7VVb5KrWIbQetN/89zg
34Q3zSN9nPeOoU1NlDpE3SWoG88PWnQZ4L939P8AtKr/yA==
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJw1i2s4FIgagF1K7pbGZTDmghnDYIwZxmzyuYQTh+TSnsolhVFJ7pco1KK2
rCRRWkKJ9nEkSbHmw0nlGlYukePUukStQxLV2M6P8z7P+7y/Xmpw5O4QKQkJ
iYhv/q//R6jJGy9dEsBU4ckmwlEUNXSy08OnBPDHsrN7QUy/aHa9qlKuVwAB
Hwu6yhtfij5XlnqmNwrgfdVwRFHGa9FCPyHpeakAzGRcW278OidqT5QxWM0U
wCeXnCM800VRcnHcrpXDArhabrx//fGySM02WNzpLgCx+lptSemq6PzebtNE
lgBoJWvhhr99Fs1+uPfqi9y333+jy5u9IVqVdoP+BRsYauvo1dklic+/j6O7
9tmAtsLuSKGMNEYXcy4euGsDnVk3nqg0bcJxw9NppEs2MMO/P6x6TAa/Gwn9
cCLWBqL0LpQcI8ui4r2JhRRfGxDymWR6nxwONMyEU6y+/Zln/fipChj0+syR
UA0bIJUlJamJv8OAqLhmahEfunxy2+frVdE/0t2QlcqH6Sjb2JDDaujz+GBR
fRAfItbSfjqltxWdYpq0mhz5EDC/V07QvxWNk7zL7eh8eOjS9S4/g4DywyY2
DrJ8SFMe4Ody1HHqvNNY25w11NtFvjWZUsfaq9czWzutwetlmZQwRwOTJKy3
b79jDbE7GttI9kRM54T6hjCt4WfRFDO+h4h9/VNXwpWt4dxUYlPeHm0UX3mQ
1rtkBYF3UhNiJrVR6ccZlfwXVkAgLfprhejgemHUjkcPraDC6vmx9FkdfDLo
S7UvtgK1T6TqmnBdjOXllxudtIKAA6MqpbO6KNnC6j4eaAVZ0VKlviEkjIgg
XyOCFZjva3EcJpLxvbZZVkk3DyLvF+UknCXjZ/eix2U1PEjjPGh+sUrGyz96
6R/I5QE7XCEsmUPBln/5lY5F8SBr5/4poZCC0fJV21S8eeBs69HTcJ2CdX6u
n8SWPDhqP2V8aICCGVXcwSoCD9b91NePy1BxXOpYj8oKFxZT3wombKj4OPjD
NHuICzah9OjcaSoqUe1PksK48NVH1XWzJg3TtUqUVly4sPJC9xzZhYZ1QhVx
tREXaAuu/Ml4Gpap5nnayXEhNf/ybqdbNHTfypCqm7MExedSox5DNLwf0asu
3WkJvb/kdoml9XGckn2OU20JbRJ2xj4cfWxh+QTBOUuYXVFa8QjSx8CLnCus
w5bQ82YlRWNVH29PHzR32+DA4MinpX59A6xXLPSPmeTA0Vfiu2G7DPBD/Ouc
HBEHila2PBpOMcAwQ+f24hIO+OkRFGhVBqiohevXT3Hg1g/6N52HDPCNhxcv
L5AD2RW87B2Shvj+2Vp0kh0HxJJu9Xqmhmhy9uE9bzIHZKIOMgd+MMRr53NX
KRsWgM5BIdxpQzSgXbR3LLAAtzL3vfdV6agx/zfiRpwFMMqGYxxs6ZgQnaYi
8rUAb2fJupdCOjo3cg1O8yygN+cZIT2fjunNoXvc1C3g6gl2MQfpaHJKo0pz
hQ0Nilaui/N0dJBwIs7+zgaaw5jWI00GPrH7s7K5ng2vdEjKuY4MfGSr5Xs5
nw1jFRPpeYMMvFm5sMvUhA2+YzcatNcYmBAbaiityIaAk4rVqapG+F9l1Ke9
Moe1XNL+Jl0j9GitY9XcNgeq2lD3oLYRbpK4GVKdYA6jkpZfOhSMkNhV0Kvh
Zg6UIOu3+X8yMJuWHbZMM4ePrP8U2HYw0EcmiQ0bZuAvtJRq/ZmByfHhzK+T
ZiCnU9tTQ6ZixG81zdSHLIjPPJjQ/wcFZ8acv+wrY0Ff19JkWx0Fu5R4cr9m
soAw77/ldCYFiX5Jr1VDWeD4puKd6gEK9t7b+tMFYEHQgyd5kQ4UXKBvkiBr
sCDsUMfHa8YUjP3nToeOaRPYN19KvEKkYMjfZ7xO15nA9+57PgepUBAlxsz8
kkwg+d9z19YUKOgZ4jIpVW0M3ndjqppkKWitrKl55ogxtN6mVkiLybg5+Jdi
ioUx2F7KMCmcIGND0ETkyDoT9Gjyc9xaMrrK/5575ykTgnwbx0fjyCgKyNgo
usoEWdMLMllmZCQGzDaVH2cCoSo7dNuYHvrJynQ83cmEM8+qv6wl6mG8/0uS
HJMJfjnLT0XyepjkL2w/pMAEOjvFuShCF91rRxyaqowgWW3/wNdFbRzYzNJo
9zQCT96lo+/yiSgXEGyb8pUBtwqp6sJ/aOFS44nG6ToGpG3b0h2xXRMvaCRm
SR1nwDjF6aLYUQPH4vdU93EZ0LRj5JD2YXUcGSVSPSQZQLrT7txaS8CzdqL5
1CE6SHjJWC9rEnCh0kU+8C4d/gKxaBD6
            "]], 0.3499999981077877], 
          
          ArrowBox[{{1.9766112738014954`, 
           12.764731751826236`}, {-5.023388728867076, 11.346428223845543`}}, 
           0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwt040/FHYcB/BbDzSUh3Sn3OE4D1dD2iV1ut9XXlJtU8kaJXHYi2bcPEyR
Ea6lK07OUo605GF6ODvP0+WicrnTPGTIUl4ej4YjPTlWv+3zen1en9f7D/hQ
2RGewUsIBMLhD/24BJN82ucFi0gp5I+f/ZkO90JKsO/0zopOBNOhr1mM3dhg
y2lHdNjHasCe92DSs4l0WCtTYAdxKX3SMRvYHtqHvRDYeca71gaqTSawm5VH
7X24NpA2No/9YG3D48avbEAsW2X50TNTs6E5BjbAuEvF9uQsqLs6rGFayMBu
dlWl78myBvnmndgupGFTiac1yNIOYtcpe0QOBtbwIicY20GicLneZgXkwCjs
kkxpu1GmFUSOJmKbBVcGnttnBUobHvZFp9LZRV0rSKRlY+vq5HGjHluCfIUI
2yu+klympoGO3aquC+mL6IVmf+DzOzRwizEaKfdZRJc0okmXEmkQ+6zVm//J
IkqMjd7yZAcN8kMdNtidXkDph543CjRpICGCH29EjWS3q+v/UlhA99C76WJL
NdoY+46an20Bw10Bwykwj6SikpkRPwuYHItmmjq9R0m+9xwq6RagZ61o1Twz
g2LnwgQMJRVKbvFS2b4q5G+oYnGrqJBQK+xRH5hGlAbtBM9TVOC5E1p7wqeQ
6G2th3APFa6VhzVO+EwiknRezDagQmFvAr2Y/A/yJHbeuN5tBmQtRuuA5UsU
8BZtDc4zg2WQUX4lZgK5HQOfq/5mwD6Z0fG39gRaCHmic8jcDOTO5oy80XH0
u7l7RdGvJhBTYYxdILPrOk81gaMZRtgXOMQ30QUUSFH85yTSwlpfUwoMhpOx
OZIhpms+GVKjLLD9ghVH1lPIEPDUFnuvTmWivtAY4ouY2Cyx8OqbdcbQ3vkl
tu2h1Mb+S+vgckIWdpVT5bTHnBHU7ijFLuwXrnaMMYIKbQl29unUzZRZEqR1
t2Gftg37ZlkUCbaUDmLHdB44MT5NhIaEOezAeGZuO4cI5gc1N3+0l7nFndrJ
NeC3iYS9Q6bVXxC+BmIMrLA3cVSEMy8N4bKxJ3a9h4X9692rYUm/H3bZK639
z5oNIOnIMexcoSryvrsBrL4Yjc1z7RXceKAPNbwE7DiltCrLTR+imFzs0MzS
7rgmPXAr4mF7O2W+C3DVg/VyPna6ZNrpQqouWN4UYIfrSE/6J68CeV0udrLM
vIfF1IYcUR62P0lFXrlVCx7lX8F2CZb6P3X8FNjcq9imYn5hKWMFHAm6hq0m
+I/GbtKEeuZ17D4P+892btSAFO1i7DrhQoSh3XK41VGCnaNUiAc2LAOW4Dfs
4055r0X0pSCnibCNxtXFJvcXUWyWeky/ZRwNf+dc2NH04RcxAxqcyHHUVVWX
Vit/j6ZkfueqnynRaMtx7z/73qKazMi4UV0lWlf2o57Rq9eIJ6e0LdEYQ997
VZTz18yhkDh/voZ0BA0+dHDexppFHrnbamZgGMUvn7xtGKFCLPsbux5xBxFj
5YSOWckUcnSsdDmbMYDIkv1FNe0v0U9NYUHnpP2ozf1mKPvwGPJqLLYsqO9F
1QPb2a22Q2gkxPjhXr0u1JK+lD+/+wXaUvlwV259GyLmzA/1HH2K0vf5fL08
pQWpGL5EdLcT2aUKerRZTchn9Av2/iAF+kUr2Vng9QdKLhOH2f5wD+XvjT9P
ML2NFN/2X6TtKUeEpAj3CLEAEf7Pv6dGv9I=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwlz39cy3kcB/Ctta2yIvT717bW2pxWEkau70vdyc9QrlPSrdgdCTvVxTpX
qFy49NODrJQHKfV4hJQHJz0mDse6kzqhs7jziCSPtqldaR2f/fF+vB/Px/vx
eL9fb17ijki5BY1Gi/xYnzrNs0Iwu3KC6lcVvDl4QAyblXQtK5CGt5lZ+geb
xFixe/2mtioa9n8Vp5z9uRi3ijfwV3nRUechyGqYIkaKiu1y7hwdCd2PLBdr
RYgtjlnSGWaBcznpViM1IqTvijqv6bfAPh/GoRvbRLi3/P3qoycZGLysPFzj
J0K0LTVDkmiJ1wufcWpf+cK5JWBhaSATaZf8ODcrfOG/KyrCpZWJ1iNPZ63f
4otfW9fGOwSzkNRU2XMq0BfXioOS86pZSPXZwzkxKoTEoEtPo7PRo1Wow9RC
OD4/svfxcjbO/JsxpsoVQhE7Ka8ph4322RVXq5cJESKT51s3sBGteWSS2Qrx
k668sOs2G9QF0Z177T5YkdpW5PInG2szmtzrxgVQ/W5IWvpx3sPUbuxtEaCB
8aO+u56NbFOK0/FMAQ54xcy8k8XGannqvK5QAbiehx2cwtgIXtDbVsIWIGNi
esMtPQvhey5fe6TxRlmb3viwiIUfJKO8ilJvKJNE+kVcFtpW1uj74r3hZbhY
PlnFRNBT9awmsTdGrZP6GDfpcCvbVhLUz8PzgaWhsyR01JfqQnKaebB+0jFg
qqXBzZuzJ3IvD4oHln3J82jYGno1QrWMB1F1a8Jw/QR1TP+hMXEqD7qW2yVR
dhPU6bmd9We6uZD2874bKjJRBZMwX17OxYcZ7d1/LDBRsTsRUyXjgsq6/3qQ
aaIYW7s4sXwuaP52ZRGGceoiP/xS9SlP2HlZEVfelfz1C88TUjaDuEjhaEyt
9EBmn+n4J2c5mVzivDygbR0jVlx/GRxW4Y64gv+I4+WaDTM83GFYZyRexWnK
tFe5odbF7JBGVZXR1Q3KDrP9YrPbtMddUbZ5grhZ2jQUMeyM+0fp5P5prWra
3DRnpN425ynNzZ7jYXBCwSiTONcv+WvLFCe4B5jzp3VG7X4z5AjXzTbEGzOC
T3QoHJF/ikO8lu/dcuWdA1K15v9D79poK7c7oN3TnjhQoaP9/HY6vk13Jr4W
4e0/snQahgvdiOve26x5dmcqVOu5xCdUup23wqciulNIfCjsSUn9b/YQfJAQ
K/vVzcVf2sPqoZR4S2Ftt/LmFNBiviBeJy0cTQibAtv8NcT514ekRdmTEbBT
Rrydo/5Rts8OZXOOEe+7y38cEjwJ36tqiGVOOnfb+TZIGWsmXiRXy57OtUZl
ZBuxV2PB6dogKxirNMTjNNmr9EA2lK+7iHsi/GcuDmBBLO4hvqoy7ZguYcIi
oZf4WL+m8cVnlmAWviDeJS0fOS9mIOiK2dG5ycGZvhYo+uc5ccf+okO7Z9Lh
62p2Xq/ccI+iYSjOvG9EqnkzcMNEDdZpiVfvEHN1/HGKxzbbfVNvztmTY9TB
7c+IE8l/o5Twxd/ErnnxL/nvjJQxwewlV3y0r9QjFG3QnH/gbLjNNxeGqf8B
ATxr7g==
            "]], 0.3499999981077877], 
          
          ArrowBox[{{1.9766112738014954`, 
           12.764731751826236`}, {-4.023388728955297, 11.346428223845543`}}, 
           0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwt03swFAgcB/D12ofHrqzdxeKs3awVyiOPc2e/trvEoVKj5FqdyIlzMkYm
hE1ySSOPur0WkY47G2VbypGuPFJcpJwyV5pq9BAZi03snTv3x2++85nf7/vn
jxP1fWiMNoFACF2ef5NgXcFzO/e38I2s6O3xYwIsBTcP3P6RAClbopzbK8AP
8Yl3OvK04NIZJen2FqA69mCWRqoNxWnX0AWyAF+JBqdy7+vAomSaVzxoD8nH
dPa2dXrYf61yobDEHhtLDmrHKYiopnw+9C7EHlJKZ013BBm3jvQ2XNaxR4b4
G+0EgT76+F8WPrrMx9tTm9nhloZom21MjAnnY1C7OFD03BBVh0RNBa58CK2K
OjqLjYCcKU09mQ+vZwGHxhyoKKW0bO8etUNrSMehsnoqyulSxeN6O3TFvL/x
3JQGcWUZ+3WaHXba/RV0dx8Nw3L5iWmRHVKLjloHVdGg+9kToopiB6ua1+v3
ddLwJsjh+Pv+1VC81ikxH6Bhe7rSsn6Jh5oRx/iAHhp2UJ7uHWvnoSRHPjMi
pyHZMIUlzeIh44XE8XY2DXW5KZ4PRTxEal1isDbQoDowdquUxIPviFtj1wwV
Ox+0tP3ZzwUrjvphqJiK4foFTkUZFxMK4YyfDRVx6rqZcTEXbVd7ymkyIzBb
b7ooBVyknY8f1+mkQDc7odT9DQfHjwWKXJwp6G2e9j3azIHL4v0JzS9kpKYZ
ZIbmcPCdlt54gicZBl3XQmSBHHifGVuXPkxCvmxREWXCwdn2mDuCYyRMaIbk
F0ZsUJRSqkgLIMFrQugdU24D87aEiVgrEhKiEV61xwYepZMp89rL/diHhrts
bWARbxHMXyCiydb/ys/V1lCXrfhcr/NwIcca1VdWXJzEVKecswKjZ8XZLI35
159YYUv/ipOuv/TZUGGJsP/34pj+3Q5WlrBTrnizoTJrlYyN66dX7KuQVakt
2LBNWLHTrtxbT6UWcJOb/+dmL+V0yJwZkmtL+Nu1SKg7ogl0TDUDla7d8phJ
QjXTgD43zwJ5Kvpj66fLnn4cIE9nIcKnTaVKWL43TZwK0WLBSE06n3+RBEVW
p86TfCYsV28ipi6S0O36JC/chImjNzOs28PJeOr0W9rv5QwED1x4u7uLDE1S
xCPGGgb63nlGq17poy2Eu3Y+gI7ZWr9hhsQAbu3Jp9LumOAgJfKAA9cQra2n
UpxDTLDVpGi9a58htvpnj5g9XAXJzQe2TplGmIvybfeMXAV9CydvtgcV9UZ9
tgUTxpgwk6YtzlGR5C+g0DONweswezbQQcMXxmFJ94yNEUEM8w7aZIwtAzWX
sjfTQGB/5r7piAkkvbaPfH0MsD/TPU9Op6OG4cEy8NOHhy6fVlNHxzbxYMBQ
GAXRjfR7ziJT5J9XJZ3JIEN1eKEraMwUG19WntjRRMKL5NGZJQkDJ7lDMrqa
CK+C5p0iBybE4pNVd4OJmOwpUJkPM3G1bPCnLIUeiIKIntw8Fs72yvLXCvRw
uIE3KPExA2lhav9ogy42JlpPNtZaYNa02FK9Rge1zCWx8Lkl6griRr/t0UJF
7Q2uy6Q1bMSptU45BJQVuVeIom3QZHZAq7BJI6zzS39g5c1Bg+OeP/ZVLgp1
Y6+4/zrLgav6mvLV7QXhRcLY9XGpLXzTD7eYrP0grKJqkodXc3FfeXHoxeC8
cKyIujVVuvyHtf76kZfnhP8ApiYpEg==
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwt1Ak01OsbB/CRFqGyj0LMjGUY2wwjYeb9KklZuiS0uNZoUY0S7qWrRKXU
teWWSGRLl6uytJKlblJJadGmW6I03WoqUuE///nd95z3vOdz3vOe5zznPO+X
EbrJZ/UEGo2WJ93/P7d317crv1aHuHyhYtApOzhEL79yYSMdN1z3+XsX2oGt
qcGZXqeDU3OfxG5Mkzp4y+iOQAPkb3dYU7/JDr7n1uR5gYU9OmUcUx876Gmt
E4uTjZGgqN981doOv8XGfVplZIbNnqXs35XssO1Rxl9HTSyxsc8+NPkFH4qM
lSo9Llxs7OzZcKyOj5L7W453lNpg8/Q97m9S+Mh3MJUrXGqLh/EB20e28rGo
6O5+czk+OC/d946H81GhuGVRTDUf6z1D13735uN87BTb2JV2yGk4ovfOiY+k
VxmePIU5qGR8Les24mPEb0ZuRe0c/LkvbtJpZT6MOpKn9QTbI+/LzLmpH20x
cd7bM63KcxET1Ovs1W2L8k8RBlXhAjxSVT6oO9EWrxPsdgTmCJBSeTP6wogN
FizP33qrRYDfVFpfXBXboHnfodHx9wK0zRcPCJ/awE+dM1OiI4Sfy6IdrA4b
KHxYeq3EVQg7tUfVMfU26GaoK2mLhAivOiriFdqgsWLNP+6HhHim+cfVVak2
aEnxdUeTEOXurTWf1tiA5j1xbkM0genz/ZNjO3l4YjJlZd0egkOluywqzvFQ
bZNJG88nmGioNXa0mIfomGLTnGqCyJVO8Sv28mAy6HA/5hLBFfeRI49EPNzO
WTG5qJ1A74vHWn0/HqJi5M5r3yXY6D/nOduBhx97rD4+7iE4t/ksbViXh9/u
9J0cfEow5nr7etoYF9PSGIMuvQSGzEzn+blcGB2n3KukpDi6lYucJsr5X1Lu
1C/jYtkzygG9Y3kiPhdrximrt8eHmWly0cVkynz7tITT99kaB9wo78uP+lzQ
bY0CEeWFu/ov+tdaY8IRyvKi4FTVHGsMWbJkLikX/2TBsUZQGOXgzIiZA4rW
eFxC2X7ocqvzPStEfqJ8ur3Wty7HCvJLDGVmF1S8YvtaobqB8jFRfmy+uhWi
LIxkprtkTFG5awn7GsoZ9JRDO7MsoQVjmRXexpkOe1vipgdbZs8VGZctt1tA
QUy51SLFu5hY4HayqcxOcvEvNMfNwVQ1k7mue/2WtEZzjOVSNq8Imji6zRzh
Ghyqv4SlB0UCcwSkUdZZstC47wcH979QzmI6Nvhf5OD5cnOZlYYs3ToSOBj9
xULmJasX9k6oNIP+HcpX7R1FsWvN0M2xlJkoW8kNss0wazflhl5mVuBrU0he
UrY8o8XqKjfFinlWMpftUqx1iTSFXzHl2SvGXM4am+KFvLXMuRaSe5x+NmiR
lKfL9UcUlkpdw5XZRzQ2ev+uCdLVeDJfmy85sDjbBC6bKDvT+/UbfUxgfJXy
+cGeGq6aCazpNjJzG286l3YZIzyUckVm8x3tTGO0lFM2WF0Xlv6TMdwGKP9h
f+Lz+AxjfDOwlXmGckHqlk4jvGuh7JtQp3ty1BA331Pu8DpRNfuSIbI1+DLP
YxYIsxIN4cilfPFLRuckJ0NcWUCZ154S/Mt3Fmx9KFfmx38Un2dhtx9lpigq
OfhXFi79d394frB691wWHrpSVqP7liwcYaLqB1Xfb1eUY5IJE6Sf8q3lwTck
/Qzo3qW8wMI3MKKMgXmtlBtpbv/2rGbgr3rK/G7HJE8jhjRnKFeVW6k09xkg
vJyyUQKryLbEACdLKOd70XkVYQZwKqWswVRq1WEZIKqO8mnmwtqy4tl4Xclc
0POMwHvD+NRmxmyEbBcvy5XmQ8B4wN/ORXro4WfpJj4maHq4VMxm6GFxh/rh
vQ8J0kbex8cW6eIiojuauwnqQyw2mDF1YZZbeYZxm8BNVbnd5bgOcjuavCuv
EzgqpKdfMdTB2POa0pVt0vl2rWr4s2wW2ujXeusrpe/t6z56DWnDiRG4vK2Y
QFywXiFiqzb0M+TZSXkEtUlNCk8/0yEKv+A+kEmg+KxGciaGDvbRlLYf0vx8
f5ZcHfysBQ9BUFZTEkGoStTOHVu18MTZvc4qliCij28WP6SJByfdLDyjCL7a
Fpy/FacJQYL/N3oowawJxbapIxqgZa97kSmQzoMXy2p4kTrcvJ8N+PMIzNq7
DRe1q6HYehO30Fj6HwZntogWqUGFq9cUOYuAdkYyeeN1Vez1eZ1xapo0r5lB
n+ChCq2Dt8sSadL5sw/a/eaWCuq/3qO1S4SwHJK0RPqoIGLb16O5fULMqrP1
iKuaATbLfsere0Lc76gMud4wHU5HTrXsKxAiuZ3ZI3RUwt7F+wfepguRWNge
bOmgCN/v8sN3EoQ4laovCnacisNVmh+xTgjdRMMp94QK8AtpuccPEKIx+aFR
ussUHNBSLD21QIi8w443Uj0mAzfFP9fyhKi67Pmt2W8S1qWukxfqC/F1eHoN
wiZChezM8lKS1iNJ7+Q2yyNRIGTvuSiA9tvR8tlXxolcZ26jXakAuROausoe
jJIQ+UnbNNKlVr1CJmv/IHmP9oQxogWYqa0icdr1jZzwZW4O9BVAV+vY68XM
EZId3VVxjS9AkdJWlrV4mCzj5k4J0xSg4uuBYvHLIfJvtuiA+Scn8J6+W719
6hAJPRwsMOp0gtO5zA1vV30h1c4RGp4nnNCe/us5i2efiX3ktDVxqxwhWZJ4
MDH0I1lXve3nLRwHGGY53ioNFRNXesMwtObC78OlVSEH+8nfRedsnuvaY/P5
pPucwH/IB89UNW8yB9+fy8UpxvSQyzqzcrK32UFiuJP+2L+L2CvFny1/wMfu
HZP1sjvaSIBuYdJ+Tz46uxRE/nGnicGS39+49NqC9t/6H4AQLwE=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
            "]], 0.3499999981077877], 
          
          ArrowBox[{{4.976611282142699, 22.692856447691085`}, {
           20.60643485769208, 21.27455291971039}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwViXtQ0wUAx8fwuprIc4ONPX4bosiQvX8bx9nxlRCOEgrDTmIDksCY4sIl
syAfJ6KCz2SZg6tJIUiR6UZa0RxDLZAOHdOzyeUOQYYKB4yOpINFf3zuc5/7
CLbqNpVQKRSKaon/vd/1Y2+QNwLPWzNohZeVKGhzHyhdS0fn3HSU9ysl5maG
X42tomPLQuWe3nolNloHFja46Bi8dj8hcLcS6ufm7tsqBlYKw2TGfCXWNL5z
tLOFgayc1fX7UpS4ZJ/KDeRFIlsUqXLwlZhR62I7zZFY0+0hNX4SUzrnXF9i
FNyv1B5+6yGJ9hesgbSbUdj68ktrm6wkzte8bTfEMJFmWWa62Eji6rMnDcJP
mBi97tO4D5CYELk2avqZyBANGkTbSCCb7Q1hsVC62DzW8gaJy5ldpalFLGyQ
FHdAvPQFV3+fPc/CSE9E72IYiUnX8uC4v1hY/5M12eNToOv9n5V/0qNREJpO
HXUp0J87fmvkSjRqHiRZysoU2H8/Vj3+KBp0ZuLAzUwF6PLkgYAgNor4cAYL
FTiqjeeLVGyUTFd0pdEUGKqeyd75Hhsx9Y7j257KEaI15jvq2DBNSNMNfXLE
yMLThRY2+pn2UX27HIx7HwRfcLNxLah8h6ZODu+mc1YygANNb5JbrpWjpukK
HlZxsINx6fUEihxPdc2na8wcrLP4dbEeGc7M8sX2Gxx85JznR9pl+FQoYp3w
chChN2soZhlaw/renFzOBdM4terxPhnC22edHhEXtUnPPrYVymDzdTSX5HCR
pzmV91mKDN9N/m2r1nPREOi5UUDIMGTqj1tt5IJMcP+y0i9Feua/F8QBPJzi
N+T1GKW4k7GHsijgYXA+Zf7sbik+N6XuPZfKw4nq8l1lm6U4s/5dPrWYh+4W
jkNFSvHbuutPVAd50FZmjVMZUsiOVdxN/pqHY5P+sb5ZCVziCg+th4dVwQrb
SZcEP8TZItqGeVDeG9+eY5XAod+yPZxKwPaaYDqkQYIVdIxlCpY6z511Wy+B
858/OupSCJSzHp3V5kqgDs8fDVUTWHboxYhLKUFb0djxoUoCB5viSRpbAsvj
Xa0TJwl4C3VHaAES7G1ckKa1EtB+afz127tirDhyONHTRcDlMnz44Bsx1BdD
Td13CNCKD8U3Vomx0/+FwTtMIDTT5vVtFgN1/Fu5PgIjtTHfD8vF+A9BBHkM

            "]], 0.3499999981077877], 
          
          ArrowBox[{{-10.452502483666251`, 
           4.254910583942078}, {-9.69231754560036, 2.8366070559613856`}}, 
           0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
8F8mlZSVIOUD18et+8lA+H/8F10OISg=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwBEQTu+yFib1JlAgAAAEAAAAACAAAAAB5qnxZm5r/qnJDrioc5QAEjh2TD
2um/967/p2R2OUCLIjLT4bftv2b70hQ4YzlAT4619bj+8L80ggoyBU45QJ0I
mda5VfO/YEOm/8s2OUAxgEOM8+D1v+0+pn2MHTlACPW0Fmag+L/bdAqsRgI5
QCZn7XURlPu/KOXSivrkOECH1uyp9bv+v9SP/xmoxThAl6FZWQkMAcDgdJBZ
T6Q4QGK0eDHGkALAPzl+LAGGOECTyFNMThQEwOXj5bJ3ZzhALd7qqaGWBcDU
dMfsskg4QCz1PUrAFwfAB+wi2rIpOECSDU0tqpcIwIJJ+Hp3CjhAYCcYU18W
CsBFjUfPAOs3QJRCn7vfkwvATrcQ107LN0AxX+JmKxANwKDHU5JhqzdApcFi
7HvdEcAMP6OfARo3QL2DE8P2YxLAtYxqvEACN0CIq4VUuOYSwBZHsDh/6TZA
CDm5oMBlE8AubnQUvc82QDcsrqcP4RPA+wG3T/q0NkAbhWRppVgUwIECeOo2
mTZAskPc5YHMFMC9b7fkcnw2QPpnFR2lPBXAr0l1Pq5eNkD48Q8PD6kVwFmQ
sffoPzZA9tFlcrEgF8DwOpvKGMs1QDWdAWjYfRfADyetCm6tNUB/1xiYPNkX
wI24NMR0jzVA0ICrAt4yGMBq7zH3LHE1QCqZuae8ihjAosuko5ZSNUCMIEOH
2OAYwDhNjcmxMzVA+hZIoTE1GcAsdOtofhQ1QG98yPXHhxnAfkC/gfz0NEDu
UMSEm9gZwC2yCBQs1TRAeAywMvPtGsDdENI1NGM0QFCEI29LNhvANGSD6t1E
NEC82lly5XwbwKgyLkdNJjRAuw9TPMHBG8A4fNJLggc0QEwjD83eBBzA30Bw
+HzoM0BwFY4kPkYcwKKAB009yTNAJObPQt+FHMCBO5hJw6kzQGyV1CfCwxzA
enEi7g6KM0BHI5zT5v8cwI4ipjogajNAIN1ekpDLHcCwC8ymePgyQJc+7R5I
AB7A7TxyYw/aMkDZ1e1yaDIewOCDXgNuuzJA4aJgjvFhHsCH4JCGlJwyQKyl
RXHjjh7A4lIJ7YJ9MkBC3pwbPrkewPLaxzY5XjJAnUxmjQHhHsC2eMxjtz4y
QL/wocYtBh/ALiwXdP0eMkCpyk/HwigfwFz1p2cL/zFAWdpvj8BIH8A91H4+
4d4xQL7D9HKYZh/A7JODiIC/MUDHKtHFu4IfwIP/ndXqoTFAcA8FiCqdH8AC
F84lIIYxQL1xkLnktR/AZ9oTeSBsMUCsUXNa6swfwLRJb8/rUzFAPa+tajvi
H8DoZOAogj0xQHGKP+rX9R/ABCxnheMoMUCkcZTs3wMgwAefA+UPFjFA4Ny0
m/kLIMDxvbVHBwUxQDqL4ks=
            "]], 0.3499999981077877], 
          
          ArrowBox[{{-0.6999619592251634, 
           25.529463503652472`}, {-1.0233887251723104`, 24.11115997567178}}, 
           0.3499999981077877], 
          
          ArrowBox[{{3.8020208131569007`, 24.11115997567178}, {
           4.976611282142699, 22.692856447691085`}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwlyn9QzHkcx/FvP2T1LeXHqqa7bDupSD/2+3MJn7c0FrXMrA6xaxS7jazZ
mbBqIprKyTTOao5iJVs35YbTHYuhH5sfSfKjqRjtjlZ2JtrVtiiVnB/f/njN
ax4zz9B0jUzpjmEY+2M/H7ub+qY4czrsEjrG9/4ihtGU53NkSb6g7b8u0XiL
QZUxS+Y5hIM1+Zyy+hMLSeP+f1Zu8oZa2fmU2WYWanyf9oYX8aB9tH52UwML
ORekxOl9XpCMRv6q1rNwz1hS4prvCQvCk3j397NQuKZkkDa4wY7Lt+MF61jI
biqra63/iia6JHBdyELXQHnpWP1n5NI7+b9/YCAuUNIaPG0EZeS1yPzeMCC2
+CQUHf2EhJeebD/XwcBbxo4x8R+RMJy3WtTIwLLIPs+Y0A9I6chyf1TLwNI6
l3T3Yhca/H/6iUwdA7YnQZaPR4bQLYXF5ZfNAFW4+Uqz1xBq45kjbssZSK3M
+OPyHicSYDihRgyoqBVrVOBElbq8WUUvaPBoQ5zluaPmZTdo8OtcwjlQmVU9
eoqGgnWLOXevdaj/09KQjsScT4hVtHoDDZcMDOdkofXrPIaGtByas5fP5pZe
Pg2H71Kc7wx3Hi8fpgDPn3Rer3Tj+m4KMMNkLwjoEWrUFFBVkzZjKfbIZApy
Oyb7soHHV/uiKHi5kOT8W5fkgB6nQGKM4+zf2Jy4wU5CW2Y05/aaeF//RySk
SedzPqozdj/8mwRvRRjnxNzYioJjJLSWh3DGlBdVSzNJUCXyOBv0NJHqRsKh
RVdHbk51ooNUbfGpPgICAu9M1CkG0ZlIn289LQREWyn52oT3aCQ77WT4PwQ0
6HC+zmhHunm1K3LKCGhfuDIi58Y7tDvGOrOziIBN/9pOeq3qR8Wl0zBKS0D6
3P6NizJsyJYShut3EjCglWpn8F+jw1lxFL6NgB5NrOXXqh60xRGdm59KwAxF
zdlvX5xN9uArK3cICNjfMRB6UeFuMqxnySCHCCqwg8OnH+Cm/NIWqKwXgZx4
FqcKmWk6YpZrxnQisOUtIKte8U3XosYbw9Q/rHzsVhAWZOIVVsQKk0Swtf+m
fspQsKnQtrrZFSMCmcd7j6jlIaYI6cSe0gARWC3Xzo7hApOrwSiZOkUE3wHZ
3oBs
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwl0ns01GkYB/BBFuOSFBJNNcbMMDOYGTPjkuarSHsiuZSyXaRFKzSVrNhu
wqErU0lRIoyNJKnponLL5rZnZbqtLV2ENiHJnXbW74/3POdznu8fz3mfZ1HQ
Dp9gVRKJ9LPy/V9JNevfp4TpYTu1ZyzKzB7q2KT28K0+/FwubgzXtoffaE2o
7z0D+Jc73s8YESFS9zVFtXoOouKqTMbei+DzWzGz8ZsRCtN5u1ObRSAtt0ks
WWuCQfUT9T/dFCE2LMSuuMMUAfWtZhsyRXjw0VtYm03BizdqEWkHROh6G+M2
XrMQOzwod8e3iOA7QT2Xs4oKio75jMylIqStrdW43mGOosdx5FaqCDPVxuLV
4yzwj5X0mMYMER6r1JKzZzFwjRdyxL5TiCofava+Qiaob4bVQuqFGPk2Bzli
Kyzmu4+evCpE+KfMz1rPWRhi+YXdkgpB4ctl8kgOfBso/i9jhNBvDom88oMN
fPRkD0c2C0F6pJ8i2S9EY1FsabFUgKIJz6IIAxE0U0fCXh4UoOvDHsWiAhF6
onpHfSIEuHEwecZxB3tEB2zYaLJOgJnNiU7XmuyRi6Vn2C4CjDdE7E3e7IBo
xqWcY0wBYmLxYO6AA/r1ouMd9ARIaJvUCkxwhO5wjYg/YIeFvfkbNhk5oaU9
pWqvwg4T3ILBydtLsNL10wd1DTvkPvgSKupYAoWzzlrNCT46gs7qauuJsXw0
viqll486ytkPMUIxcqK9mEde87FsoL/v4EYx3t3ceUSriY9Nr/LY5ofFIMs/
dmnI+Zj3pixzs0wMs1g5ErP5kIzNcxY2iDHn+9+nDyXyEcJ+pS/7JMagm1/H
xDY+Ws7RusnOgOBK+GePFzz0y6yov7sDDkNe9LxKHuiR59I0vIGHbqndwzIe
onokQvp6oDqDY7fiBA8vqdf11QMB1z6G1pndPKyZFbAwLxhw+/FA6Gt/Hrrl
24PVwoBHBXwvmhMPp4w626kRQK2GW2XIfGWeU39SdQfgEn7jbv4UF2UbDPfk
Kk2jprksS+diVxLhdm1t8uQeLj5eJZz1LeHJrTVcGLYSXtc+dV4i4CrvhfDs
+pitVoZcSI2Mpv1X2QCrY9AWb+0IH80KH7ygsEXnasLuSZ0V/uW2uBxGWE0S
mDjrtC1cywnnyXpWc1i2YDURDkwLMeki28Kti7D9UGWNy1MbnFI3nnZZfbnf
zdM2MGAQZl4o/MD0s8GjlYQvSbKis2bboGg3YWPXVA39VmvUXiScapyQcVhq
jVnNhDU//Wo57G2N5J1zp+0ZkFppfZAD3mXCNZwE71wxBypPCC9WiXln+J2N
wUnCNxXbd6c8YEOLYTJtduHmGZP72FjqSTgvzveMxJmtnIuwqZc7vWOChUVp
hKVUJ7l/BQt1JYS1h6xXNMaxcF513rS9gt3bVa9YgTOfcJ29kyT6FyvwHAmL
dWxU/mVaoWg9YXk7Vbqx2xKn4ghb3zAyb5FZoi+bcEESudw11BIVdYQpAVOu
t+mWGO8jnM4ZeMrqZOKqqem09VQ6Q7LzmQgsJ+wjmZp81srAH4rPlPuRyv+u
Sve+n87A8udbzXTDgRy9GKuUQAba7u2LkIYq8/65yY5cBhLjnQw8tyj3l2kY
3qKpzLMukJ2V917V1qLw7KKDcit3bZAXEG/8vPpaEx065h5DFcuAgVUWwuHb
dOjvOvfRQwgYxFdY04rpYF0+YmvAAN6VZhULC5T9zJc3tpk7oltxx/cZm46G
jOxS9UN2iPBYmfTlvgW+7/+zZKjZGruMvV2T11sgiLJl9akrFhgUNB4//52G
/Qt6j1bbmGJQdieIWUpDsIfLknh/MqIjzGq422nYpnsh30KqEEclfS25ZUuD
WVVTAr+fVDkwsIQuJ9FA6l0g+mqsX9lbNsXkt5njPz3Onvs=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwVyXlYjAkAx/GpyMy874y2xQw7Vo3YpqbmnneU1U9S2I55yo6nbXNtbE0n
HepxNEJltk0lYztsOTpY9aw00aGi2HRgJRFieJIVniVix1Zr//g+nz++9htj
AzdZ0mi0lZ/6X1pb8JP9WjYi+S/MCTwV6rKKOyZC2fCt51hFESocfHRJaK9m
Q5FvF3T4A4W85u7pr8GG41nrkbEnFOoWNmyJEbNhN6uzU99DYYL7U2DBl2zY
X9C+CTRS0B7yqNlCsCGofLYhoIiCuag/5/0YC4v6l83WpVKoFga9cjKxoF61
gzu0gUK6T00n0clCnEXeul2eFCok5TbRNSw0jpqdlvApNOiLRthFLIz1aZaO
W1C4EJgX8noPC/zKsmONJiWq9uvXz4hmwU077J9yUYlc0V7zNg0Lnjyet/Ko
EmFeqQIePv3mZZlvdEo4dmx/SXNiwU69dmb1eiXuN6R4L5zBwrs/I1+GQ4m1
31yLkV8jkXnHLnxHvwL1h+dEXDlP4kHTJkvVOQWiWWWa6OMkQAxuGjUokHg6
mhJkk6hq259XnaTAjYQEwpxMYuHT8MwIjQK7N9fffPgDidNbt/s4KBXI3L34
5wF/EosjLl4fnKnAk8vjbs8XkRi46mZf8E6OfNn4PfYCEnvzh92D+uR46ht5
4KiJgD1ngB8bJYc/z1Nl6iYw11g75ugrh7OMxeGeJ1DSqDY9dpYjJbfb2fs4
geNO1Y+LCTlUlC4pMpuAo2WPWTMig9bB8X1GCgGZZ5Xgsy4ZyOD2qqIwAi3P
/WO7TsnA71tdWB5A4PrHM1379DKc/OVuU6UbgY2Jt5dAK8Nmn5Nnl48xcaxY
IQ22kCGUaxM238REXaWX6nOTFPMGEgp6u5jY/s/O+p5WKSqy+oM0dUy8zjYZ
M0ul+CBSHfytlAlORKyLl04K23bDml49E68yvrKjrZdidMVoaU8CE4kjjOwm
DymONPvFFq5lourgrG0p86SYvqD80qIVTBh0fveUkxLIy17anphgwIGfu3SZ
QQKPX6cMnh1mYKnt25HxRAl6Tw3Nld1gYP50wXcN30ow0plz0/48Ax1ccVay
QoKMian/ppYwIBYx0lQzJahcvrzQL52B7wNr3c1vxVCX+lfpoxjwTZPUX7gl
xi42X0EFMjDZrDOn1YohzmmRBFEMJNGPTa7MF0MWE7d19gM6yipeqF2cxXjm
5m5trKUjpEYbsIYUI6mTvMyLp8NmwhTf9kiE+7yhajWXjtVfTNoVVIvAkba3
qU9Mg65JWC5KE0HAPGU1lzMNhSatVUaICDPKDDHGOGuU6OtVJW4i9Fnqp8w5
MxXZ57jeyfNEiJ2/9/KqO1MQEZ7pbMsU4aH1vjM+T63geoT+V5TZFQvSr+Dw
j2MeHo371O16V9xK3fnc7/5dD6ZxiWGrgysqrt4efM941HJAL2vY9ocLFB3B
4wbyXcs197Cm3ngXcIYO9Q8G0FqvdNwoThe4YJ0xzlK1bmprsiQlJOeZEKOr
v57U1DJaHyeGfvj7dyFutX3scQ9gtdINO+Mr04SgWWioUY5N63Du3e66UCH+
Ayg97lM=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
Bqk0rd+1k4evD6vcFRXI+D+zfrOg
            "]], 0.3499999981077877], 
          ArrowBox[{{-4.023388728955297, 
           11.346428223845543`}, {-10.023388740354221`, 9.928124695864849}}, 
           0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwt0n8w1AkUAPDtLr9/tGx2l+/adv1KfpZz6BjfFx3RcTIoEp0GSw5hOdP5
OZJKRdalTg1yyI/yI6KwT+WQQzVJTjel2JRNKKzYnNO9mTdvPjPvvT/ePG5Q
lGfwVxQKxXM1/6uUQTnrDwwqisudFQPrDGBqlK5RuZ+KHeNVA25nDaBOalmd
VkbFrt6xM2VhBrDbMGg5UULFFd9Z5zAwgJafLsvk7VHDkJzHn/JpBiC9+qbr
rzo1pESdKjd5pQ+MdTsdN2uqY+8c3d30uj7IhtYklBxXx269hKnzCfrQO6If
bC9Vx/mlqqwIO30ICaxRWkqkodfRRlaVVA/cbtw5MfGJhrpuBYz4Nj2YLxyT
0pM2YhHhK3qfpAdBmjReJkUDB0QLWUxSD85uce+2OqaBVdfiVt5T9CC5L59t
qERHq9gBl/i7urBV5m243zk6HrGU51Vl6kLpA9eaPi0G+s6y/c666sLf5s3j
aaUMnK2mcXQ26MK5n609gju1sEc/bjFKyAXmU7v7Ih0CKzsWkm8JuKCy1M3g
8Qm8z6Q6xIZyIeLJiM2bVgKNjNscLlpzwTqcbxq+SGCX5HOquQwXIpvy594a
sbA0bXDZ4gEHqLftcg/vYSF2QlNpAQc2/RJOEUewUKsTajICOHDxHdsxIomF
DSmDo4+4HIBHPr7idBbW6zjfKCthQ3Kz95qLesyenOay4au9X3wumi6JK9KG
+zVfnMr4rOm/SRset36Zj24ft3W8zALdjH1rDgjuO2CkzYLmr/ev+UflxhS1
QgJybAPWbN9QWCzRIqDaOGjNpn4Zd59f0AJLdsyam2waZ9znmfCaEOzjpLEw
MimvJJrPBKnStHfrURa2SwOOyM0xgD91bA/GsLCkhRFA4zPA/a73bpMQFjLr
2niCOTpknwx0pPiwUGfMI/dkPB2Mdl7ZbufAwjueD4fmFjTAaJpj9mL1fvPL
9nZPEjUg+8xTjnjD6v6XF9qNlzdCg/H2Ml4xga3uuuYLLjSwuHTIIy6FQEmA
zTb5HnVY7++0wvMncGBHxYeIXeqwmTda72RDICzExOt3q0FBh+VhFRqBrikF
Ldt2qYEfDwzbxFo4Ncxsy+2mQqT/+rfeq/9gIvcx9XsXKjy8lFo7VKiF8qpe
ihcFG+CYSeNRh9jV/np+nsd5VXCze0c5+UIT03t0hu1tlcDIUX6rYa0muotu
yy2RiuDlXn8qPkETl4omlPI8FaDvwCSNb7Xav1gxLhsrD4IjDd2675goer8s
8CmWg4oTipXpvzPRMGNMM/0fWVAum76Zu4OJTk2BcSc2y0Lrn8GzHs8Z6JAZ
WRqRIgO3JsN8MY6BrI/USuPx9eB3rV/RTI6GzElpObtzhazd4vrH4iZ1FAX6
8du6pWSEqg53wkoNhzIt+g8+WyKz/X2SF3dTcTIws16e8onUNuxP3N+uipxJ
b53GbySkOKyiRWFUGeMNi7VDEubJjGTbVumKIs4weKVE70fyVfDxNGtCAU+3
VDYNmn0glTnZCjct5PAHlTAvQckMuVTt4vWrkwya0K4k7TWYJkUaSSO+C+tw
3a5yiavHJJkpb6rC7pIKR1wbozxqRCR72rjKmi4RisyiDwoPvSR/ezmfQ3k2
K/xu4nq++etn5GMhkTSzVSxU/Hb4QEPLIOnwYDQUzr8SxmU1W2xM7ieHxSn3
RgaHhGeMY3JCp+6QAT1Pa19fvyd8VNZ+tSOrjqSkRjlHNQhIyv/xL56TYgo=

            "]], 0.3499999981077877], 
          
          ArrowBox[{{-4.023388728955297, 
           11.346428223845543`}, {-4.023388730357965, 9.928124695864849}}, 
           0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwt1Qk0lOsfB3ClpJSSfW3MMHZmszXL+3VNqW4LXVG0iGghJlJu3VwJ7Rkl
VMiNrC2urdVO241SIuqaf9IkpMsfLaI7/3n/7znPec/nPOc5v+c97/f5Pcb+
YasDpyooKCTJxv/elKE0d+ICBzttsnWXLrYHJfty2hple3xfUndziG0Pq3Nb
J7MT7TH45+UmpqE9XJ53HbRkOsB124q1M6faY7OHCu3DgAO+BN9aG9XNwQn1
j28kdY5Qq/zQHF3FQb1uXJVqqRNO+HbdNkjhYNqWpzcjK52xwy3VYPV2DtyH
W55qdC9EYYzGiJETB3kNR5QGKDwsn+HlcmgqB+/You8rPXnQsDyjFPWFjaN9
NzNOJPBgvrhQ+KSfjeRe/76cGzzE+14YP/KaDQXb0O7U9zxY7giyuvyIjdbb
nfGBWnzohau00irYmJWY3zpHyIdnxLHRaRfZyC1sbxaL+Hi5823ikng28uZs
2z14gY/Lm7WyB7ex0UXVOBkVIsC7sOJc9Ycs7Eq5tk8cJ0BL+LeW9DIWFoU1
NTw7JwCtafLnukwWfrkqCiauCNAeXakRd5iFTPe00LY7Anw67GDdHcoCfZ2w
OfWBAMG920+/9mSh/97uY4eeCbAsy9stwpmFwXMW2ec6BDh5/ceyXAMWbJ/5
63T+LQBbyz8jcpIJqSKlTygRwISa5OKawsTNzgVyS1RUZk1EMjFRRTp9NO5Z
xRomSopJr5VMnhfZM9F6nbT6w6gAS00mtt8l/bRk2KpnhAFRG+nj6SEjGa0M
9EyQdkuQ3vUuY+ARi6yvKPKLV0tmIEbXWO6cvAF3GysGDHaR9ksK0n0/i4EX
70g7jdXUu7yww9W9VLlLHpZ5lifbIZNOk9s8I/+duadsfph0lih9T7q6HV6+
MpFbWyieMe+5LSjdpnKLtePSDp22Rdx0M7mV+/dafPawRZ+jldwrfMQ1tjE2
SNxlLXe9TZzHJcIG/jE2cvOmRHVr/rBG4BZbuctbgyOOVllDbGgnt3X+pmkT
B6wxUEQ6Z/8vZ0V8a4TPZcitv8qN3vPdCvQlpE9TuTe871pB2Yu0ypjtkr/2
W+HRfXL9qkA3ydRCS0gySN9z4or2bLfEqzjSxGy7KX3mlrjzG+kbEurpDb0W
OBBP2rZUi9aSZwGTi6RzE2aVCbda4NpD0kY+k8KbdAsYTCfrp9gMv7CSmiPU
g7TqFGnQxcvmWH+GKfdq0eRE23MzvBgh/cB1+NSyM2YYWcGS20VbuqBqtRlu
ZJK+3ddRzJxvBqP3pJlVTS6XW+gwN2PLnZ9U+0wniY72jaQpgeUBJ9zpsDxF
OtWpYOTHXDqMy0nPnZ0RH/HEFOy5HLk995cbFE2YgDAg/dfKgqtGlSY4pUr6
J2qG4PRvJjCQkuvvjoqfTOeZoO8SadbDOL9fx2n4IiRdmB41NHCbBuFjcr9U
UUis3z4anjmRPufqp97qTEPWMfL752t75rh9pWK3hMyDV0II93czKty1SDev
83s8LDWGeCuZn0U2nhuCco1h95zMV5XCksGOQGPYriNt38r9fYWpMU59JfN4
Nc9uXm0PBavKSJvup/3ByaFAdJR0+kptVn4ABcNRpDWoKvX6NAoqK0iXUN3K
ci8ZYXyXWVZdlwBj1Rd9OoyNkBapV8eV9Ye+pZ0zs/8wRFLtNPfiTgEO14zV
KlIN8XaNdCmlXdavaKOx45cMIGZVXz8u6zf3Il4sP2ZigPPeiQeHHwuwozh1
QXGuPhQavao978ny18EdD7HQR80+ze0lVbL6n2olNVf0IIycqL2fKUCFU/nQ
yjEdeJy5QO9Mlp3fndMT2iJ14HMjZdD6mADZd+k/Mse0sfHNoG5NtKxfmelu
yI/Sho9aTv6ZcNn/ufL64vC4Fla7VZzPCxTAYcWu+wditLDokOk/494CPFZu
f75USQuMxqF88VIBgiRzGr1OakJ7jn5j4ELZeW/RvJCjqYnwjcuVkr/xUcx5
aVYjVMdVk+VT+3v56FQs3lfdMB/VdXUMj3Y+osZb2zKE85HnVJx0r5GPeH03
nm+DGvwTNEx/LuPL7iWlos+uahgp+tTXdYmP0db5tIj6efApcHl7MIkP79CQ
nKaf5iElepYqJ0Z2f/jRN6rGzUWe1bLg0VA+JBzVBCJWFVtUjb2tHfmIfUjt
EHBV8EDHKOGbKR/tR64VODnPgpcXs7ZMgw9Dq9IzRx1nQuW+j7KvIh+rihmp
TAdlSHec9/04xEOojlkZw34G+l3+uR38Hx4OBKT0JXCUoL18Pb2tmYd9SdEL
OZzp2HG0K8O6koctlyTZTpxpkH7dYxxWxIMg5RY9maMI1+bYgokwHnT6J/KM
Gn8QLq3ZRr3reVjhH9St1z5BdBtOzHnsxkO42D+2TfM7YVp0am8Bg4cjkcOH
PQ5+I2b+ttY3RpuHk2pa/z2u+5VIFPvccv/ORcyWpvr4rs9ERW9ykp6Ei6BQ
nW+Cp2PEwbgZPX9Xc7HQ7vPZG4OjxMeAkuLzmVxM5m5P/eQ8SnxLOPvZfT8X
pS/CJqV/jhBDAWl3ojcvRCnfszqGGCLe/frmJmWTMxwdVtpq2AwQbQ9Enxx2
O6Hl1VMVpVApUeu+eFNtliNYIQztdpc3RIGav3JNjwMqmzuyVD06iBMqDX0s
OOD6+dlhNsIWIkQQoqRXao9tUcNMzdsNxJJCH99Ivj3QFL0vLbSEoKxK/CCU
cKDw/+df0ggHwg==
            "]], 0.3499999981077877], 
          
          ArrowBox[{{20.60643485769208, 21.27455291971039}, {
           27.872145302235367`, 19.856249391729698`}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwVkns0lAkAxVGTZ0it4zmZwTzN930z81m91E1KcVhEab0yvUQIPRSSHVGS
HsQWK0R5bEyK3ZSUnBIbqVVblPQYTRG1yYbs2j/uuf/c8zv3nnNZsijvTRpq
amr+U/rfrT7+7Lkkj0aE6KzpqhX2ME3rDdRJo5H8/KnnInt7GF6+crByOw0N
LS0igG0PtThuJ9uPxsdywcWymfZQPeA5bHek4drs9JQ1SqO9uaE+y4rGrLWe
5Xee06hyV/ofUafhLFvNPN1MIy2i2CzwhRSv37jNP1VGI8Dm0xeNBik+9s0f
a06nIYjpGt6XK0XYGssQy3AaCZ8HI/KipfA//Lse040G68dKjUY3KYpfB4UY
C2mYnp1ZrbKVwlFmGDxDl8aGjjmx5mpSCKbfY3x4J4V67w0Pn6cSbGvN9r3X
KsWnzllO2Zcl0Kjd4lFSIQVdpunenSnBwK3lwzHpUrSFFEfxt0ogGCUWzg+T
orvoXv68LjFKjQQfot9LsFylZnGgVgxNmVZGc4cEvY2qnMAcMVbGRddlXJKg
zPbgzKbdYmz23RTRmiNBoVlPUs06MdZ/faVI3CNBS8GbQWKRGPM2Du4/5y8B
s6ZkrcNcMQZPJj9zdpSgxMe0oU1DjP2Zhbf9mBKsS13GHFBSGHZ3XfRyUgyF
sjL4xE4Ky8oTmUvjxLA8laT9YD2Ftfo9UpcgMQZsAgP2uVNIGj94+ugyMZjp
zn65Cylc3Z7ibcYTo7rF/puFkIJOZLt/v64YxS8oNwMLChF/b6778oHCaKe9
U6Q+hddqHrKVnRSq8p1fztegEJkjD+6poZCRXL/m9QcSepc1q2qyKGwzlzJW
XCIxLFinCudSkB3LbFIWk+AqM+KGNCms6+pX351FQqss9mTdfRI+7xbf+pJC
wkjV2Bh0nIRbR9aMzbtJbDg6GfXYi8SKFGVbcxgJjTzynJURCWg7zJ4dTGJI
d7VswQMCC4IO9Hj6kOC9DC2xOUHAQd7J3edKosoyeluvFwF9q0nlMYLE4sLY
sB1JIrgU/GKwmEPieciIscESERIYcWdmMUmwLhTzSyftUOF7JEfXmMS0n+KL
v79uh/uZzz4L9UmkvkhKvpVoh0+K0PqYGSQqWqpvuznaYeY1or93kkDUAt2Y
jgkh2AoyPnaUwJ/2J+Qe14SgjoTvEg0T6Kl3Hm+JF8I76Z9I6gmBlD2GbiPl
ArRXy9/YTu1Iqc+tDd8qQP1Nlx3MNgLZvata+3gCmNc6m5s1E6h5yzm09i0f
7w7tfWrSMMXrIj79cZ4PAVQXzeoIGJ8PYTht4ePZ42NFc6sJBAQ0NtVx+PjX
M7qcW0ZAMeIiECp5yK5MvyspIjAndnzhmVIeNihix/LSCbTeKHiW9pCLynED
8W9yAuZaKm29LC7ci91T3iQQOMbQdcr05sK1xO4zZxcB3pXpqfpGXBSoX9gf
H0Wgj/2oK6OTA4/6dv6rUALXnJLE2sc58G0/PhQoI3DVRO2U3JODOscvne/9
p/qX+OlNGHAQozVxP8OXgFX/wcMxHbYYazWsFC4l4BNfa1H5zQb0lcNJfzkQ
kIQnFhxptEFQj175Bh6B7qxBdY9UG+yls7n3jKbyIwyXAS8bpNxkjc8ZFSH3
6O2IULYNkuW11gu7RDgvI3c1jVojYu8PRUsuiJAaifVjndZwPTcUy576BXHp
q9DwojVMNHPyXrmKUEr5P5l20hqP8p1M5IYi9Cs3hnYlWiM6jQoV9AgRL/eb
rP3OGr8qLLuf3BCgQjE3QaeOjQMmOtHHr/OxM7K+70EQGxPXR/heXTx0X+OR
BoZsGJW8YJgyeOjJC9vYeJeFljut01XuXOzR3Z/86jALFoLLnJvVHCh0t6bG
r2HBoC0/vEjAgTzfNjaNz0JhRcrDQ9dt8bGh1kWTwcJ/4WNmOw==
            "]], 0.3499999981077877], 
          
          ArrowBox[{{7.987628074394308, 15.60133880778762}, {
           8.318152461230397, 14.183035279806928`}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAA4Ny0m/kLIMDxvbVHBwUxQMacQPy2
oCDAQZdI2/jyMECIXDrQElUhwHc5h80T3TBAJhyiFw0pIsCRpHEeWMMwQJzb
d9KlHCPAj9gHzsWlMEDxmrsA3S8kwHPVSdxchDBAH1ptorJiJcA7mzdJHV8w
QCgZjbcmtSbA6CnRFAc2MEAN2BpAOScowHqBFj8aCTBAzZYWPOq4KcDhQw+Q
rbAvQFdouTA/KirAylUqo+aSL0CLWmFDzZkqwExRyHkIcS9AaG0OdJQHK8Bn
NukTE0svQOugwMKUcyvAGAWNcQYhL0AY9Xcvzt0rwGK9s5Li8i5A7mk0ukBG
LMBFX113p8AuQG7/9WLsrCzAwOqJH1WKLkCWtbwp0REtwNRfOYvrTy5A4M+U
KToZL8B+3E39Ov0sQMP0S50sTC/A04Q5aCrYLEBQoQupIHkvwOXX2hPeryxA
itXTTBagL8Cu1TEAVoQsQGiRpIgNwS/AL34+LZJVLED01H1cBtwvwGfRAJuS
IyxAK6BfyADxL8Baz3hJV+4rQAnzScz8/y/ABHimOOC1K0DJZh40fQQwwGfL
iWgteitArbIbzvwFMMBPZUffAqoqQPH7/y5MBDDA8bQOq9lrKkBuY1qjdP4v
wOz8fOx2MipA+adGbI7tL8A+PZKj2v0pQIPFxLjl1S/A43VO0ATOKUAOvNSI
ercvwOKmsXL1oilAnIt23EySL8A30LuKrHwpQCg0qrNcZi/A4vFsGCpbKUC3
tW8OqjMvwOQLxRtuPilAeu6ylj7lKcB0RgViLlknQMTI2QrcfCnABylQM2Ay
J0BMWS3zCxYpwMT6vbGKCCdAEqCtT86wKMCsu07drdsmQBGdWiAjTSjAvGsC
tsmrJkBPUDRlCusnwPgK2TveeCZAyrk6HoSKJ8BcmdJu60ImQIDZbUuQKyfA
6xbvTvEJJkB2r83sLs4mwKSDLtzvzSVApjtaAmByJsCG35AW544lQDNH45bh
GSbA5F6aqiVQJUA9mzi1ccYlwBM2z0T6FCVAwjdaXRB4JcAQZS/lZN0kQMIc
SI+9LiXA2uu6i2WpJEA9SgJLeeokwHTKcTj8eCRANMCIkEOrJMDdAFTrKEwk
QKh+218ccSTAFI9hpOsiJECWhfq4AzwkwBp1mmNE/SNAANXlm/kLJMDusv4o
M9sjQOHmlII=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwtVHs01HkcRQ+PSikGec2YMYOZ+X2HmhLik6xXQo+l6EEeQx4hCUvlkdZq
pdeWMkIIG3llEfUpy8rJlLal02OZCG2iZnssTVp7zv5xzz33nPvXPfdexp59
m4OVFBQU/GbxHw8+a7g4tYCO79quOyvPs4Cks95K9b50fPpMVDnztwDce2gP
r9fSccBzrhpXKgCfjA9qShoMnKZlhxy/J4C8FtnVcwkMpCzlt4wbBaAVrd4U
P8bA74p8aBNiAXSXuPAu+RujNEgcNpEugMZtRaoaUmPcndzTzAwVwLNsHa97
YUz8ODo6P8dNANZ21V8fTDOx9Mq4F58rALY0WYWRy0Ijb1cxbYEApl8W+N40
MUGBfv+Ltj4CDe6aH8tvmKD+pbILC88T2KT1/MngJjYqChX36PoS+MN+SiVk
jI3Dz0eshvUJ2N8LPWJ1mIOY52MUOUhBTgt33TaaKZ4P3aLVUEJBu5rDho4q
U4xwe7K8OYyCV1nVgT/IeSiX+D5ldPCAUZpJTxPyUalT6t3/Mw8CU1IZnSI+
9lScTpr4kQflSy+FeJ/mo09StJMonAeyoIFJyyY+lq5OaFnnyIN1cQ5tfn18
rJdW9qXo8OAcdEkevOFjRoLKRb0xLsjuRrNOzfCRJs9V1qvnwpYltjcvqVAY
EeGon5zIhfk1pvlTCyj0DHYeUKo0h+SEiHw1dQrHS67xDfeag7r6GvFaTQqf
tCp8+p5rDm3ROQWnDCnUrLK2WT9hBmmFEYWqfArzDuycdq8zgyDx78XF9hTu
o4WtLDtoBv6i9tKd3hSePLHzlYedGSTM2FRYx1CoILXWdZ5vBpV71latyaWw
TU3x15z7plBzpE8oCiSonTFP80AhBzpaREd9MwmaPC73qd3LgZXjm5pcSgj2
D57sLV/BAQWtsxKLNoJUAab6fWYDS2jRpdVLkL1EGHr3NhtK3Nml7wcI3lo1
mSHLZMMRv7hgySuCco3J/j43NjQG6KleniD4rGhlQPwiNrjs1suNndX+I7fo
vRITGP4prqC/n6A9v3p19BcWyKanNnIeEPQ7LmO9bWVBvpiVnt5FMET4ThyV
zILhQ+/XjiPBXaaVxa9tWNBZEHYooJkgBBusEH1mgtOXdMehWoLq426e0hYm
BF1YnxtTSbC71fLT9iQmGMSXByy8TDC2/5F57xom7M+ta6q/SFDF1uIvpylj
mPZx2qGWQdA7M8LmMMcYbj8Jav8lmeDGTu7m9yMMyIttbd5wgKDjQGpcRBkD
Uow22ndGErTtjSoeDWZAlJS2lRNC0CJf9jTYhAERTbr/RO2azQsWMUaH6ZBU
8i1X7E1Qv+1mTHgJHc6Udr+p9SC4eJmyRBZIh9YbCfZVTgTnOIwIU5h0eOSr
46rNI1hn7NxQVmwI9N9Chu4wCbZWFSzPYxjCmfPdW4z1Zv2KfarFhQZgfn/9
BeFSgof036TeNjKAob0PG+UqBC0VhtM+FegDhsdXHPxKoeHVloWOhvrQ3kti
yz5Q+A09xuiKWA/G8meWZL2msGiH8g26gR6s6Hlx1EhKoVVAykBN/nI43YVR
x9oobLS6/s7jow5US2ILm67N9tHfo3Brkg54b882YOdTeCfLLfScig4cDVUb
uZ9GYWVDhat2kTbYyienrgdSyJGGOz5arw0pmrbbH9tRaL345DbJWxq41E7M
WT27h5d2upnzymmQ/1B5uneIj6zouT2JYTRISDhmU1HFR3nxZj5XSIM/iyO7
WmP4GNo/54ruAhoETOU0xqvwsNxl48ETq7RgKHPHQFerORqEe0VG7deE4A19
DvU5Zthhtyir8fYyGHSSDwoPmWJhe3q3iLEMtiVKmr2yOVgzVW+RdmopSF64
98xpZKNsUHxzntZScEg/qOc5Y4JhietiZOUaUOfrUWIZZILL2gtcXTw0gB7W
K6oeZf3/zxrwL5nwme8=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAA4Ny0m/kLIMDxvbVHBwUxQMMPLtKU
0h/A29xnqv7zMED/Hewe6YUfwN9PBAor4TBAcOSjHfAxH8D6FotmjMwwQBhj
Vc6p1h7ALjL8vyK2MED2mQAxFnQewHuhVxbunTBAComlRTUKHsDhZJ1p7oMw
QFQwRAwHmR3AX3zNuSNoMEDVj9yEiyAdwPbn5waOSjBAjKdur8KgHMClp+xQ
LSswQEIzI2etGxzAi86kSHQLMEDF7iKHTJMbwIzfsj2r2S9AEdptD6AHG8Cr
FhWnop4vQCT1AwCoeBrAcUJwzc5lL0ACQOVYZOYZwONixLAvLy9AqroRGtVQ
GcD9dxFRxfouQBtliUP6txjAwIFXro/ILkBXP0zV0xsYwC2AlsiOmC5AW0la
z2F8F8BCc86fwmouQHMcDEObVhbAAtOT7UAZLkD9BnwOtUUVwDt/ff6JzS1A
9giqMa9JFMDud4vSnYctQF8ilqyJYhPAFr29aXxHLUA4U0B/RJASwLZOFMQl
DS1Agpuoqd/SEcDOLI/hmdgsQDz7zitbKhHAXlcuwtipLEBmcrMFt5YQwGjO
8WXigCxAAAFWN/MXEMDnkdnMtl0sQInMzUU=
            "]], 0.3499999981077877], 
          
          ArrowBox[{{-8.023388734653452, 
           17.019642335768314`}, {-10.300867150799945`, 15.60133880778762}}, 
           0.3499999981077877], 
          
          ArrowBox[{{-1.0233887251723104`, 24.11115997567178}, {
           4.976611282142699, 22.692856447691085`}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAAAF0b28xf8L9rIuz6dBw4QGLkJBev
W/K/zZOrObEKOEBmHLvJoLT0vzz+by2s9TdADAXe8qFq97+3YTnWZd03QFSe
jZKyffq/O74HNN7BN0A/6Mmo0u39v8oT20YVozdAZXHJGoHdAMBkYrMOC4E3
QP1GdJyg8gLACaqQi79bN0DldGXZRzYFwLrqcr0yMzdAH/uc0XaoB8B1JFqk
ZAc3QKhY6opitAjAJJTxz4vzNkDFGXtfobUJwMeoo7M83jZAdT5PTzOsCsBd
YnBPd8c2QLbGZloYmAvA48BXozuvNkCLssGAUHkMwFzEWa+JlTZA8wFgwttP
DcDIbHZzYXo2QO20QR+6Gw7AJrqt78JdNkB7y2aX69wOwHes/yOuPzZA8YA4
HsuZEMAMw6tVVdQ1QIVQVbsz8BDAQu6gUrq0NUAEGeudIkYRwBBdSysLlTVA
bNr5xZebEcB2D6vfR3U1QLyUgTOT8BHAcgXAb3BVNUD3R4LmFEUSwAQ/ituE
NTVAG/T73hyZEsAwvAkjhRU1QCiZ7hyr7BLA8Hw+RnH1NEAgN1qgvz8TwEqB
KEVJ1TRAgDlpu61LFMAhF9oib2w0QAUADCY/nhTAbhFUZDFMNEDtLLKON/EU
wOQszpcELDRANcBb9ZZEFcCAaUi96As0QN65CFpdmBXAPsfC1N3rM0DnGbm8
iuwVwCRGPd7jyzNAUuBsHR9BFsAw5rfZ+qszQB4NJHwalhbAYacyxyKMM0BL
oN7YfOsWwLiJraZbbDNAjPVKYKkNGMCinDUyWQEzQPh0hvvtZhjAv8wOPHHh
MkDWy98rhsMYwKCJpshFwjJAIPpW8XEjGcBF0/zX1qMyQNj/60uxhhnAq6kR
aiSGMkD+3J47RO0ZwNYM5X4uaTJAlJFvwCpXGsDD/HYW9UwyQJYdXtpkxBrA
c3nHMHgxMkAJgWqJ8jQbwOeC1s23FjJA6buUzdOoG8AeGaTts/wxQLozzXJS
VRzAUixV4BDXMUAYsYtqOfYcwDJ42lj1szFAADTQtIiLHcC7/DNXYZMxQHG8
mlFAFR7A77lh21R1MUBsSutAYJMewM6vY+XPWTFA8t3BgugFH8BX3jl10kAx
QAJ3HhfZbB/AikXkilwqMUCcFQH+McgfwGjlYiZuFjFA4Ny0m/kLIMDxvbVH
BwUxQM2wn/E=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAAAF0b28xf8L9rIuz6dBw4QGAYRlke
T/G/CInJviILOEAbYJMeKF/yvyjT50Fy9zdAMDQDK+qP87/JAEeEY+E3QJ6U
lX5k4fS/6hHnhfbIN0BpgUoZl1P2v4wGyEYrrjdAjPoh+4Hm97+u3unGAZE3
QAsAHCQlmvm/UppMBnpxN0DjkTiUgG77v3Y58ASUTzdAFrB3S5Rj/b8cvNTC
Tys3QDNClvPz0v6/4OJuF+0PN0Dai2PmIxoAwBCZXy738zZAShiF68fDAMCn
3qYHbtc2QGrGLwlmZgHApbNEo1G6NkA7lmM//gECwAwYOQGinDZAvYcgjpCW
AsDbC4QhX342QO+aZvUcJAPAEo8lBIlfNkDTzzV1o6oDwLKhHakfQDZAGi/v
vx5BBcCgkX4Thdc1QDQ7Aw4+vgXA/r/SE1K3NUCpkAWvoD0GwKF324NFlzVA
fC/2oka/BsCJuJhjX3c1QKgX1ekvQwfAtIIKs59XNUAySaKDXMkHwCXWMHIG
ODVAFsRdcMxRCMDYsguhkxg1QFeIB7B/3AjA0hibP0f5NED0lZ9CdmkJwBAI
300h2jRAAKJaqhJoC8AhF9oib2w0QEvviyVuAQzA4GaPh2dMNEARLOSxK6AM
wKuCuyTdLDRAUlhjT0tEDcCAal76zw00QA50Cf7M7Q3AWx54CEDvM0BCf9a9
sJwOwEGeCE8t0TNA83nKjvZQD8Aw6g/Ol7MzQA6ycjhPBRDAKAKOhX+WM0Di
nhMy1GQQwCrmgnXkeTNAcQNINArHEMA2lu6dxl0zQABA5VP4RRHAlo8BiD06
M0A8eHidv7wRwOYAoa38GDNAJqwBEWArEsAq6swOBPoyQLrbgK7ZkRLAW0uF
q1PdMkD8BvZ1LPASwH4kyoPrwjJA6i1hZ1hGE8CRdZuXy6oyQIVQwoJdlBPA
lj755vOUMkDMbhnIO9oTwIt/43FkgTJAwIhmN/MXFMBwOFo4HXAyQFJaSQ8=

            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwtxw00lQccx/HHS+JmN9yX54nc+9x7NVpeCsW66vmXRnqZdilyXDajc8ZJ
lNaS4hpK3ERZnKnQFi218hJLuX/D0LKo9WI5q5HXGrt5udy6rN2z3znf8zsf
UcQeWZQhQRB+7/rviVGhxzhpgaOVsw5uTyXwg72B+rbCAie25GqyayWQu9Ug
9eScBeb4br//vlICNeH0SHSuJapKN/1EhEqAHxa2dKuHFaaGxVdY20mgemM9
46G2wj8S2y8n9IshR+jhtFTFwTaNrJZdLIay3i61uISLfg/fuzcUIIa3uVlK
uzM8DOdoXxsaiOGEUyThXMJHs0pSIi8TQVa2tb+fCYmrdmnIGoUIlNeS05PD
SWy+7ybsC37nwlMXOitIrNPc9Rx0FEGe745LXqMksh/+HNmoo+HMzdZvmiQU
tkbzLsT/SsO514MxUVsp7KtrHtfk01A+dsNBHENhhKpzR6Cchurr7h0zSRT6
HPnwboaIBjCJ3vkqlcJKsW/1xVIB+DTu1ru43fmRUiSA1cJ4vfPi+NMJxbYg
oBP0TiFnF4UKbUHd9KXecQ39Uu9zi6GSdVDvsKgO+Qe2iyFiIlFvf/OaZMsi
GzBUJOm9tqqoZNraBk5eO6y3U0ha07NCaxgfT9b7hmeN+uMpCsYyk/atSqFQ
+MstpmE/BbNG8Y3cryhMpo0H1kyRII6Qex+NpvCBb9aLjgMkyL5bN6MMotDG
SyaN1fIh/45tnwND4Q5d8IjgCB9GflcTwSIKM7POq58Z8mFb022ZzSyJVweW
fHL9GA/a8hVP9j4k8Q77lemphTx4obQcP8Ul8VHXZu2ICwc2ng128+zjo7Jl
dZFftRW42jiUdFbxsdnj6wIjTys4Nz/FS57Bx0SHJWNUvSXkRHw6788QPl49
QxdnrrEEY8f2N7IVfIxI3395u8oCdJ/fFN4y4+NptcTyMFhAIss9ftELHmbV
BZXOKRZCknDVP9HIw1fHrR/XK9gArSu4xHYepraLu9dKF4B8Kj3wuAsP8271
uMYCC+zZ/ScuETw008bUhQeawXm2f5O8jYu9is4vOAdMATVN6osZXBQEsnwz
y+fDyXZv63QpFxviFm1rHDIB87TfvKYHONj8WJdW72EC7vaRO4lMDjpm1vYf
yJ8HrCrjuLMiDmrTfPZOGcwD989cquZU5ki91JUJWuaYWelAYewTFhos3L2r
vlvHdKjjWjqGTXGd9+G8YPotcz713krbCRPsPursOFWgZfaOGrwM1Rhja0+K
22nvGWbTStP+7HFDXLA+odyVnmbsgnolV4YILK81zepy1jBEOe1/6IpOVbRm
7dO4PVMMBtk9Tzo0oxp4wC206J1k0m/f04ZJJ1XHErObr2VMMsPJUazy9Ubw
bfQclgyqmeAfq80HtpAwI+upy3D+m4kcG1o21i2CgNjrTsuWDTIS+4/2CWLs
wcf+yPPlLX8xw7OxPUSII3z/Jq3UZaabCZFWuW0OWA7qvrdzqtIuZkMr7/ge
B1foYbdVLmG3MMsl4fG7K9zgYMHwzeKCSob2zxne8MwdiP/3L6YAG0Q=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAAAO4fN/MXEMDusv4oM9sjQGyoADCS
9wzAuomYNy62I0CgixQD7OsIwKk6ctKrhyNAl4V75/MMBMC6xYv5q08jQKMs
a7pTtfy/6irlrC4OI0A49wqRN1Tvvz5qfuwzwyJAwAS/KP8Hr7+yg1e4u24i
QJy7pmZ/wO4/SXdwEMYQIkAaQ6Oesa8AQAFFyfRSqSFAi8BJUpWCCkDa7GFl
YjghQJVIyoOXcgtA2JfGGQUqIUAtzf82XUYMQMV0lmDAFSFAUk7qa+b9DECj
g9E5lPsgQALMiSIzmQ1AccR3pYDbIEBARt5aQxgOQDA3iaOFtSBACr3nFBd7
DkDe2wU0o4kgQGAwplCuwQ5AfLLtVtlXIEBDoBkOCewOQAy7QAwoICBAzZxI
TSf6DkCyIke0pqIeQEO8J0asBw9ArLzVS1QmHkA6Rb8wOzAPQMM8ss6Osx1A
sjcPDdRzD0Dvotw8VkodQKaTF9t20g9ANO9UlqrqHECOLGzNESYQQJAhG9uL
lBxACsQoJm1wEEAIOi8L+kccQEaQwXdNyBBAljiRJvUEHEBBkTbCsi0RQD0d
QS19yxtA85ZwQK0WGUC2OLXxTvYYQKqf1ufZgxpAT3puQ915GECweSNbMvMb
QEDxyvS5BhhABCVXmrZkHUCGncoF5ZwXQKOhcaVm2B5AIX9tdl48F0DIdzk+
IScgQBCWs0Ym5RZAZoetDyXjIEBW4px2PJcWQKr/FMc+oCFA8WMpBqFSFkCU
4G9kbl4iQOIaWfVTFxZAJiq+57MdI0AoByxEVeUVQGVMDuRMfyZAjsBTP7gY
FUCiUSk9MJspQOledaaVXBRA3DkP811xLEA34pB57bATQBMFwAXWAS9Adkqm
uL8VE0Ck2Z06TKYwQKmXtWMMixJAPSLBoNKoMUDPyb560xASQFTcSTV+iDJA
5+DB/RSnEUDrBzj4TkUzQPPcvuzQTRFAAKWL6UTfM0DxvbVHBwURQB3nNXk=

            "]], 0.3499999981077877], 
          
          ArrowBox[{{-4.023388730357965, 9.928124695864849}, {
           10.872145280785219`, 8.509821167884157}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwl0H0w23ccB/B4aKKakkgkilQe/DIPRY2OYvJBndU0iJuHdIxkUd2uN9aI
klSFNB6G09GxW0I4NbfOdSwe5hb9Vj1MKZvHWuZ6dnZbW9ytnFps2Yw/Pve+
173v3n98WKKPBBJLHA4H+/d/4jbdgrboJLTZY/YIMHJguDxr2I9PQt0ZPsGZ
AxxQtBgL0qtJSF07On+1jgO+Z2pTFLMk9EHkuPmKmAOLbxVmVTPJKL3o9T6+
PwekP2tu18jIKOsNwp6jiQ22z3e3bsyTkVQW/fihgQ1NBTUKcYgDagzZOJWq
YAOjTOgX3OmAJkvNJ+bO7PfETKKZQUF28YUNgc9Z8NOjZxm/51BQ68Je+M0+
FvihlkrcXQqiBlOuC5Qs6FtXVp9foyCJ7D5fE8sCUULdpWEqFTXU4fQiBxYE
vnjk/GEYFbWpF7++84QJPgb/jqiLVFSbGnFWomUCf2zkaFweFaXhI9JaM5lQ
j1dFq4qpyKpugShkMwHZXE1bL6WiHnaMvqPtJLgXSw+sm/BdrGGdBMFA/oE/
zaXtSnUMuNAvO3AJ3XziXTcGHJcXHDh36LfQqGZXaLK6duAMyeN0L4YrbCYc
Op7Ye4OscQGi+NDh32pad51dYPvsoX2EqodPP3cGYffhfl9w75/8HScoKTdf
G5dTUYRrmQWSO8HY8cal1GwqIhQyNs7ZOcGpc5Cvi9x3vEq/0kWHe16mxGbS
/n5zf0qVkA6CByNXBD9SUFd2/2IslQ6ONrofvldSUGpnmb+bkQY75k9EK+4U
FCJ2zSHco8HunYpQ/XcOKLlRWWRVR4P1xPaEQK07BLBinwmCyVBerx3ZWHaH
imn5kohLhiqCW2qpPQbtlqvPMghk2O7yOPbyTQzUhkJmjJEEw+rBlTAJBqf/
jZa7tJHAdGt+RnQTA914tMl4kQRNM7JVcTMGT2iF2gobEmh4rQ7wDQZfLd+f
iEywB5tfk8SvBjEIrN/WxeXbQTa/eq5yCIPSCfZyeOgxsLxlMTb+AAPli8yB
qAhbmFGItcpJDEZ7FdO9KUdhityT1m/E4LyHzOV2sQ1sx2+Ycl5iYBd1oWW1
lwD8IEflZ/ZcoOMthV/8g4fFcc91XgAXsvIa3h5+Bw+1Ft5hknQubKqspclD
R0C65pSHr+WCAQRzKUFHoDJ3q4ozyoXp9uuXx5A1XO52nOqrfw3o1TGXmCFW
gJXYqa0FHvC0SKPnzVqA4ZeVASLOEzh5ikT3Shz4jpe9P6P1hNGVabnGYOYV
8XCVcd5ewPtjcKuo429ee3QSV9XpBXoLg+3alInXuawIkzl6A9trAS2d/oun
3lNMsj/2hqosK1ry7Cse3E3a/483rH8ZY/te9w7vPzB8vaw=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAAAFWN/MXEMDnkdnMtl0sQIV/aVT9
RxDAus89kqU7LEBQJkn7FX0QwMG1dlH+FSxAXfX0Kz23EMD5Q4QKwewrQK7s
bOZy9hDAYXpmve2/K0BDDLEqtzoRwPtYHWqEjytAHFTB+AmEEcDG36gQhVsr
QDrEnVBr0hHAwg4Jse8jK0CbXEYy2yUSwPDlPUvE6CpAQB27nVl+EsBPZUff
AqoqQL1sk0h52xLAuwE+soJqKkCssWbozDwTwBIwOgkbLSpACuw0fVSiE8BT
8Dvky/EpQNUb/gYQDBTAekJDQ5W4KUAQQcKF/3kUwI4mUCZ3gSlAuluB+SLs
FMCMnGKNcUwpQNNrO2J6YhXAcqR6eIQZKUBbcfC/Bd0VwEI+mOev6ChAZmPy
A8DkGMBScP791tMnQLeFL9DjmxnACIaURzqUJ0BMi4hzOFUawD8gbwJ9VidA
InT97b0QG8D2Po4unxonQDpAjj90zhvAKeLxy6DgJkCW7zpoW44cwNwJmtqB
qCZAM4IDaHNQHcAPtoZaQnImQBP45z68FB7AwOa3S+I9JkA2UejsNdsewPGb
La5hCyZAmo0EcuCjH8Cg1eeBwNolQIOZVttZeCDAxu4q0xOMJUCAm7iQNxMh
wDzk3ZvcQiVAwkwoWYmiIcAAtgDcGv8kQEqtpTRPJiLAD2STk87AJEAWvTAj
iZ4iwGzulcL3hyRAKHzJJDcLI8AZVQhpllQkQIDqbzlZbCPAEpjqhqomJEAe
CCRh78EjwFq3PBw0/iNAANXlm/kLJMDusv4oM9sjQCdrDDI=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
RrLYTVyaTTP+3z+z5t0E
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzcAYZv5ZXODA84k3z2yL1XGwFW0yuXSe/0DpDttJ
S611HCp49j9bkMp/YE1EWeA/UR2HTc+TWoM+8h3oLGrmOvhG2+HZslyB50V8
B3jYUve+3a/tIOl1vz3uFe8BM2HprJZ+bQevi9tf7wjnPcA+a6lAa7S2Q4XN
d+tvu3gO1M1i2fheWdthSffcCjERngNzRSy8j7zQcjizb9VCyWTuA0kcDveZ
Vmk5XD+hkuFxkOtASbppQVmmlkOo+v+a1+5cB35P12J8paHl4HrL8gHTd84D
P2bKT4p9oemw9OGViX3nOA9k5oooX1yu6VBuewHMDxTi3OKSrumw5602WP26
jr8uO9Q0HYo+PQeb13Dh41XtZxoOs7xZwPadePk0bf5SDQeTnw1g97Rcufld
KFXDoeJ5Iti9j4IfdweqaTgsZVoN9o+gtoSa2mt1hx1eMWD/8kVVHJuwWd1h
3f5ScHjcfMCcO7Fe3aEn8Ts/KLyK9u+S1PBXdwgweNgCCs/bX+ecCVFSd/il
bQwOb6GWVa3iP9UcukLeGoPiQyLrsUvBZTUHhqvs4Ph6s9ydK36jmgMAS2/O
oA==
            "]], 0.3499999981077877], 
          
          ArrowBox[{{-4.023388733505499, 
           14.183035279806928`}, {-2.02338873141332, 12.764731751826236`}}, 
           0.3499999981077877], 
          
          ArrowBox[{{-4.023388733505499, 
           14.183035279806928`}, {-6.0233887365492365`, 12.764731751826236`}},
            0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAAKWL6UTfM0DxvbVHBwURQD14R2JC
0zNAmjl+0uTAEEA+VJA4/MUzQKYF8FCWdRBAAjlmbHK3M0AVIgvDGyMQQIgm
yf2kpzNAyh2fUeqSD0DRHLnsk5YzQDGYegRF0Q5A3hs2OT+EM0Bes6ieRwEO
QK0jQOOmcDNAT28pIPIiDUBANNfqylszQAfM/IhENgxAlk37T6tFM0CCySLZ
PjsLQORn/PcjLjNAm3pcZOJACkBfeyrIEBUzQC3yan4wVglACYiFwHH6MkAz
ME4nKXsIQN6NDeFG3jJArjQGX8yvB0DijMIpkMAyQKH/kiUa9AZAEoWkmk2h
MkAJkfR6EkgGQHB2szN/gDJA6OgqX7WrBUD8YO/0JF4yQD0HNtICHwVAuqlK
Ju+9MEAY6/2nHsX/P+Q43c3RbDBAdR3LOkjW/T+08jpwDhswQBN99eOLEvw/
Wq7HGkqRL0DxCX2j6Xn6P5bMr0or6y5ADsRheWEM+T8gQC5wwEMuQGqro2Xz
yfc/+QhDiwmbLUAIwEJon7L2Px4n7psG8SxA5gE/gWXG9T+Smi+it0UsQAJx
mLBFBfU/UmMHnhyZK0BgDU/2P2/0P1F/IX79BSdAuAeD2NYK8T+rFiT1rtMi
QI3b3QRw3Os/ulIeBmIEHkATfyXoxjLmP8tuxU8HIxdABfrcWrIY4T+NgT3H
TQMRQMGYCLpkHNk/AxYN2WpKB0BR7DbdjSbRP5Qsgv74Ivw/at2JPsCfxD/W
D1wEQm/pP8F/ygBuYbI/AIBvR2+zlD8AAAAAAAAAAHvL+x8=
            "]], 0.3499999981077877], 
          
          ArrowBox[{{19.87214526805201, 4.254910583942078}, {19.8721452691517,
            2.8366070559613856`}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAAKWL6UTfM0DxvbVHBwURQBfNSTAr
LTRAvJpsJV+7EEArJvx7VY40QC+KqZx/XxBAQLCizMMCNUCTGNla0eIPQE9r
PSJ2ijVAE0JrrzTiDkBfV8x8bCU2QOSQCTcpvQ1AanRP3KbTNkAEBbTxrnMM
QHTCxkAllTdAcJ5q38UFC0B8QTKq52k4QCxdLQBucwlAgvGRGO5ROUA2QfxT
p7wHQGUkNwWYbzlAhqgilDZ2B0Ba0bmKxIk5QGGUAiCvGQdAYPgZqXOgOUDE
BJz3EKcGQHKZV2ClszlAr/nuGlweBkCWtHKwWcM5QCVz+4mQfwVAyklrmZDP
OUAjccFErsoEQA5ZQRtK2DlAq/NAS7X/A0Bi4vQ1ht05QLz6eZ2lHgNAulaF
6UTfOUAY6/2nHsX/P5H6KevG3TlASzoYS4PN/T9EZRjwTNk5QGzwKSV47/s/
zZZQ+NbROUB5DTM2/Sr6Py+P0gNlxzlAcpEzfhKA+D9qTp4S97k5QFd8K/23
7vY/ftSzJI2pOUAqzhqz7Xb1P2ohEzonljlA6IYBoLMY9D8uNbxSxX85QJSm
38MJ1PI/yw+vbmdmOUAsLbUe8KjxP5DywMrsIjlAk3qU1zWz7T/dsEj+iOQ4
QJPlYkIMgeg/s0pGCTyrOEBXm9V9Y7vjPwzAuesFdzhAvDfZE3fE3j/uEKOl
5kc4QFPOT80o69Y/WD0CN94dOEDm9B1QuNXPP0hF15/s+DdAMngtSCKHwz/B
KCLgEdk3QCVNnAUf1bE/wOfi902+N0AAAAAAAAAAAPynCCA=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
6TSarekbd9oMUxXuGsG1005/AbZVgzw=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwl1Hs01GkYB3BKaw+2XIfcGjOTwWDMDNL82nxFRzdDVrlsDqdiFZ2mSEoX
pzSbZfegli6jcgmRs04MupDS1lZUrlEtKdTKqUjaJdrdef54z3M+/zzP833P
eV+bjdsDo2ZpaGhs++/8XzUSrYd9+hi8vTRjJ3kqwdwd5MetlekO9yTIjSU/
9fF7s75WAmUU+W/dDt+6AgnMI8gC/vJ8WYYExiHkpJxzn+YnSHA0gNwbOrTK
PEyCxBXkDTtYp/2XStDvSf7wzOX1ZbYEt93JBUo3caimBNcE5HDFb5OG/WJ8
b0U2l9s3NTeKUaRL7gotTFecE+PYhJXa2d5WQUgRQ9BLljnlWk5GiBF7k6xj
ajBY5SnGukLybY30im0LxBhKIR8a1krkfxEhchaZx8ny8s4RoeyFpdp9uro6
07tEiGsjKz+mttWsE6G4lRzSN3NK7iZC8HOy0d2kTQ4mIqTMkB9dGhMMjLuA
40j905Vx43kdLpBuIfsqhq4FV7ugWUWeLY88YnDcBWvGKG9RyUiAk8AFopUL
1I7Mip7/SscFYQqyx0Rjk1enEHcukC/drQ5SHRcioYpsl1c6aBckRHQh+Zxc
mag0EuLUHrKpT6a2frsz9N3JmaapJw5nO+NeN83/+s1u+09rnaGzmPbzC8ts
dE5xwrHrlK/JKXVtgacTJsPISzSTXph8cYS7LlnVERuf1uCINY8s1HYsjdCa
3u8IpoxclPzdr/JvHaF1kmzh72s78FmAYiU5m8PUBl8TgKMi6044r7ifLMBw
BPX3j/Ltm1XmAEsl+bYHI0/c4gDXfrKnnlBz2M4BQiHtX9vHyQ5/bQ89Bdm5
isVtLbFHyyC5WKFT7fODPeJllN86bManztYeU9fJOU5jnYIhO8RI6b7mag5F
nz1vB4d3bLUD5TPTXe185MfbqP2H99gvq47xoRgle5kOLWgI5ONxDEftK8M9
lSJDPnJ6yKKGFq/zrbZo9OaqXZp1o80syxYhJWR2lGpTRoAtNmjx1M71uDD+
ZZ4tWsLI8/TyjsQ/XIhP6xeqHZSssiyf5iG+iHxfdqHCup6Hxg/kZZy8pdn7
eOj1sVX72sfMh3OW8HA/lyy+mxq5Z4qLtBFymTJpdOQKF/O9+Wpz5HGHIvdy
kXSafNI70qhjMRdlH8mGpkFFvv9wUMuxV3u9Io45yOfgzn7yg9DI5rEhGwg6
ycudgsKji23Qa+egdoPGirc9UTboTyK7dTAH/RbawPV3ckWJUP/GABtPvhGo
vTCZm+9axMaDQLJSZiou3cSG8XGyMUe3yYLLBivEkd4Lx7e6uMAavbxCWXYv
g04LizRrjjUajLT37X3GYMvlO021BVao5IXsnO5msHlqzeadPCvUBeeILDoY
NPeXbZWVWKLj4o3L7S0MzsT1d60WWOIr3hMd/u3//sPT70u3VlpAVt/HM6ln
cHR79/MydwuUJrVpn7nEIO/ViQN6Deao+XnuT56HGdR4qEZlE2YYmbpqkJjA
IHF3wvTwXjOk8gPPhm9i8Ofgi2fvdcywT79VPOHP4NVhjczIYlO01Xg0e0oZ
HF/bwpL6mSLDPC1WymHwUrZyx/4vLBQzN/WHtBl0JyecdahngW0+cHXZGynk
3bJ8LwULn1Vv4wKapbi4uTvxZhgLi+a94M4rlyKDbcCukLKg22r1462jixGq
095ou8EEzQk5V+oOeCCm/ZSXe6Yx9k2ubniTsQiXk2MKnnYZgbVxaXZ4lTtW
zl7ykuVihDPl29znjrnBcquJ1uvThjB+3FM2vcINwspxLX9zQ+waOPROUOeK
1M6ewdXlBrjVHqN10tMV5k9uFffKDKBxPv0vnz4JRutVvtpzDPAvEeP6xw==

            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
fA==
            "]], 0.3499999981077877], 
          
          ArrowBox[{{27.872145302235367`, 19.856249391729698`}, {
           21.733622882811005`, 18.437945863749007`}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAAoKqE04m+JUDxvbVHBwUhQCr5+cSE
piVAT+gZDfbiIEAWAIlx+IslQPSTUsxOvSBAY78x2eRuJUDewF+FEZQgQA03
9PtJTyVADm9BOD5nIEAZZ9DZJy0lQIKe9+TUNiBAhU/Gcn4IJUA9T4KL1QIg
QFDw1cZN4SRAegLDV4CWH0B8Sf/VlbckQAdpKowpIB9ACFtCoFaLJEAd0jq0
pqIeQFFSFMjTXSRAsw4l1o0hHkDPgObvUDAkQHT9Dvh0oB1Agea4F84CJEBa
nvgZXB8dQGSDiz9L1SNAavHhO0OeHEB8V15nyKcjQKT2yl0qHRxAyGIxj0V6
I0AFrrN/EZwbQEelBLfCTCNAjhecofgaG0D6HtjePx8jQEEzhMPfmRpAIy8/
pTCDIkCEqjvWMd8YQF8Ih7G0VyJAfV/R1PJiGECYA3pspywiQHi4cLkh5hdA
zSAY1ggCIkBwtRmEvmgXQPxfYe7Y1yFAZVbMNMnqFkAnwVW1F64hQFqbiMtB
bBZATkT1KsWEIUBOhE5IKO0VQHDpP0/hWyFAQBEeq3xtFUCNsDUibDMhQDJC
9/M+7RRAWiwBjNOxIEC8TiMv90kTQJRU/3EHiCBApfoX913PEkAX2QxyQVog
QIKwJgvEYRJA4bkpjIEoIEBUcE9rKQESQOTtq4CP5R9AGDqSF46tEUCXICMd
KHIfQNAN7w/yZhFA2Au57cz2HkB862VUVS0RQKqvbfJ9cx5AG9P25LcAEUAK
DEErO+gdQK7EocEZ4RBA+iAzmARVHUA1wGbqes4QQHEiINeq1RFAttQ4F/zE
D0BSaHoLg0f9PyachQpZFQ5A58CLJM2y4b+41rOuDI4MQEkoYL4IhgXAa4TD
AxcvC0ACOv1sH1QSwD+ltAl4+AlAsen4zarpGMA4OYfAL+oIQDcjI4Kmgx7A
UkA7KD4ECEBJ871ECZEhwI660ECjRgdA4JkBcndiI8Dsp0cKX7EGQBBzMvA=

            "]], 0.3499999981077877], 
          
          ArrowBox[{{10.872145280785219`, 8.509821167884157}, {
           10.87214528290059, 7.091517639903464}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwVjnsw1AkAx73KXA9r7eP327XYV5ZdyenKxsq3uzObZyipOa4kF4UV6xR1
xnhdl8rjkqiuc5uLodtza4lz9kLFdQjX1dLDjMfRO+dNzv3xnc98/vnMl3dA
ERRpZGBg4LW8/6kDd3CojIvR/Ef3tGEOeKEN1lOUXIRvUbx1d3XA8GDXxnYZ
F6Ghss595g4IzLDq583Z4MEcIjjPJIirElI6o23QST+pTqyQgO9Ra3zhrjU8
K9/URsZIEOPWVX+CaQ3XxtLEd3YS+H6f4Ji20wpq+VdjrKditMV/d/BKGgeq
HcXEwFkxeiqCP9OXWILZO7YolYoxluTWbS61RErZedlZihjKWbXPmqdsOHiq
ttCH7BH/kfbPe+eWvZEx2VFrD72tz+4gbzaSTcbjajLtUd+tGL5kxgaNx/ux
I8AeK52FqVUDLMybN16mse1x2zuKSNew4NRXF3TmmR1m2LIGdhELmsPEbReV
HepjpxT6MBY2b9NXr+4VgZxmFO7yZyHM8eR4RYEIbeT+YrEHC/0JC7xPgkT4
racvLdSJhWqzPbv+poqwJFR6jfNY6DXMS//ivi3OUbZO9tJY8PNVVbzJs8Xh
AucM1koWOK++vZcUYIu86sCJhhkSGA0fn6TYwii81LP+OYmbLquNj3atA/1G
4dTcLRIy/aOFrxeFaF4hy87Vknjpt63OuEkIqwOv5zdUkihJn7x48oQQzi3V
IcOXl3tJU6opNyGm7ZIvVuWTGLD79GHcvADKQp/fs7JIJF56snGkQYAyI0lX
/HESxt1tdaEpAmR+yWiJjSWR2zIb0bNFAMvXqy6fCCdhlpwilc/yUfL84YZ5
VxK7s2Pc0kR8zAxfOsXdQEKwk24wMcLDnb8GnNwFJEothA6HynkwbSxeF0iQ
aG4tbe6P5KHhfPeh0NUkTkenNgSs42EgMnP68yUCJoYtnNtDXCRINH17JgiI
TieMuKm4SB7Zt+Q1SuBf02+Imggu3hTlJDv3E4hJ/kBtJ+DCz8V4Z+MvBGr4
ck15mTX064O4HBUBs82t6gd8a2z6o3btqTMEfPkxB4qvWSGM4mhpFE/g4OjW
9udiK+yYa9ie40Ngb5ZsuLuGA7Pc0CKSS0C8cFArd+egpNXCRPuSiQGfellA
hyXe/fA4f5+GiSjl5mPjey1BiJs8GEomepKeRjFfsHHGNxXVTAa00tq3/lMk
8kpDeLN1dJiszScKU0kc8SgS/hNIB0MW7Jm/lgRH6uKdMkTDSJthqlcVgatZ
rgU/KWhIqiyqbwwhMC+6upAzYYGWMdr7UQoBiU3UKeN4C/RlHPfp7GPC6UiB
lD9MRdmxO1fjyplYs8Zm1VAQFc53FxfvZjLRZGj2fvtNc6QncCIeK5hYb9NW
6Xp03uNJ7Ix8fTYDWTRl4S6/webSRNq2CDUdr26WJXj+bKLTZMT6p72ioV0+
3X5RTdXZX1kZn47lnx/vbz33IalbvPXkWnS5BXz9c69n9lvpHN9NvnbhWmBJ
4+4mC+HpfpX4+r+opmKhg3lhU7BAd10xqMveQQU3+v6hG6NC3dumWrnpCir+
A46S8MY=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwtlHs0lAkAxa3s5pFnYsx83/hmxjyMKZLsTKm5vVBTRpapVuWVWqJRdhWr
bCV20hEhRWWrU0rokFoKGYWylahmqnPS2AiblmwNKVp7zv5xz/37nt+9lxWu
DIg0NDAwCJ7Uf94Aqqv7DIXe7Gf3rm0QwcLbearqMIWd2rn33eeLYObVePBi
IoWqx4oFc2xFuMp+s9U7jEKByous7nOB6djZkhBvCkL96xh1tQvMGwe8Pwgo
bKYrRPJUF9QmNWGqCYUVelVwmMwFbr7r3VzuO+K5at/YiLkLliSvKsB+R9g9
kZpMvydEefbGm34ejhjTqtMrDwjR3bu3uWeEiQH+gllNK4Vw5ZOxoWom1qRf
WDFsI8QhuduV+iwmvPRTXkieOmM09MYxg81MHPtR3lN4whkJwfUkbxETSsOM
CFqoM4ylksWubCZuFl1bc5ntjFIz0TeECRPpKzvUod0ChKmPRg18INFq3Hla
dE6AApeNaUHtJALiJsY1j/iwvpBh/LqZhO/J0kRZDh+dek2/rJbEot1treoA
PibsIUyvIDHPass7iQ0f28xa7uafJzFbEf/2SjsP7u1b7+wuJCGQv693zeZh
edQsniSLBPWpP7LMn4fKRxav7qaSsP8+8E+RFQ+xVuZfXBNJWMbM8Shv46I3
+ZmuNIBE4M9XiUvjTggK/L1O7U3iYmDZesc6Jxxbqre8Po9EtaRsLDfZCeWr
jmrzZpFIFV7Vm3k5IU+ZbxvEJmHMb/JP/cSBf8nH5pEZk3lcXxhPXOegc7z2
790mJJYuGWcmJnGwMLoro/czgdFwbs4HCQc7Bjef8hgiEJUZFBn/kY1pUcqS
sGYCirSY+Sl8NsyWPajsqSaQVckdGn/NgrWpytW9hIA8K2rgyHkWGNVFlE8B
gVxHsdvCzSwI5TZpTioCG0Kzb3zhsoA2XUhrAoFLAT9lansorBOblYsjCOzR
v7rQdI7CroPZcUo/AhrZC9PWSAonmuKLt4kJVAaEVXVzKRyalu9X1M9AJdun
6vwZJjwHzxudfcDAFxq57tYk9yx5unigjAHr8rYpsnMkCmeK/0pKZ6Cza2PV
AuEkZ1WNgzyYgeiq1ujCCgLXw81afnBm4Bp3On/TfALtNTOHW97RcXuuuD+/
hYFjmVRhTBUdmd2SCk8FAxZdr9SK7XQ4uNNS0EvHcoNYzz4DB6zNri/fpqXh
8v7G5qorNMwmhm48XE9DqSB8aNcuGoaw6ZSyyx4YlF3xkNOQ94WukEXaI1qb
Ytn3LQ2MtbavIvrsIOoaN8pxpyF9hf+ymmg7pE1rzpkrpUGjeZAsG5iBhHVP
b7RtoMFs/LCKHjsDn1s8dodl0sCty9nKe2sL3r5lcZokB9T6cVxHlk9H1OOG
HOUdB3ynzfstv9UGYarCy250OuZzmBUlfjawOP3klkMcHfHutaFuGmvEMpQP
ha10jBnFXRaEWWPf6JYnEQIGOgokJ3MGrSATN3TcPsjAx39owu17rdDyfOed
Ve8Y2G5loVDbWeHjy8xrE8EEduhmLzYOsUTcqTzPA7rJff/61Cl91BRRN4e8
lsQ4Ym9vg4nCyBQ7CoJ00hFHHK+19EyxMEGjfXhWHSjMNm66aGhvDH8pMyXp
wOS/tOo26cip6F4SUqu5S6HbMGILjfMN9nC5vh3mLExUyCpKeF+D7FayY1ez
UKAtWJwvMMKtFKmsOJeF6nh/RqdgCmJHcxp/0bL+77MhtvR6PJPT2OjYfyQj
UfQVPvf0v4wOYkOli3z/h9QALu8rNe2ZbIyI778ZaJyQDltn1aXeZsNf6UwN
s8elgdK9ufv1bBCbdAeKiz5J/ZPTgh84cRBuP0yYS8akr+8U2UTKOaCrNvaw
B0eldtz7NT4JHPjWcF/2qUekuiyL1QnHORgo9jENqdBL/wVVjWlz
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwlx3841AcAx3G2cpJl58fd+XG543zP9+7yvTu10Q99DvNjPd2eTOuHiMQI
uWdpDRVb+oGz8tsJkzsU7fyIytOIbD3L0DjTo+VXk5o26qkMlbZdf7yf9/Pi
7okPiHjHwMDA/7/+fzs44xMVHDzMHuq+HCxCfOzj87/OcZCqMNI9dBfhb9nA
5sbdXAy5qQJpZiKs67h7O/0OF9NT2VushoXYOrXosi3UAddPPLlF1wjh0YoY
mwUHyE2bW1+FCzHrXp6m0zhClTwqGrQT4nAoO/mbUB4qBuKZZb0C9Imvyvmr
nBDNjDwSmCjAsxrFmw4TAo+9boTM2wnAMVI0SHYQ8NgXXmG0QCL5jfV6p0oC
9v35nxfpSBgW7v+uZJpARvIOrfYCiUvdcb8XruEjNVL7pf9hEmfKmU8YSXws
yc1rj9pEosg8dtj6Bz7MDU2VpkwSPQ4x6vKXfFystxxaPeoMlz5Lz1o3Z+jO
aavH1c4YX9xycoFGoj84KCizlY+6gg0zyvUksm7u7b/4NR//qOS34hUkdnem
B8k+4qPR+LiVWk3CL7Br1s+Yj/H7YzpikIRPIqHp7CJwwnnPkpc0AbZLy8Ib
lAQqhoyr7d0FOJYiWWMuJyCdHbiWFy1AZ+gYa3IFAbejNz13qgSwGaxZseq2
E+JcrolKJEIEJjfb1b7mYeQPqdY3TIjnhVEHjdp46Grw6e3JEeKBT3GwJJUH
adGs0uWmEIJTH/8m9ObhvULPqeiXQrQFJd57sYyHvVrBZIpUhMoO4sDpPke4
jmhTFTEijLQEqOaKHZFE3G5ZVyVCpPdruSTSEetPZmaP3xfBM4zIc3d1RNX5
9zuD7rgg6ZnP2okmLsxGI+vHaBRGgu/uilByYW2iCayXUggremphHsbFDfLn
uq5tFGhq5e4pKRc0D10HdYjCL0dqN04bcjHl81PG6BkK9c7yJnYvB3HeZSZ3
NRSuqBNavyrk4PQHITL7SxSGp1cGvQnmQM5eStVdo8Az2ZzVwOUgYT5fl95G
odHBt6mqYiW8NhbqXX7LZTCLuxKBEUV65ygYcwnlbNTGqPROZS5a77JnQxZQ
rLei7cE6rzI7sK3P6h0S0RMsYNthbftbf2LanEIvsUWJb4neHpdKzs3Z2AJ1
b71qZ1rnqMoG7gdL9b7s1vxUPstCQcsA/XEHhRmNV/qrRBbKGUndK7optJ+1
N/2QxsJnyqx3X9yjwGf7Jy2WMtFoY3al9DkFB7JdF+DBxEhoyoG0ZWI0Xk9j
rX7EwFVo/W3txBgaK/CrOMvAI5FliIVUjHzlbHjpdgbinBrqYzeJMXlDvc/J
ngFfwXEZP0qM3mNlu9bOWOHU/gue9+fFyI0qa0rnWCFHdm6iP0WCb096LsnZ
Y4lodSx/fl6ClrGMTZ82W8A4b/nyrVFSsBIOZfSwLPCFxdHTk11S1MqMOwyy
zFHF/bHpe64rFP4bZv6im0PTNpxUE+uKqEyGVU41HXFTXeP3al2RS8uTPtlM
h0Fl5p/eo6542trsS1tKx7+7ofci
            "]], 0.3499999981077877], 
          
          ArrowBox[{{8.318152461230397, 
           14.183035279806928`}, {-2.02338873141332, 12.764731751826236`}}, 
           0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwVkWkw3HcAhtddZjqEsizW/7f/tbsspe4yiVdsbdp004SIcVQalqq6qWnU
RKSOEKXspEpCZMN2ZxhsBAm6xIyj7laipdNLHB0Vtjmc1al+eOf5+DwzL4lJ
DY7TZjAYONz/HAD1x5Kcwmrl/ETX+07oDDn+sE1Jgf9Rx4MaPydw9eRXWW0U
sqwlm1PmTjAM9fe276IwrlQkn1sXIi6QNTn9LQXnIwMerv1C+My4vcMaplB7
tkYUVS5Ewf7VVt1pCiaZbnUL4UKIh2z2yn+iUJV07VgzEeKK84bTg0UKdgGN
gqllR7h7HAR9/pRClyY3MlDhCLWu3ZU/tym8kN2WXI53RKLu8FqWFoFxoqq8
iecIL/dnlwVGBNqZLeyOFQdQlXdEOqYEE61VB0qFAxzZC556VgTptlJhcbwD
Qheun33djkCjppQSngNuDc01XOISnJCNZv6zLIDR7zdZWwKCnNrIclmTAK9K
iyeH3AmC0/49mJvlw+VJXJGhN8HFyaDqkzI+pPXLHmm+BLrHfAIGg/loua4/
v3uU4NnDH/Z9TfnQ+W40QxFA4B9uMdL5PQ+pPk7a2W8RPNXRueNWycNfT1yL
E94mYAx+XaE6zUPO+JzWJQlBhuzHMjcTHqw3bTO6zhCIP+2v7Zy2x6hu6N/M
DwhapSfNXA64mE2VOn8oJZB5XWvp6+OCp7kVmZtAcJ856CnO5UJdaJAblkRg
84qmdcqPi1rXG+U7qQR9BuaWIfs01JoI2flMgjqLN9If9dAQDAeVlmUT9HiI
eoJzaMy1R2fmXSSwiDn1fPJNGuPt8lM+uQSq+vdsgnY56PligGVWQHCuKMkv
j8+BWYpJUEURAdfGiv9ihSB++rkvSggavLxHP1YcdqsSd+3LCMYfD7NX4gg2
X/skHxUEt3dHHGPtCfi7prMVVQT2ct/1xSUKYdGiDbOvCMKm2bFxjRTyRIaz
EzUEXvlZFWuxFOqbL+T31BEMdvulZ9AUOrbbetOaCe5yxPcUcjbCk7P2C1SH
f8mazRY4bDx+qZwQ9RLsVBtuNDXZgl8pcWkfPfS6Xgg0EtriXf8YemSewCjq
rplBhw1OMFaVJRuH/dYH0TeP2sDy0c/92/ocrKUE2I+NWUPdg4QjNAcroXnx
X0ZYw/eeuXzuOAfVM12czXUWSgciksXxHOz9uhq+ks9CFdN4RFLLgShblRSy
YYWugbgbi2Mc/HZ6XL9QaoWXvdFrejscTKR4Cj5bsoTEcK+jm9DQn9mc8Uyx
xKDSe2dbTEOWtcfo1LLEmVpm93AijfSo0Ps79Uzs/1KjoUtp1BczthlBTAxk
qhuNFTRst/b7Jrcs0BBZOFuiprH+jdjovMoC/wEELbD1
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAwEAg4eSiIEDnkdnMtl0sQENL9OEZ
zSBAIB5SHPI6LECjFggJXf0gQFrvx3kwEyxA4aJbVq4zIUCQBTvlceYrQPjv
7skNcCFAxGCrXra0K0Du/cFje7IhQPYAGeb9fStAvszUI/f6IUAl5oN7SEIr
QGxcJwqBSSJAUhDsHpYBK0D3rLkWGZ4iQH5/UdDmuypAXb6LSb/4IkCmM7SP
OnEqQMdYg+EQNyNAVNJO9Zg8KkAKu6zH8HMjQM8NEm+QBipAIuUH/F6vI0AX
5v38IM8pQAzXlH5b6SNAKVsSn0qWKUDOkFNP5iEkQAltT1UNXClAZhJEbv9Y
JEC2G7UfaSApQNJbZtumjiRALmdD/l3jKEAVbbqW3MIkQHNP+vDrpChALUZA
oKD1JECE1Nn3EmUoQPB9E/NHJiVA4lPji1EmKEAzq0+KJ1QlQBErGCYm6ydA
9s30ZT9/JUAOWnjGkLMnQDfmAoaPpyVA2eADbZF/J0D583nqF80lQHK/uhko
TydAPPdZk9jvJUDb9ZzMVCInQPzvooDRDyZAEoSqhRf5JkA/3lSyAi0mQBhq
40Rw0yZAAMJvKGxHJkDsp0cKX7EmQAw+w1g=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwVkms81XccgF0il6aJDhEO5/r//Y+jueUQvkU7baFi5MOi3Ivc1kgoqYgm
5rKQHE6XIVNqKUv2La2jdXFNt7kkly4iauPY2OzF83lePe8e06AYz1AlBQUF
zwX+N4LfOs1SNg5lmNUNWlmASpzyGnY/G3eC/PuXSy1AX1szJdOSg+klWbXx
Q0KYZsYp2RRycFV+11xuvRCkFTZtgkVcjCKPjzgkCsEgz3cwOp2LjkGFrt/a
CCFw4qnD31o8lIo07R3HzCG2ufF5RzUPSy86hBWcNAePuembU558ZMs4dxNd
zGHmfOH4Ng0K16beDXrzUgABVgkPooFC+QrWOHVbAE1dg96sWAoZdTsacioE
oJ3zLDO5hMIC0ZHry5ME4Bu4LTixicK4ppy5m+4CKP4y8hXjKYX1tskp+cYC
uO+xSM9vgkKvKne7zLc0TEfyJ+BfCn20VT6r+JkGPenj2HtqBJviKsN6k2iw
kmiXyTUJbgoV9yvVEIAq7zINLYJ7Dl4wN95FYMMSs1OOugTlQoXpozSBL+4l
lOcbE3y2W+TgMk6By7BXhbo5QYaT/6zbJQps/RqlUmeClySh1ucSKWCTH89u
8yFYne/72sOJAnVvo2r7OILzDOsVYlUKXj8z/EmUR/CCYKbleBsfrAcHPu8O
oHGfW1f75DkeRPZ66tql06jYdDmzI4YHVc3dPjESGt1X+yUUrebB2yNhWvsa
aPRrvlPmOM8FSys1B18Zjbwt8tm7LVxIu9P4h3onjQ0Tk3n2R7nQ6Zz84XgP
jWqlFwNyN3KBSNwOjHbTaLDZJqT1Ey5kD5mn6Tyg8b12WuXwQw74tKj9OvAD
jceEcyY602y4cb09Mj+Dxn9qW/98dZUNQtexeK1EGndwHxkV7WWD9Gv/7q8i
aLxWalasJ2KDoYpxXqgfjfPq9SGxchacdLQ+B+402u5JOyRpZAFTtZwxAgv9
07yPZ5JYUBvg/8LbhsYU0eDVNBELnMRRqnmExuzCPQ8s5WYQ77V+t0yDxoDy
3LEpjhn4mATWhijSuDcsvaZx2BQeKXmOeswQnHEKkyScNYV3c0bGGRME+3gO
96hQUzj1actmjVGCfFNFYRfbFEbs1x543kfwCbkmix9iQmtKcbW8h+A71+3F
ameY4NrT2hbSRjA8Ri4pDGaCr7hzcmUrQXHNoT4Giwl+qq83NtYTHDXlTT+p
NIZ1PRarPtYQFG1dJn7LNIakfOW2DWcIzlYdTp+RGIGCQwj/6imCXL391Qom
RtDTtmWN8wmCWDl/Xbl8Jcxsvq/xYuGH2xtUf1E0WgmRzV0FZdkE7ZYUnZ49
aQgC/YjHcYcJ6o3V7B03MIQ1AVmPtu8nGPxKLOotMYA7muUmBpEEG+yuTHr8
pQ/rpWa7vIII3szVGVBP0ocbujKjbi+CauLA8ChlfeAFH7MvW/g1K6A4M6FI
D47mxOB5DsG1Pc3At9CD3oJvLiipErSs68w/2M4AfsKJxZUDFAaOdKWmJzEg
wvp5a8YVCm/vv6VIEwaUP3T6cPkwhUGJ5cbJg8uh1fVWBt+DQof28O546XJw
iR5Wii/m41Kjkoj+l7oglrEkfe952JSkJTWx1oWOTan+0Vt56DwiS7Mq0IHB
xVOrTe9zsSTot0WGijqwb+Kg9bQHF38fVxX2pC6DElXzLe/7OdiR/d0/IerL
wNn9Q86SAxy8aOsTKzutDVEt3W82CjgYOhWcNeemDcydHeF1o2ycvHFFvFhF
G/4DZO1OKA==
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
Mi1q3dL9b9BM55RXov71IPd//Quw1yBI
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwlzH881Accx/GT/KpwyPlx3H3Pnbvv99xd2ZH8/hg5RamLelDJxNaPR7FW
FxExP2Mo5qEmSfkRocmPsZPPYkhr16/1wxrloUM1CxXWqm354/14PZ7/vDkR
0fKoBTQaTf7f/i9C6KeLT/FwJN2mfli6DJxsa8M1fuYhmeP7JoW+DP4S3Vcn
zvDwSN8V95dqCag3D9792t4W1a7ZqcJWCVhWopD+lS1uVdf22ydLIM8scYyr
tMWRXoKuvUoCPhcZBp1L+JjweDyoaoEEVkQe++5JJB/J5TonTdvFsMvzYX52
Nx+HW2Ifrd8jhgF3zQmlnQDrD3iwQxhiGH8ffOeXUAG26ik0NF+IIOF6hHxj
qgDPicXjhp0iyDtH7VlfLcB9j3fcS8oTgU1GjXV3jwDNbSyvybeJYKXi6a76
IQGWTQX+lEmK4NeYgUDDaQEukmt1cibtQK3IUqlpJMrB5ap1qx0czZwac9Aj
Mb5joj/hsB1ovzItmVtMYmCUbGhBjRD2+IWWLDIgkZnRIGbtFoL6A/+0+1IS
C1bRZjLthHDQMqH0BIvEpjJnV+8JCsyKQ8r0xCQeKd7yd0AjBTdjO8vLPUmc
Fn3uUHmIghJlXcW2TSQah4WMr/OgIGEH74LLlyQO2DlayLQp2L+XW+ecT+La
ormuXBUJtDoqXXszhR094W6ajQKQ5vXnZ8RTOJbK9cuPFcA/A5OVpcUUWt9o
SJZ5CCA4/0yffz2FW85ojZOaAvBpuPM6V0nh2be8RIdePnQ75Up2dlH48om+
1+5jfHhAqfbfv0qhnxzt+wP4kJRWdPVRO4UXAtzWBxnwoW3NiHVsLYUmt5JL
dFW2cMpCP04jhMKg+Gar2nc8EEbzpX5uFDpapNcmdvKgodo7k8uk8Lk/fYVx
Og+onsjYgtckHjIJUkZt4EFhb5Zm8XUSf4ve4BHH4cHUxUbK/jSJup/pKgPe
cMFXMfQsbDeJ9NFYx8cqLuRw6TKOlMTnGudqpPVc6Gvy8YidEWDJ9+lM2XEu
bF9j2RQZzMGonYuLurdzYN3dgOB4JgcZrdm+3NUcMOjrZkeMEXgp/I/DBWIO
lNqmmFgoCXSKoklN9Tnw7kXq8rIiAiu7X+2rHiVAxLqhmDlE4IfEdsnaDgLE
baFqVjiB3oUb9mvmEvCuQ5zECCQwZmG78/UQAk6LfL0GfQjMUk2nnicIMPGu
ECm8CGy0kTVVlrPgQc+8y65J7n3DYUGcU+VHn4hhzB4os4bpwnkfNXtvsZVt
DbKhecdceerqXWoFCkbVR4dF3dgmtLaCoy7zDlzSnGRUwoQd/vP2uFxydtaS
CTar5y0OTe0aOmkJ2hPzfy0rmyfXvTEHfbMvNj5xJ1AroctdK8EczG9W9dpI
CTSfZQ2GGJoD32JXlguHwOcXe28HXDKDFVM1xaQugUmnOpiDYWbwbcvAs4cq
Nt5GWps+0wy6q8M9DZPZ+Ix9vOb3EQbMtY9KJrlsxNZ9L2VKBjj+Gd2W9AML
QzNPHpOfZYDCc26w3YOFl48bxb0tYMCi8ytTZDId1JIU3m0pNwVZvL6d9oHX
nm2N7fluPUuBfqdioWPXUuhnp9XlvDeBLWmrNsXLOOB8cFpY5W8CwynOXtxw
Aehc1tLLqTMGq2GJ94laETg8/FHmyjOGtFvGkpHC5dA5ajra1GAE94YNeiL2
fgIXBk1GZwONgFaRPe4zJIXJjmaZjpYR/Au9PDir
            "]], 0.3499999981077877], 
          
          ArrowBox[{{-10.300867150799945`, 15.60133880778762}, {
           8.318152461230397, 14.183035279806928`}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwl0GtMk2cUB/CCxiusZbSFqWDbty2llLZvjdCBHUfGAqkwasdELjIVqhIv
7USUjC/CAjJgBcoEgjXqNoswRxwUuWzBh8YwrVEmrOi4lRkugwoFVtxAWufe
fjg5+eXk5Jz8mUfVSpUniUSCt/V/RyXHwv/2oyKNNFUaoJHAl/vuqil5VHTy
o2lP388ksEtgb09/QUU3Cqn1EfESeMT3oTw/QEPUhT+d1eESiI/dkVdooaF7
XycKdzIl0FZAWUjLoKOGtEMhI5sksGVo7kLWIh09TNm6bJ7HIU5hJOu1fohb
klJm68dBM5HZ7hnmj+5Nxc7L2nC4WLN2pm7aH+lyBwNMl3G4dNL3hFP/HuJX
9pJqc3EQPKlLTFFuQ5PFp1pPfIrD6e5yzu2N25Ep5cHu8N04yPfYZ5Z/2Y7Q
pqFLnjQc7scifdjZHehF9Y1Gs0MMw+NvZGeCAhDndeCVit/FULGx+bF+JACV
faBM328Uw/jP5n2mqkBEzYicI38jhoNFCV+FTzDQMwaz9JyHGCI+6erswJho
tEVgtw6IwNRZouAfYaJKxmryr9+KwN7RkVCuZyJTadPH19Qi6FHIfxqzMFHO
omzgeIQIpAWyfKY3C91KMk4y1okgSa77ISmahdKN3sXmh0Kg3o6LzstloSqK
3JilFUK+4XBUuYGF4rKzNXaFENqaz3uoMzGkO3xgMU4eCj7DkgtPijHU/dvZ
g160UACZuXq9AUPr7/aS88cEAJY9yT49GDpKUfpdNgiA8l1pj+MZhgatVHXq
aQG0GFr7m2ffztlkv0cSAXDG20ujVjC0YQzI069CIDuxdsawjo1MXk3JzZ0h
cNGx3z6xmY1q78gXGPkh8EWd/crKVjZKVMVaPZv4cP35EuFeaaTmfDYfcn5c
JhzlJfKY5fHBQf+XcLuVpTv0VzAwaauEha107GlDMDgbXhM2FG8xxhwPhqK+
NcKBqa6YDm4wdJU5CdeELllCpnigH3H7HY+pY9du8sDh7bZS43IODgRBp8G9
/+DDJa28OghkPm7v9Zva2a0MgoIE972u2T/u4O8GQWGa+x+8+/Hem0+5EB25
QvhWVU+/fxUX0Mt/CDNUbZnlCi641K8I10obHW/IXFi97yBM9rpalNPHAaPN
nUextZI+reUAffMi4YmM+iaOggPkaHd+vmF9MatUDtTXzBGmqESTWaNs6Nzw
kvCQratM1ciGU7pZwufMn0vX8tjQ+v4M4VFSko0Xzwbt2jRhasWR720sNriG
pghvy63PjHFiQLJMEp5vcfF2DWPwHyND5KM=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
Ft2LqMDf2BZV1ifCoRsKP6NJVPgPeybY/w==
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
gx2CSy8QSv9//wUeepsy
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
/jaTN7XE/VTgquxTNsP9P0mzk6o=
            "]], 0.3499999981077877], 
          
          ArrowBox[{{-5.023388734467687, 
           18.437945863749007`}, {-8.023388734653452, 17.019642335768314`}}, 
           0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQfaAjzfyzuMiBAosoC9kCI4ebqvwT/zwTPmCrF7Tn
QJyRwz+FFD+59cIHXqgeqP/oZeSgWZWaH1EgfKBEfknTehMjh2hD4S+rtIQP
3JX6d+SXtJHDVLfcO6L3hA6oSpxzu8xg5HBjZ7HGzC6hA97iIhyWjw0dlLvV
bpgYCB0IkLjAoXPY0KFsV+vrF+cED5hIM3muWWDocMF9YtLWNMED3+VXndhZ
beiwfktjZLGC4IH5RxqiWRMNHcKZmwNLHwkc4Bd/bLDS1dDhqPFUr91rBA64
iF/0WKpp6PDTdYeLa73AAbujXot/8hg6fLF8Yy8cJXCAQTHAYdl7A4dt/IY2
qrYCB9q0Hsqvvmjg4HC8zbJaQ+DA5Yd/HTk2GzhMSHhrLiojcOCZ27Jleycb
OMxalwIMH4EDS5a/CdDVNnCY0gnhJ0xMk3zOZeDQ7wThW3w7cNjxqr5Dz81k
MH/TyS0hW6foO3T4Qfgac1c81QjRd2hdmATmLyiYUzZHWN+h+VIimC/uMoFd
4LKeQ9PDBDB/gnjLjOZJeg6N5+LBfI7X5ZrfA/UcGmbGgfn1+7J3ZQnqOfTF
xIL5d21L/VZe0nXYaRgD5nOLrnpRO13XgVEyGszndOHqfBGv65AiFAXmXzk1
Vf+ltq7DE9lIMD93pc+d+t86Dg3WEWD+tft6/WvO6ThYZoeD+Tx5Nh75S3Uc
+NaGgfnCIaXsJ+p1HBgYIfznE2+e2Rar4wAAXif7tg==
            "]], 0.3499999981077877], 
          
          ArrowBox[{{13.872145275081152`, 1.4183035279806928`}, {
           20.87214526890523, 0.}}, 0.3499999981077877], 
          
          ArrowBox[{{13.872145275081152`, 1.4183035279806928`}, {
           0.020215738997535482`, 0.}}, 0.3499999981077877], 
          
          ArrowBox[{{13.872145275081152`, 1.4183035279806928`}, {
           23.743377201935573`, 0.}}, 0.3499999981077877], 
          
          ArrowBox[{{-2.02338873141332, 
           12.764731751826236`}, {-5.023388728867076, 11.346428223845543`}}, 
           0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwt0As0lHkUAPChjPEag+StGTOZ0aKll6i+G0dTNlKKykh5bVMqeSXKYC1R
ybPCUIhTaLWFDuH7e9TSgySiTENCSCIiz20/e8+5557fOffce+5luJ3a4ylJ
IpGcf+Z/lbTC42TfahIaFMYPxUYbgGUS7VFLAglBXNi3Zg8DKOxwh3gJCdQU
xwtes9kAsDGXeS2BBLqayQorohnAj8758UBZSZRQ2b50m5gD71K3sbJyJFHd
UBBl8jYH+jjrLqXZLEHGBlIXa05wQDP2qaH7whLUFHD+0m0jDgRWkskz1UvR
7eZu+Tuf2DBdM6DmliiFSjeZytdlsiGmhbyqT5eMzrPEJs58NpBiJM0/pJHR
Tr+czmxTNvB6OrmOZGm0wkAgnz6tD+kfUhwsj0ijSWvfaqtqfaiJMnLJK5BG
rQ3nZoRR+vC8KccjolcalRVnlufZ6ENF5RS/jUpB2eT2+cMK+pBob3gim01B
iTin/lnjSli7sPXnfyhob0iJdsEcCz4GqV0tNaOgkZ737l2VLBA2JyuwHSjo
ZaCfWqqABTyZ8tcbBBQ0vcZvQ6slC/To0UOfKiiIr/W+NlmaBZ9VZ3eby8sg
XaPiijcvmIAG1SmGJ2SQNn+CkZnChLRMkUKVWAa5NmV96z/EhGATG/ev7rJo
0LXMpMSACTeuidRnLaiI5RiUvHaQAVcqRisbm6noO21my5+lDLh81EVFwlER
CbKUz+8JZ8D1dLpGUr0iqpPG7YQ2DGjLz/i9ZhkNIStSsZsyA7yetWke30RD
Z/a1Fea20yG0yCLPypmG+jZt3eiZQQdNp+cyO0/TEHUaDmQdpsPmmgvWkaE0
NHqpVf6gHh3epngf+BxBQ/f1uMV52brA6j1G+GaDcdtlhi4Y3ucTTvRZPuV/
UwfGZo8SDlOb1+Ct0AHfx4v2qeq1sMrUhntyi/2HPF+4rNLRhsKmRe+SLxEo
CbXAU+k44S0PhFlTmlrw7uXifqODkbXiVE1Yk+tPuNSsZNTuuzrkvQgkfEss
VFkfoA4iuyDCKVGR63TG1aCDc5ZwlJG301I/NbjmvOiA1w5nh0aXg2b/Yr97
iEX6K5/lcOTZGcJ79ZiVZSOq4E1ZnG/ZICu+eVIVLDL9CJv6jJEuDC8D/4HF
+yrsmKsnd6gAT+hJuGBCdvf7emUwErgRTheO+T7mKkNfgivhi1ZvkwufKEHU
ax7h4MHq0iRrJaByDxLmJ9xpD66jgWDAifB+s4TpI1Y0ePNoH+G4qlGzxEhF
UK9yIHxSvvrc4QgqkNTsCEc06HVssZCDjO0OoRfO0VC5qP9lN8jClh1ewzw+
DeWHXv/V2FEGutSj8/g7aMi2cO0UM4QCkQ9L7vylTUM5XhXs2iJpcLT5OOz0
RBEV3V2Ny42TIb82SLt2oyLyCY+rmuOSgfSOI85MoqLe7vaVqQVSwIsfXzfU
ooAUm6gTIl0p2CPVo67vSkIubPZcJ38Wi10f6naVO4+zFibmmjRmMPujkx/T
umbwe9kbci8W/8AmbpiUHYj5gS8ofR5TNJ/CAkSG4ldbJ3EFW5V+Xv53rJU+
4EiWncDFDnfDfaUmMOVjXvTx7jHcX7+8xv63b5hx2S0LYcNX/GndxvzJkFHM
Xnv77rnwYfypy36fRuMRjPSqvnF9/AAeTvxnCLubEe71T0Mvfhov1+Ds6sfS
YjhXEsw/4LamlMrTwh4s/peQhFWPRbiqnlytFrML84oM18/94w0eqxPttPNJ
B1am4yFKvNeMV391+8Ioa8F0Rqy9+6/V47dCHFJ8Nj/HBNypGl2nSvyYzMN2
3S/VWKxnAT/QJw9Hqt22GZS/MVLYKe6pB8kY6f/4F9HEsp8=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwl0ntMk1cUAPCvCPSzokgFWrQVSllLCWgQUWYd3wEUlNkilYgQhmhF4yKs
oCYiGp2DwpSpLaI8CgKx8pQhWjZe5SKPiREMDxHQCZqBCj54dD5QYO72j5Ob
X84599zcHN7en2TRJgRByL7G/ydhvy92dDWBxjQXx8+miGA4di92w6ChMiFa
BP6qKOxm5KbopkSwShmJ/UUqFmXYiiBLEoG9L5n7pOmVM6S+CMOek/em7qpx
hpkdodh3x3avDkt2hgl1CHabHXrQLHGGH68FY09PGA5mMp1hf6oUW6aYm+3r
EYJJyffGfr+p84HpQohQbMX2YY3a62VCiHsagF07NlDpzhSC37Q/tru+w0fb
JYDuCqOLVU3dbJUAOFbGeodonTxtuwD4y7dgX/EqMcxbCmC03Xi/pUVu8uEH
30D2Shl2SKKOUzbrBAkhzpervQhU3vNUPtzgBBGF2sXCHQRq9TzMyjrlBL7k
vd71pwhUUBC//qGvE4iUGeMv6wn0Hevv5kt0J7DmkLINFjSUfbmq/lEHH0zu
8UjXGBqqtZ/m5WXwwXDh+WL9EA1lVeVNv4jkw8uYQPmE3ARtDNK560R8cKxQ
sr+IzZFv4slLa8d48KEvo6GzyxxpefPeydU8SJHMMWk76chfb3NS9jMPuq0Q
O/0uHQmDm6SaQB708B93JolItHmQdnsvkwfqX4I8+46RqDDsUbm23wEY7txt
KdUkoh74fBud6wAbXTcty3xOIjuxT1hBlAMIj7acJWdJ5JH70CLc0QE8bMur
+s0WoirHgNvXC1fCa8NN7Pz2VX2/8VaCje0f2GqF7ccj+VwoTajDPs2as4uw
50KFfSO2Qj8i9svjgAN5BzsyuuMHFy4HCI8W7CAL3SkrzQqQ5rdie9/SFHxc
vgIY29uw3cKTmoeylkOHxJiv9tJNSt+zwafX2H9tSLNs3VE2DIPRGcokT66B
BUXpzdhKt0OhpodZkH7fOP9o746E8UlbKB1vwpYninO6FbYwNoGwQxz5DTXv
bED2xPh+33bGUH6sDTy/ocdeo5giUt9Yw2h0LXa9lL/6w9ZlEP/uT+yyfxnB
T+8y4fQ64//kaKbiWwOYYCnWYZ/zG7xU3mYFnNkq7ONjTdXpm62g9EQl9kFV
Sf/xlqVQU3MDe5eXamaP31LYcrsU+7x+0kudZAmhh4qwYy2aTkSdWQLZV3Ow
z7Q7DniLF4EgvnBm0UcSjXjc4ib6MWCVj75b20mi0Eet8vSohVBh8W7D9V9J
1HUrvCxFTUJx71qPxV/3Z2d7nCF0gA6crAt1g+V0NMpaRJl60oERPt+zxIaO
zlwVnEvTmkM8K+lEyR5zJIpq6Z9wMYeQLq6uVG2GHof9I3RvNYPfU+6fZBab
osw05THJETMwV03SBEmzjZ7agbpPfy0AE67kSETlVKPdzgi7QW8T0O4P1V4s
eda46eoS1dt+Ak6zd420usZQ+2nPNse6zlORpl5Vc6NDVKdhQd6BN18ozZVt
1gcG3lBtbKVLu2GGWpNW9znuhYHyjzkwrvb9RPnekdA+v/pEhUwVDbf0faCI
t0+ypYZZ6nVRAGP3zffUf8YMXbc=
            "]], 0.3499999981077877], 
          
          ArrowBox[{{-2.02338873141332, 
           12.764731751826236`}, {-4.023388728955297, 11.346428223845543`}}, 
           0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAIF6Q6UTfM0Dsp0cKX7EGQCFmS2JC
0zNAP5/YHxopBkCAYZM4/MUzQFY3vBx9kgVAQFBobHK3M0AzcPIAiO0EQFoy
yv2kpzNA1El7zDo6BEDVB7nsk5YzQDzEVn+VeANArtA0OT+EM0Bo34QZmKgC
QOaMPeOmcDNAWpsFm0LKAUB8PNPqylszQBD42AOV3QBAcN/1T6tFM0AY6/2n
HsX/P494ZKf3MTNA9UWzPx3J/T+mCt6FXyQzQBAflvff3fs/tpVi6+IcM0Bs
dqbPZgP6P7wZ8teBGzNABUzkx7E5+D+7loxLPCAzQNyfT+DAgPY/sQwyRhIr
M0D0cegYlNj0P5974scDPDNASsKucStB8z+F453QEFMzQN6QouqGuvE/YkRk
YDlwM0Cy3cODpkTwPzfPLPcHqTNAJ08aJTCA6z+k92cB1d0zQFVcveX70eY/
qb0Vf6AONEDr4nBJsH7iP0IhNnBqOzRA0MVpoJoM3T91IsnUMmQ0QJ24EvSl
0dU/PcHOrPmINEB5PLkbBZnOP5z9Rvi+qTRAWO2O22D6wj+T1zG3gsY0QLgH
TU++jrE/IE+P6UTfNEAAAAAAAAAAAI7wz4k=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAIF6Q6UTfM0Dsp0cKX7EGQOD4NFqq
uzNAP5/YHxopBkDso3FdUJQzQFY3vBx9kgVAQl9G8zZpM0AzcPIAiO0EQOAq
sxteOjNA1El7zDo6BEDKBrjWxQczQDzEVn+VeANA/vJUJG7RMkBo34QZmKgC
QHzviQRXlzJAWpsFm0LKAUBE/FZ3gFkyQBD42AOV3QBAVhm8fOoXMkAY6/2n
HsX/P7yptWAQ1DFAqfm1L9vX/T98EEBvbY8xQOLtoLfXGPw/mk1bqAFKMUDC
x74/FIj6PxJhBwzNAzFASYcPyJAl+T/mSkSaz7wwQHYsk1BN8fc/FgsSUwl1
MEBNt0nZSev2P6GhcDZ6LDBAyiczYoYT9j8RHcCIRMYvQPB9T+sCavU/lqPA
+QIyL0C7uZ50v+70P0V2cv6w/SlApBQ6E5Rv8T+8zeix5zglQFYnxsaxduw/
+6kjFKfjIECebTPKG6TmP/4VRkre+xlAHfy7MGZn4T+U4c3Jfw8TQK6lv/Qh
gdk/d229TWUECkCW4z1OOF/RP7lV4oXbT/8/4GPl2x7SxD+G7dvMYybsP/tC
eE+derI/AIBvR2+zlD8AAAAAAAAAAGeVy/0=
            "]], 0.3499999981077877], 
          
          ArrowBox[{{19.8721452691517, 2.8366070559613856`}, {
           1.8721452760063357`, 1.4183035279806928`}}, 0.3499999981077877], 
          
          ArrowBox[{{19.8721452691517, 2.8366070559613856`}, {
           9.799730809238497, 1.4183035279806928`}}, 0.3499999981077877], 
          
          ArrowBox[{{19.8721452691517, 2.8366070559613856`}, {
           13.872145275081152`, 1.4183035279806928`}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQrRA34aXLfWOHN8vdueI3sjm45kH49vNvyEtpsjnI
NED4YeZ7ZGonsTqsmAzhGxd8Yuh4y+LwbAWEf8Wz+oyVFYvD9f0Qvs2RsPqp
FcwONTcg/Iz7LZIzVjA5XPoE4UfNZp3tdIrR4S7fRDBf4McN5ql3GRxm6UD4
Eq//Lpc7+t/+e96hF58fGDvYlh150XP5r/3DH6HPGJ4ZOxg9uDV7Hvsf+4hT
3o+y3xk7fNdwPBic+Ms+8vHiOya/jB26A75HrHnww/6Vc9zVaE4Th7dhf5NW
tH63Z31TdeaBtImDok3wffeAb/brbv88eNjQxEGF4efZLoev9k+Ebm9l8TZx
+LbonV5h2Bf7pRPlVixON3GYoWLC9HviZ/syy8cddz6bOKy2vBnGFPPBfudO
+QtHSkwdOG8Eztt14ZV9ttCV2phXpg5u5W7XxPOe2nc7M0xaHGLmwB04IVRm
wgN7Wd8lPLM2mzlsPRVnMSH3hr2c/oG39uzmDlkZ7iFmRy7Y978MNp3qb+6Q
/G3L31CPI/YFNfGPZ/aYO9jyJDzYYbrJ/sDzR99995k7MEABAM0e1kA=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
ipw=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwt1Hk81PsaB/Cxr43ddLLEYGzDzPxmdEQ1nwbXkmUs93aUKSpxyjk5KvuJ
o9LRdZUkWkX2coWU0y2FmzXrTUiWhHtI3ag4Ulx3fveP5/V9vf94vq/neV7P
6zHcc8gnWJJCoUSuxv9eOKVXd/zDBuG2O2z1wgkMqv1R03jdBs+/j3Das4tA
oHqUxetEG3hobs2PciXQ9SeqonGADfq/bfQTcQiYlj/cnkLY4KdnEts1tAmE
bjupoSFtA93pD6UXFzg4pxO8ua6Lh/7oK8L3vRwUrhf1ZmTzUJC45Eyr4CBv
+w+Dp3fycEJCLZ2awsGvDZlehd/wcGTppeVzEQfCHx1i/b9w8Z/SMzdCXDkw
nxh5mzPKxb4Eavh5LgdUs4OlMY1cdEf7pwfociD57UT5ZBkXG7LC5R5LcSCt
7rk8eYGLjBe+PbVTbGj9VpAZ+wsXUwKpue862OAyZ47m/sCFbdex/WkVbAQd
NMzZuZOLhKRG1u4MNs6v+W59/HouvGSSUm102Uh8If9GQp0Ll7JAFdNlFioX
6q/pyXLhNpP71KSBBfPgZLvOJQI5TU3CkFMsvKb71mp/IODE77n8xo2FCba5
xcc3BAS+dWWVa1iwPCN/LGSSQIZUZvKDTmtUb579LXyMgK3Qg6GQbo2Tm14P
qYwSIDZOp2Z7W6MvanjKcYSAx46zj60TrXAkknSD1QnvPL4Vho6T3iQRPaa1
woTGddLVzw4eTqlddRtpZvFu6a8/MzEqPSJ2fpxvZvhmJmI8SOt4OTPGv1hi
OJ/0Obr9ve0PLEFVGhVbad7apS3OEpNZr8T2CnYekSy1QJLcmNiNtvbhkd9b
4LyINF+ZJTFtZgHdS6TvjdDPiX43B+0haesqbaPuInOkNJIuTFa84xhijkN3
SevvWHasYZijNZX0Bau5XstJM1x2JU2VmNyfU2CGxBWyPp/w5a/P/2WK3cdI
NzvMpbllmILSQfazlTa5vtbHFEHvyHncnx64zVE3xS8jQ2Jzatu3FnQzsCf3
pdjF6XU9a9MZkOINim0QXL03VcjAvqwBsbNsSz6uqDBwsq1PbBXlqycPd5pg
I6NbbL+4at2bX42hz+0Uu82zpEz/oTF8EtrFFtCvbjkXb4wuxadiP/h0tlNm
kzGyelvFJlpOBMYsGaF4pEXs0ivRszP3jSBrTpoeHpYUGGuE8opmsS86BGo8
22iEvBjS6jS/fOdFOgL7Sf8lOcw+wZQOUwqZ3+Ef+HRu0hA1///PycpPtL/Q
EOp/Jl1LcXk3EGwIbhJpm2f2CR4mhtCrIF1WxFKtGzdA1yvSJnFGubx8A7hp
kvVf8aQRxXsNkOZCWpOu1KBjZIANn0lX0p3vFObpo1/AkooeJlCg4THjSdfH
6N93eqm9XN2H7DPCmBt68Ngi7FDtJ1b7pL4yYehBb1Y5MbKHQP2u1qt+pbrw
bUrfJ2gjMJJTnyzD1sW7x8NxR+oJyB9duGx7TwczQx+eKNcQsBsOHXrL14FQ
v1ugdItA1KD2NpPWdTiAJ6VZEQTu2lbPes6vxc8Dfyt9HbQ6n5XqG9SotUjR
+bD82Ws1X27qaMISDamyn4qGNhFY9PQMzT1Ow6lLGQV/NSOg0DcRe0SFhvi+
jgVpDQIHcsrL/rimjdCHhddcv3BgUHyTYk1ow8Nd55L/OAdmswOHNVu0YHmC
Oc1r4yAp1k7u1l4tXGgWGrUqckARldhsrlJHqfoaXvJ7NuIzlfMavdXBDPVG
XB8bCy8WhFkzaljXoudS8oiNcKuDgvLjajhsE7FNtYSNf6fuj6TS1LCxzNPt
9updEy1OzdwpVEUYu8oxJYGNnohPBXmEKhQf5dhdDmPj1zk1h/KjKtD212RO
7mAj7BvXR0XHqLiTIFCoYrCR1EIf2GKvBAfKV+0GLTY0e92j6h0Ucd7y5oFK
STZUA5itt4MU4CN1SV5ykIWIXXXdCpnyoMg8aRLdYsH+pVJa+5AceAF96tEx
LIT1Kq0s2cvhnXz3lFDAgoxbnXFmuSyYSpXuv8uyIGvHXMm2lcXsnlj7LU3W
OFTgnibXJwN7VYu7PsetwU+l94yeloGTd9n75iomWt5vpXcNSIEoWTRNVrTE
POuf/CR3SSzRVAJOnzJHk2uJxcIYBdevvk3ttTDDT/FjT0R2K3xju8z7IR8Z
yF5n2+0z/4Wf/FZmAuMmkP3RN6p98TO/8R5fOeizMWoieTXtjov88WwBu3mD
MW7zBjN8+xb4o2ep3pEXjTBT5Ky4u2Ke/1+fUEDN
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwl0n881HccB/BjayqXcqe7y6/uHC7nuB/dj+9nlb1Koa4UYyuLScjpB1tq
yo9W6cejX8ijtGit5MdpbfpxbV00oiyRQqoRPSRGtnU2RFMz3z/ej/fj+d/7
/Xq/BRFxgVHmDAYjcqz+71iUabh3XYV4KoRyiFeg6pTPRyO1KsSWy7tqwhR4
dWC0O/WZCt9u8hLZahWoZF79cfWgCkzvr99MVikwTxh/PMtKjYvzhiJO2SsQ
fs89V+imRmZYXugDMwXcrHrKmT5qFOenvSzolCOno/D95VFqvGHlMB1vyWHQ
xqzr3avG3oKucnWeHFsXi3vaitXQhq+baEqVwzRTaxF6S43+5VGN6WvlsLl5
5JKgXQ2j9Q/KHF85WqQDvZLXapzNny9hu8vhp0stSZ2mwXlLvnFoihwrN4nf
487SoMl7cZvfKxmmfTTcMeClgYN/2YkPGmTY0NK73C5Yg/3i5B7ZZRnivN8t
3herAfvJnvvVWTLE3ifPRr7XIL+wb4WHuwz13il/HKrQQNthyWdbysBcf3Vb
drMG6SkvX59ploLv8yLNtk8Dxfag2rpsKSY9nDSVY04h2Rho1K+SoobrzDvA
o5Dg1XVTZS/FGivld1ulFDgfTO36ot0T9T+TwhYfChHWdcKwPE9M56o8roVR
WBXOTx5Z54mdZVYHkhoptNoxZbcCPLBb+9j3aQ+FjDWRsYO2HthW+9X1T95R
eFG0e5H5cwk+xx+d3WyCRyZdxe96CZSFVFWGiCBmLrdNHyfBW0bIqoAPCY7v
P5izSCnBT8sCzrktJYhsvj18fcgdEYcd82eEEtx3ufOaaXTH6C8Vnwk2Evy2
9egJKskdKzt36yV5BBszzbJG0sVguVxJuPMjwWbj6IPOIDHi3lCRvUaCfUMW
aeIZYsSvYyWmVxEU+vH1d1vdwNKh5OdagocXfOb/etoNKxmVzOhGAmtR0lJ+
hBvgcfJw9mOCkCtlNY1CN9z965ZiWStBSbBVaUfnLIz4+vy7t43AxnIjf1n+
LKi3zOhd2E4QGP92tLlRhNlXeeP+1bv/yJIsEX63oD2f2zXzRqAIQbHccRt7
n5TIWSIkPOWMW36jbn7+A1csXUO7KLOigZfpitaB6ePmRxnWHlrhCkEO7WxK
/8+7qa5wDKA9lXlqz+Z6F5TobcYdlGSwPz/qjIGvad/1119wLHNGcQztBU6n
vI4mO6MunHbpQEb9hLnOWK2jrbiTFr7tjRCrd9Euzk009RmFqDlP2yl+w67w
7UIUvKD9jXc4u4kIYZLS87C4Qed8h53go6P3+WTvhjk7RE54WU373qrw2v4u
Ad460Hks8ggKjS4QIGU97RsMvz+fRAkQXUJb1TRnxzIXAUr7aF8olE6r6OQj
mU/n65IkPKM8x0exlnauP1dRtJaPBZto2zhZVtoJ+RBfo33JyfdKwVlHmC4G
c1PG7vl3bnz/QidHNMQzT7uM3butzEEXkOeA+oG5O73G/mHjHn9erYsDnqO7
rLqB4Ozf5gyD3h7WgZbBFXcJUibO4TOl9ghx0/u4VxIwqgYTHxjsUHq7/OiE
awQiV/XkCV52IOJAsuICwaDncGNBtS0ymv5p7ttCcJUymPwHeQjzVvcsiCKY
lgAStJ2H7pmRxUmBY/k8ZtUem8iDe2yqbfY8goAoSTH7DBfOTnvIMVcCpd3h
xjpvLn7zTbTYOoXgz2GlX9UrDpa0fJpG+insMnOeOFTIwZetwpL2Jgp98hB2
tI6DYG3rgRgDBc+Dj3TWKg5Mop02TVkUFk/JtRyezIH0uxlNlbUatMgaLm9R
T8ejlJMdZhwNOiUFl0M226C3/D0ciVMjwoxnWVTBRrQuuC/miQpBP4iMoQI2
tF+ld2d+rELp7IflSUdZONl7UT6pTYmTmfyZ5tNZCKwsrbmXqERf9aSHr4qs
kWBWcqlDqMSV5owOX39rMPIP9ixsnw1TmcHXYoI1/gMzGaj1
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwl0ns01GkYB3AcqkXohs2QmWEYlzG/HzrWJV87NKolt9pcikLtbmFEIW2L
yq22otTapotILrEiKmunpHLNEOWyK1HJLWGrzbq09vf74z3v+ZznPOf5vu95
mDvCPILlZGRkfOfP/zec0sqbf7eEyMrHSltEIjSo8+nGdEv4VYeJ1LaRaCvq
S1AIsETQ3tVufGcSYcyiqnd6lkjdUNxxkEdizV3rwyp9Fmj8pmPBRzUSgqTU
Z9vPWIC7/0bP+XcE4mLEFUNrLJBTa+sX2kBgPEPEzn1hDmuHmISQLAK//LVA
+1yMOcb6d7plRhKIdPHPrvrCHJLrCo8mBATuvXUavDhMwvv46x2TFgQmU2zj
TzwmMWV/vGCYTUCJJQg9VkriQu2UuFuNgGKF928ZmfM52Dzr+9N8jDvFORYl
kBjz4CZkveJD0lph+iSEhHjzSGR0Ix/h3rM/yPuScOVFLhWW8KHc4zkjWE9C
vrvGZ/FpPm4uHHg5qkGiodRDXLiKj9T8w52LlEkUZLddlsry4br27GiqLAnr
f1e1bao1g9xzbd2ITwQcD6m+PZBqhmzRyojqcQLhbftOqriYwXzu2Ot9wwQe
THlUqqmaoSRxb9Sp1wTsJnJD4lt4YCg2Gy7pJ9B5Jzw/II2HqOSLU//0EvjV
syyk2J2H8dGXQ47zdvE5dY8XZ4ryXto1pkfcr9ibIrmBtq1sdP+Kzyb4roh2
efvuiBSJCTyTaZvk+cvP/miC9b60c2I9M0R2JnDl0NbaKOS8mjHGtqF+yuks
m1vfVhkjNoe20keec2OsMR5n9VHeGCzslSswQlAg7UdWNqL93xtBuo62vbKZ
7LChERZvon2rl5W+dZALxlHavDJ1dus1Lma7aOcmKt503MVFiSc9T8dnzvE2
h4vVk7TPmk4+NR4wxMlyOq+K7MDOS1cNkdg6QNlDNDf7rM0Aj4rfUK4TTJ5Y
f9oAge6DlB00BlZJPAzgc4d25XBXCbHUAAUDtAnJY4errRxs6qKdl1b9RDON
A7802rrB5YHH3TioUqF9zir//WdVDqLc6XmqyheORkj1UTNE5/OKLWcUzuoh
+CGdv9E1v0jnDz3UJdDv/Zp1YU36QT2MMF9QrvpwSqpgq4emK88pk/VHAmKm
2QhV6KFcII6eGK1kz//vn5RZoj0JAQfYGA/ropwpCFjW/hUbLVEdlJdqeOUI
p1hQ+7mF8ubEPTY/GbBQmtpMudk7oGlygAlxcxNlJ1OvrTtzmWja0khZIuM8
1hXMhAO3gbJlu81PLvpMzNnXUy66ZqZW/UoXn8V1lPVj2VkWOboQgrbYVYPM
C9TFMy7t5SylGi22LjYvp/tLWcKbuVd00BTzcTKuh4D0dZ5/jIEOIH9IxbKT
gGvfnDb7tjZKyvxtt0sJGKxY9y7bSxvayecPKtQQ2Baf1DY9w0BSPCFllhF4
r1/ZYHSDgbFLTIuKSwQG5fra+eEMeL7cXXg/mYCV5szEYjsGyjeoWQpD5+vB
Sqz7yxlY1qXSKnCb7x9RCXb5pAVJ4MIlfkv4OKO0YA9HXQtXo9faJnWbgljm
nC4nXImLDx+Mv681Rr3c046+1C+xqzjFXnaEC5/u67YP+jQhb55heF1giDeZ
0nv5GzQh8nxT+GF+r0QOdkHpdRooVo2r78nQx98tHziHtmjg7i7/+KCTetjr
PLUoZFodl32PtqVI2Bi9JlT0v6GO/wA/JZ4X
            "]], 0.3499999981077877], 
          
          ArrowBox[{{21.733622882811005`, 18.437945863749007`}, {
           21.733622882777468`, 17.019642335768314`}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwl0n00FXYYB3BiJW6krpfL9Xavd+77ve3Wlb6isA5hWkuJ6rCS1a3WTg1J
u3VSS+hlE0aOCKvcuN2opFhLKuFmq1ZkdcVoY9kRw7bf74/fec7nPOc5z+85
5+uycXtUwgwDA4O1/73/K5blaB5ek0Epj5E7KMW4kRdlUXdRBpPe+J8G1oth
ZBWhmlksg9XoeFXeCjHmaTOZ2uMyfLfDU++1QIy+9Omb99JkyFrdvzvfUYyD
29WHApJkGC9bvPatsRhDB4s226+S4Vmc22lOvwjsppaET/1lEB4odpe3isD0
EO4bc5NhYs4lhqBKBJ26Qz1hJsMio8iQWZkiGFxirx0YlSJRy3M6vFUE06cb
9qzpkeKP/TXhmjARhsQls0NbpeiM6+3KEohQWffcvO6KFMzoei3TUoRl25iH
K0qkqI5VDC8fEaIuYvluu+NSVKYmfO3WKYTphl1dZqlSTFfLt1XXCCEryq9K
2yKFerxW3XdCCPPa2OYkNym837cPsllCLOzQPlZbS+Egb1MtfS+AX7MyvHa2
FCezjnQk3hTA6shh/s4pCbSjj2+XqQRo5k7v/v2dBBmfq1fNCBUgJEfn6jwk
wdgo++hehgClHSaKuX0SsI7bbmK08dHVl3/1Wq8Eennp8/psPl48OlbI6ZFg
/V83x1WRfBi9ftEf1C1BWEx2I38/D2eMuombeKrIkiU8tFlS+xnu6bWa9kWR
BbVGt3VXZoMvTCbpvO/5OOPJNF+YP6UuTfn4lHKxL9Rl1PYrg91f/eODtxup
czkK7errPrhrTm32Nz+kNcUHJzW/Eq9MCO6eUemNWUnUd+QK5ZdbvNEdT72E
ITAc8PSG3RlqbTcnN/aNF7RWz4n5Ndbc9nIvXOmkLjtkWhv0mRdYOrrPMWYq
6Kq7F7qte4hP80Ye++g9YVLwktjcUJ9YdM4Tiy/1EUcppya7Oj3wZ2g/8d3A
kayPTnggO2SAOMBG79QQ5QGHKur6gSfVonkeOLmDWtTwIOBcuzvG8+n8+Zxb
HbY57ljh/YbYOUGz6ZsId2Sy9cTfyiveTVu4o3bnb8QWjMKDu9rcoHf6hTg6
RcOumnSF8S0dcWt4xQXHG65Yfr+deCmn0D831RWVAW3E10ez2z7wcwXf5QGx
uEUVv3eCi5+TWokrC/YMD9ZzUeJ4j5ijTD4Q/xUX2X4txHmB8fN1C7kobr5L
PM8mujT4PQc8C9r/5FCyIt2Dg+EF1A/XxN8f0bvgahz1Ml50bGKZCzIyqRsM
Qt4+SXBBaC21TKdID3NzAbOH+kK5YO6tV87oYdD/uKVwz0pLnXFxEXVBuI34
/CZnpG2hZnLMmuy5zjCaSe+5zAmuLStxRMlL2i9u4Xcdc3FEz3zqXKX12BfF
DrhWQO/JsJlirXNygCT1DrGy4bUi8Hs2Qi43EcclPIj1dmBjwr+ROIKhSbcs
sMcKznVi/5qCs2N29li4TkvzF6Nq6s6zQ/OgmtjBMPn1HVs7FEb+QPxset+c
oHwWUkzKiT+8+CZgyJWFGMsSmhdGxYHbGlsokguJf2Q1tjWF2cKRlUc81sXz
Gh60gbHtKeJ7JI82GNicQyyPn2P4CDbQmWURB/qmp2eMWqPR4CjxYHmwaZza
Gv8CIP6awQ==
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwt0H1QkwUcB/CFwGgcKJjj5UHa9uzZICQUV6AozzcEDnlVxOsYSIDQFXnH
CbgADRJElOStYGqiidolaWEv2xmQx0B2TFRYQ3fMAuVlawgFTKaguGj1u/ve
9z5/fn/czNzEbBsGgxG0nH87/b5Uc/wGBUP90G35Hi9IlhqtrnW68G6Dhxdk
Tv/5zNDq+xF3CXCZDVazzG9G9R0kIDd+brUu0/Qdn0fggKzeaidOBjNR4Yn0
nDqrL/kXJu1K9oTEodbqs58FN/pMekBWW231s00XVOp8D3AYJ6yWB8tm483u
4IRHago7KOSXVdRUSNzBiyz8LUJO4a6LkJuy4Aa+PU89c4WCUn+6pb/EDdSR
bf1FZykkvzIsHLN3g7Dz99sPqyhUZpjONNaz4dc2raIKKCQxdXYGbzYC8iTK
qGQKHXP12drv10D0p6Rr+2YKXSTR/v47a6AvJIyT2XwU91XGqEdc0a/4YlwV
xgcRNiq1FLiiTNLw8BbJBzf/o6kapiss0rV/TDvwUZVGxpaedME2MkAXOEdi
ty1LPsB3wQ5CpT09QqIi6/U3yltXgSp9fI+nJuFeuveyNGgVuuOlg3eUJLwu
X81gF6+EX5VK82UnCbXy76OKUmcoR48s/4dEmYo3FBriiATOHMFVkLCE2xYV
b2Wh13vzvL6XRDvBUtdFvYqA4dT3Htwj8VOc6NHhVAccThOLXxpIGHRlLXFF
THR9FahPsJAQd8/7Pjlnj5nmCZsBgg8WszrzwB07OGbnXyvZyof566hdals7
rDY++Csla3nveZ8XzAhbmGr8r49UUHB/vPSNd4+Ffp7O+Fl+i4JNR9UPcdol
um1FU9NOVwEin5puNLNf0Bs+ZuRdSxVgvGnTgGf5Ip3a7i/StAigu5oycd1r
gQ4dIMd+WRDAVyh+eXDsKa2VjZZkxQox6PgWkaU104J9OUxNsxBa8VTI/mfz
9DpT2yG7RSFEr32afjFynjZEDw4/T/LBZNDMsUXFEzp699EaxhY/GL/NOSaK
naXNYRe3sCf8kVsdXFyJKdp0vLHA22c9rrBZ8TsO6WnncefottANKJ/dfqI7
5hHd1/rrubS3AzEXMvNh154het10c57jyo1YG+xblxijptc3tfd09m6ETesn
7NzOm7S2g3WqZK8I1R/c3Nez/0eak1BrDB8RgfH//QPzgYwX
            "]], 0.3499999981077877], 
          
          ArrowBox[{{10.87214528290059, 7.091517639903464}, {
           9.872145280865709, 5.673214111922771}}, 0.3499999981077877], 
          
          ArrowBox[{{10.87214528290059, 7.091517639903464}, {
           19.872145267902624`, 5.673214111922771}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwVyVtMUwcAh/FiuFZJR9XS9rT0tOecAr6QNUonzvQPsoBoRJlUXWAdqCEg
E8ssLBPGMEMzxyRqtA4HlBUBsVIMN0kAK7dxiQ7LgI5RYIhTxmVWpi0iOvfw
5ffwSZMz4o6uYbFYynf9L6sjIyg9So75qii25rYczfrUxYtb5DCYVtLkRXJY
jgzcvy2VI/IJ9do7VQ5h8OWe3rVy2A5Y2jxVcnTO9NhGlxh88mbQLPGTo13/
mfvk7wzuj8VbP55kwI5I3jnRxiBkYQ9jvMGg4tFA1XAZg9NbWqt9TzC4mFMi
6c5j0FVfknBJweDButE6UyKDFylL2OygsSCUCfq2M/jR81r+R/U0igvNnUUB
DFYV0y4vHY3fkvLqWCwG5EJv5alQGleLL0wS0zTebI793uCkMBv6194/u2iU
sHWVWXco/BKa676vmsbK52Gu1S8pKIrVr9IKafA0Zd+EbqUQnJSpCNHScNiN
KnJZhv2Euf8yQUN9Jn1bXqAMwU2ZLtNbCqx0V1DEUymIB+0xx6YocLIafjXe
lII5fOneYBuFggpDSIVWimjdswS7nkKiszV6R5gUBe4jogvHKfx03IfI95Bi
/L1It/lwCmCfqUwcIrG7OIy96Echul8xZzOSGDW0KPUTMjTWcmafZ5Fgv3q8
xmOCRBc33lr9Voyf1/aPBJaRGCMcH3YbxPCepHfFJ5MoUHYm/7FdDNXJl5of
Akl0HB3YMTciwtkruZsMdgnOV/pM/XtMBEXvynDYCQnml3OVrtcEvspN6fjb
U4IJTVDMi+8IJDVZ/jGXByDJ5s2f5xJ4mun16TkEIOuwpHxcL8TJ7Bzc4onR
9EGjY89LPtp3F3GczSLoSuusNaf4aO7V2if3iTCaP/T+M18+EuaompQZAmPT
Yo7klj9MDdd15zMI5NwrSlMe8sdN2qnavyTEXXFw5FauP9Tb+D4tGUJcd85e
o2081Lq8H7bOCLAp1qpdruGhPqFPr4kTYC893d18jocjKYcSy+/wwc8WXNVk
v/uDVUHtq2ys9o1zRIUbEXrQt+fs0KxKFhPAXWzYAHWEbtgY57pb4LSXDjvW
w7mBm24fX2dhrESTNWI9ak6H75yybrR4jI0eeFzFhazF07waLrLIONxvfaVc
PFebvnhkJy1fa/vDdtX6IauOWBaTlEXg5pZTGusHMvVhSu0T2uJoa4zy8vDD
f1WThQ4=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwl1H0w1AkYB/A9bkUR5dplrdq1+9u19vdzrknnpdqvl7tlSlTi2oS8lO5o
qUTcHRtia8Ll9ILKmZDBRULnzl72Io2cipN7CSVJOZ2dzjtdt/vHM898/vjO
M/M8Mw83TL49Uo9Go3m/q/87TS23jZYKMFYuXRpSK0A8L6648pAALcOVXT45
AvQ7RKYllghwp+NZdtkBAT5+ufnBw14B3u7SSA9AgFRf4mSTqRD7cntm880F
aA6dqP7QRwia/FQ5OURg1Lpmw9ocITr+ZWylrhEwzNy7Xv2bEO38hPFzCQQs
i+iFAxxbTM5VZkVvIMDaU/T5yVhb+CfXsysX+BDLPOIL1LaYWAzs+rSZjy94
FqdGPhDh0dPA1rVf8fHHTVZV3H4RlgnrFw9u5OMoa3OfU5MIWR3y5LkFHuBV
YbrRxA6+9zNd+1Q8uLg7bv861A5hjgub6Kk8hBq+vjxfZwfVbFfGcTceGgp6
pxuXiLGPQzPz0+fh7+VEZFgPCYcM4sBoDRfDaoV1Jp2C7PbqECi5UNDtbw05
UPh9srqlIpiLW70in8QACtXs7lziIy4ur4+/7XmUQo9j9r06Ghc8wkzgnUvB
z33giH8nB94ls3EZVyhw3NuUS85xYPb9uqsz1yl84uixrHMPB0leqvbSHymo
rAJmrnA5kGVf6FaqKFy3kd4oK1kNdWiB1sV37XtPc1dDMqXzmVjG9JFia3Rv
K9Q6lbloGbTGGomxOseqhl09LrGxbofOwZGde+ys2aDP6vK+xvUpK4qs8DJC
5011Rd9Ns6zwLE83n5Kl/zJwgYWY5/laNzjVT2ydtIBl4EKDWTOF5LfO/L54
C/yz6Li39CYFDX0moXSSCc1jyUNpLQXGFs1YQyITFm9YS6fLKIw8INKM5xmI
crtj2HCBwr5zeS5lqQw8bfX8VaGkkF/kap5uwECaIk+2+90+Y59Ym5SdXgWf
I3XV7qEU5iNdbI0Zq7BybkSWrCGRlGVQdEZoDt8h/YNNj0i8+Ob8xdrqlYgy
MklyUJFwNcxxnlq7Ertj9FMel5KIeTUqD29cAb7pyJct2SSOu1Zg0mUF2scb
D/+VSCJx+l7ltWYzSI2PhttHkNhms7M2R2KGS/u5Wxr9SDAOpZWQClPcpzVR
CZtI+B4jmJmK5dDoOZ23NyDhYbvm8C7mMoRkEluIKTFyo3JlNeylGGvt+3Nw
VIyowvHdfK4Rzqq2Sff2i3H3lnNCPd8QQXG52WU9Ytzoi6sKFy6BW/+3tTX3
xBAOnZ2zFxnAkx5Sk9ImBn/wagTTjo6w5+MnzdViVHWVj7Dt3kexwtMt+mcx
fqrNS5eI9DHbG/LuXmIEnIh2TRHqwZERrPXDtDOnjpHvgSEP0lo5GPmmQ0LD
xScyraecOl+NqRclbTG7tPaTizgamwVJvvlnWrMjBjPKL89JjLoDtA5jatgm
zrMSm6qdWrOUwcM2r6cl/Zf8tfb6gRh40TIlQeUOrXX/Z1LyH4jQ/NU=
            "]], 0.3499999981077877], 
          
          ArrowBox[{{11.139497054712592`, 11.346428223845543`}, {
           11.872145282637575`, 9.928124695864849}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwl0HtUzGkYB/DJcZdbrcqUduY3manmXu9vTyp80Rocg9rWSmxztLltGJu1
KpactCJMWK1V29FWRthTmly6HcSalKTrpk0XbSoVE5vVUtu+vz+e85zPed7z
PO/5CjfsCAgbxePxAkbq/64TJOZVFLCwFOVpxo1Rw+w144Q2h4V6XcTbgtcq
TBkjOv1VBgui9ZgnaFFBdSj/ru1PLAYN/Y7kgQqym42C4HgWsRKT4W2OCmPP
xxm9I1lUTfsueWuSCoW+BcFXN7FoW+4z/1iUCtqESO87gSyuNfIiQ4JVKDhx
228rWKwour+0dY4KozWnorLcWRgtJ3Js7FRwfR9xuJ7PYsfDhBu73ijhsWyp
tNWaRadJsvBmgRJOatvQ+zwWprOvhvtjlOjMfqw8MkBQG/3cItQokVQam+jW
R7A82Nph8SQlXKNlhzOeE8z0CvkmpEKB5Htm26E2Am+bFt52gwL9xiDi2UKQ
23W8ZKe/ApnGp11+zQTatYZbigNyPNNzLpHH+qfNl2OZF2dfqz1tM4ZleDLU
RJ1X83VEfLEMhrucZcaQ0R/2yaCP55we/dmP+rkyRGo5O67UiNvfS5E1jfNJ
xuf6F4VSjK7+k3rSgGJJWbQUg2M5rwzTNI/KcoenpZH6dy8f/e4t7siTc/P5
1kqrbld3fF/I+Xozc3J9pxsSUrj9ilw70eMLbmit5P6fGTfR5LfJDftWt1A7
rx3yuyF2g07RRn1G3l8r7XDFkTXt1FOsOjamZrgirrSHOkA/9KGuWgIP65fU
5kX9x5edkmB6/CvqBfYdHxcHSMDAQp3f3ZCttpEgVM1ZXfxwQcZjMerWce+N
iberHBLF2Hunj1oQlheasEqMgA3cvSSvi2+Gp4oR7NtFPdU65VDEo9k4lsrl
ERid53TpgwsUhnrqshUXrzgXuUA/XE29kEmZd3KvC/x7K6kL/zY8GuPrgsqg
CmqP0lhd5L8i9PmVU2cl77H05Itw+bcH1Iw+/KAuSoQJSaXUZxfpbGvmiDB2
yExtYx+YrnnHIPsTbr46Ltxnv4RBajbniiBdeX+HEMk13L5P5YHrN2YK8Wsa
d6+Yt6SvIUyIa/xH1GyNz37tbCGqfauor1xQTrvdLsD78XXUs6NF50m6AOr9
T6iTV9h7GEMF2JnaTP0RM6nEUSQAUb2mvspoTJlpzlgUU7fF9ylB3TYH/ybG
GeXsri6mkSDcqujZ1YxZqNKWb/6nlmBrEwmXSGdhVenT54UVBPVWB7q9c52w
3Hhpo/4eQfb2X77sneuEkm6Pv2zyCd6KDOZ5ZY4wGXaFpl8eyU/4uasy2BGC
n/WtLikEDzb17ivu5WP8OEnI6aMj+QysKe05yEdtQsPeH3YS7J7ceZ95OROM
V1oMCSJIczpvFoXNRNf4mG3nFhL8IYote9nuAOnwtyiUE9iJEivjtjvgBT9m
8AyfQMc313daOUC8Lu2cdAKBaYJb64xUezTdaRBFvfPEdEtuz+TF9pi+UnLq
4AtPRFVuHqwcsMMt3tGRfDzRc0EzMSTHDv8BVb5ZPw==
            "]], 0.3499999981077877], 
          
          ArrowBox[{{21.733622882777468`, 17.019642335768314`}, {
           21.872145287848127`, 15.60133880778762}}, 0.3499999981077877], 
          
          ArrowBox[{{19.872145267902624`, 
           5.673214111922771}, {-10.452502483666251`, 4.254910583942078}}, 
           0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQfYCh+6XLfWOHN8vdueI3ijmIvlWY3PTa2EGiRl3q
bbaYw5qjp5Wrfho7bAi8r75BRsyhuat7tjanicN6jXzjFYdFHWZYJ/yaJmXi
IMF43eZqgqjD+xueDnt0TRze3BJzMf8i4tCe5JE728nEQWObnue5WhGHuBvR
jSaRJg7nJ8n5zPor7FBu1VLTXmjicL/gmc/sYmGH8x0H46Z0mzhEBrR5X7wv
5LCpivWhylwThx6xh9P+lwg5LFRnTV6yxsThRG/Wmz52IYd5/QeeCO0yceDc
puRTP13QYdkm87SCoyYOgf2c2y6oCDrsnpD1fM85E4eFkvJazesFHO5oRmb8
uGri8CMkecU0cwEHzjrml0q3TRxWN61JFKvid3Dpzcy0uWfiULL3fdvBej4H
sYldwPAxcWg6qXTTzprbocgVwk8Q/yTDa8nl8EYIwndMPZhw24zToeVnJ5gv
v3nCkpUmHA4WUP5fhoQX5UbsDjxQ9Xf89HXcDNgc/jpD+Lvm/MsX0WN14OmH
8Ge8Orv5kTaLg8VnCL/CYu73DZrMDmuX9YD5Eq//Lpc7+t9eS7MXzL/aNkd/
94G/9u/nQPiTlay3h+/5bf+LsQ/MD9x30+7L9p/2PhEQPl9UxbEJm7/bP5kP
4Z/6Kuanu/6r/ZEbEH7HxK1XT676bP+aqR/Md9MNiU1b9tE+Qg7CZ5/09CSr
y3t7Xm0IvxEcPq/t7Qwg/ML9uyQ1/J/bq5pC+L5GHHsL5zy2P2gJ4YsqcR+W
Vn5gz2cH4XfJtof7HLtpz+8E4R/8kPROcedl+2OuEP6S6uCpBbZn7A08Ifws
zu035N4dtPfzgfAPiD70ncux0V7BH8JngAIApzJMjQ==
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAwACL6UTfM0Dsp0cKX7EWQPI+rcDw
wzNAvdNNU45qFkCzx51bxqMzQEKweAw1FxZAAptcusV+M0B6Pcg1U7cVQN+4
6dzuVDNAZHs8z+hKFUBMIUXDQSYzQAJq1dj10RRARtRubb7yMkBTCZNSekwU
QNDRZttkujJAVll1PHa6E0DoGS0NNX0yQA5afJbpGxNAjqzBAi87MkB4C6hg
1HASQEx0TGGxHDJAu/924E0dEkAOdAuCnv8xQFBUwdxqxBFA1Kv+ZPbjMUA0
CYdVK2YRQJsbJgq5yTFAaB7ISo8CEUBnw4Fx5rAxQO2ThLyWmRBANaMRm36Z
MUDCabyqQSsQQAe71YaBgzFA0D/fKiBvD0DcCs40724xQL5sPPkDfQ5AXYPZ
u0YyMUCCySLZPjsLQP6hq4zMHjFAErcfEddFCkAttpRcQgkxQArkdzEDaglA
67+UK6jxMEBkUCs6w6cIQDa/q/n91zBAIfw5Kxf/B0ARtNnGQ7wwQETnowT/
bwdAep4ek3meMEDKEWnGevoGQHF+el6ffjBAtnuJcIqeBkD3U+0otVwwQAcl
BQMuXAZACx938ro4MEC7Ddx9ZTMGQHok6trrmitAYXD6lvZeBEBDqc2L7y0n
QKdxIbFzsgJAcsyY94AqI0CMEVHM3C0BQAcclzxAIR9AH6AS0WOi/z/028v/
mcAYQGRalAvmOP0/q9jPOA8zE0DqUSdIQB/7P1AkRs8/8QxArIbLhnJV+T/g
EIsYmCIFQK34gMd82/c/AO7cmk70/T/sp0cKX7H2P/UVANo=
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAwACL6UTfM0Dsp0cKX7EWQJixzGQO
0jNAZIiJec5sFkC78PKdS8MzQN2CZ6U1IBZAJ779lPyyM0BWl+GNlMsVQNoZ
7UkhoTNAz8X3MutuFUDYA8G8uY0zQEgOqpQ5ChVAH3x57cV4M0DEcPiyf50U
QLCCFtxFYjNAPu3ijb0oFECKF5iIOUozQLqDaSXzqxNArDr+8qAwM0A1NIx5
ICcTQMPYZ0JlGTNAZylkb1etEkD7OdrgdwIzQDboLi6yMhJAUV5VztjrMkCk
cOy1MLcRQMhF2QqI1TJAr8KcBtM6EUBc8GWWhb8yQFjePyCZvRBAEF77cNGp
MkCew9UCgz8QQOSOmZprlDJABuW8XCGBD0DYgkATVH8yQAvWs0WEgQ5AVnEl
NR48MkCCySLZPjsLQMnEFQOJJjJA/eB/AXNECkDijX6ODQ8yQLaL+PJyZAlA
nsxf16v1MUCnyYytPpsIQPuAud1j2jFA0po8MdboB0D+qouhNb0xQDn/B345
TQdApErWIiGeMUDa9u6TaMgGQO5fmWEmfTFAtoHxcmNaBkDb6tRdRVoxQMyf
DxsqAwZAbOuIF341MUAdUUmMvMIFQJm50HsY8i9AJusEr/IFBEDW6KaLDa4t
QKZ3ibNMbgJAjmSUXtueK0Cc9taZyvsAQL0smfSBxClACdDaw9hc/z9pQbVN
AR8oQMeXmRdkDP0/kKLoaVmuJkBwROouNwb7PzBQM0mKciVABNbMCVJK+T9L
SpXrk2skQINMQai02Pc/4JAOUXaZI0Dsp0cKX7H2P+zPCW0=
            "]], 0.3499999981077877], 
          
          ArrowBox[{{19.872145267902624`, 5.673214111922771}, {
           19.87214526805201, 4.254910583942078}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwt0QtMk1cUAOAfB8zVAkXeL6V/1b8FC/KQMBv4T3jEFyuCCkJAijwySGEV
YUh5KbKKGuXNRCoBQQqdMAUxoo7xEBxmQLYSZmGzuoFRQIQGEBzCtnt3k5Ob
Lzk595xz2Se+Co7bQBDE/n/jv5soK1Nd6KRgtnWN6zbOgSjA7pk7Mcvu4MDc
X6XIA6NVzdJSDrTnYBNxTfFeiRxQsrC/rLpklejFAVVlCfIGqU8/YcABJ2vs
QWJIrKMm4WFxMa7n7GQgriUhk8Be1o9RQDwJSfFFyCEysSCXImFmohB5KEz0
s/YVG45ex/bnH4mMb2CDohC7k9g3q45jg+Yh9u4RQe4X29mgQ+J6zQpnVveE
PTB7sLdncmrd6+2BkOP35UIL18YYe/j9e9yvKbmp14ZjD138b5Fbyb13G25s
gej0q8g1A06jl9lbQJVTiVwiMV9OrbEDC79ryGcs1qwittrBzifYks5JgW+1
LbA2ViEfjxuMdLCzhX597EBme66x3AYCenG+d5u8dtnaBm56YfPD83s1ldbQ
loD7uefZPi9csgQPcQVyvUZu4pFmCTX+5cjlsvzddgsWoF3E/yPji0N1T1nA
jmw8X9rI4YzpeXOAcbyPmExB1a8Sc/Bh4f0dITk/dLwzA67tZWSfAYamJtkM
FtYuIrtKtETBW1PYIz6H/EjIcX6/3wSu7TyL/N0iI+j5T5shmZOLXCXXpvTt
3QwPDmUjX/IdK7vVbwzpdzORpVPd90r9jeGWUIqcUNz0TPqYBSFbM5CPeRZ/
iPZlQdqO08hXOuc9S/KNgBGbjpzM7M4S5RlC0lgact4AqfYWbALV5AsiuIsC
l4I7hdo9DDjzhryg7KMgn/uj40nvzyB1UiAuHaLgtPJg8wP/jaBUOyqZ4xQw
DUNNhw99ClS/1sd8mgLfwy9FLVH6MKUs8ri9RoGtdKrkWIoeaM/rfTNmxoWK
vBTlYIEu0JFBTuW7uNAmzlAY1H0CAQF/DOvf54Ll9EfFlr51Wn1bWaSj4UI5
I/Vt/28f6YuER4segwfFLpUtMstVOkKQyzX5nAdMUdJ05PkPdEC0bJ0n5oF+
xVxdwLYVWpRy0O1AHQ9yVOSz4Hfv6bLkod5Tz3nwtaVugeT1Ej111OhOg50D
zMaWtd00WqKjuYZ//ylygIn7qnBt7CK9Mvm0ltvoAGGmPdkhrxfo0NEkUwc+
HyoDO/POJc7Twrb1FfcsZ7heW5AwlzxDi72hqf7pLph3bqQSql/RUqvlK26P
XIB/YJw+GfOSHkmknJ6UuMKNF76xxllqOt11SBYldIMuv+XV4xG/0HGSmaur
s24QflZRWjH8mK7elhdbneoOHUFhjmEZrbR9YOEbP407EP+ffwCeHhDU
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwl0HlI03EYBvCV2UWXrea8ar/Na37nkbNZafWgM8HC1KZmeBVKWanzSgrE
1DDSdE1jbTWXLhWTPDLnSDMr6ZpJhSaElJqsMLI2E1GRmbk/Xh4+/zwPvNSp
9IjklTQazWPp/ift5s2Ba09d8LvN5Mof5qBDRe5pDC5IEhqmVFoOwt1lJ/k8
Vxxz+tiTVsbB+4ODmywyXKGNrJGoYznwGNI3Ova44sanxFP7nDjINOh2yxlc
jNZu3iP4wYasvKglLpeL+t6mLTI1G6rWzcycMS7Gd/n9iolmoyQqPf2ryA2y
P1pdgSUbxy+rNYqPbuhZ4DzY2EThSGTmCpEFQWqA5g+/mEJR8kOVjydBgudJ
f1EshenWhDK/SIJbvS4VaZ4Uan3z+s/kENAX1xoLF1mQzK1LeCIhGBxbFSN9
x0LnjGWAoJZg+JydTiFjge2ZcWGojcC56ohQGceCTn14QdlF0JEjfy2nWBjY
L1/6D0EbO7i9Xr0DiFcsu/qtx1AZtQP5zreXXSFmzGZXO6BSZvZla5NN7E4H
5DabLX6q9wtU2cMrzez45P44Nwd7dH8y9x3doMm3UtrBXm/eO/BIWTNra4dQ
5a1lu5+40juisMXkpHTZHXs0xtAZJh5r2/ateUHQL25+1nWJicAWpjj/HYGg
TzfBX89EyWBv1tQXAkPw+lRtrTWuu7QHJc4QzH8/H3IoxBohDRP6N9t5iGiY
KhidZ+BlVJKI58+DqfQOvbiDgQVvR2lJCg9z0tOLgjwGDP5c5XgVD8LOqKC/
oQxUZ2fl+H7mYWxVir6TMFBJoyKE9z1gTAiXRIdtx+HhrIokrheM1x/dJVe3
QdQ3PvPtpxdGSiUM3w90JIYlRjkoduFxrP7vRUJH9tmJVrqPNwoX232n5VtR
bpO/+lWXN/Zmm8bqmFvRHEdF+3jx8aXz+VR5oxUGBR/U8VI+xAOmlJZQK9Dq
SieEI3wYuzXBayyt8A8n0ElU
            "]], 0.3499999981077877], 
          
          ArrowBox[{{11.872145282637575`, 9.928124695864849}, {
           10.872145280785219`, 8.509821167884157}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwl0XtMU2cYx/Fyc3IJtCCXFZCeNkDP6dgWCKwTtD9h5Sbhom54mxs6dDql
wDACXkCGiMgWhY6JVEQHJYyLgSHTCaygA4oYU8HLCg4SQE3BOjqUCljGzvnj
zZtP8uTNk+9L7JJtTDZnsVhYPv/fLLl88HSnL/QtJmHAsAC1Diofq0e+UFTp
P8y+LsB8gnPkrMEXAWX9vw2fXfY2+UeJjkJcLS3pSPxKgBpq7Su/QCHY5eGh
en8BFlUOJzK3C7FV+VR6aZGPJU+74aCTQhTeTO/b38VH03p/i30tQige69Tx
J/iwfi/vjf24EOffxkYnhPDBfrLQIXQlkUVdijpgINAb/1131BoSsvgYmUUH
AZ5jXk/kVhJuD9ncDQUEuIRR7Z1BIvPmdFRYLIGWY5MDY0UkilljpqlVBPS+
0feyLpL4tEYnlmp5UHv5aP6pJzFYZ2eMreQhPDnrvrSNxAr78BDrJB52GcMG
M9tJ6DVlVhl8HnjRuct9SLTwI1qVV1bD1/U47Sr1+w+/J1bDS3aUdkmqizGj
yhO2G4/QznU1vbvDyxMTf2TTTu2cDA6r9EDLdcY7k+9+Tnl6IC2EmY+zu5bD
UbiDt4F5b92vistGrju6J47R9tuWf2u0nIvpwydpt4mvzcS+dsNo0yna1aMK
p6BDbqjJOU37x4L8QM9ZV4ToimgX+B1ItPzWFdX6M7QPDW3KmppxwUhxMe3d
R4Ir7qe64Nltxpv5go4bL53RXcY4VG0zWpXijBRzxv6pBlbhi1XYnFRIuz1W
8MFclBMSCWaf+lc2CX/3OeKndmbfCoUh/c8IRzgF5NM+E6aVN/Rw0JefRztb
19VWKuXg92am975zdY+zb7Px/AbTe4v43HxSGBvxF5k+P3TOiEvyHTC7nemZ
Ytd19Ms8ezTsSaedp+b/tS7YFnEhrYMXVCQ04luODcE2WNt0fOhuz/J/T1mJ
E9db43C75gFfQ4I7potEzErM72l8VD5KguOWLt274x0MNHK0/gYSupIKv4G0
FXh61jTyYiUFZfxeM1mxFWLYGWP9AgrShAequAZLmETpE+pQCr3yyW9SNBaY
Hzc+1yVToNzPm99ZMIe2LLXR8gIFYky7FDRkhtq6zp9/6acQGHHQ7GMVC7s9
xu+MzFG4V1VpfyVnSWL78ol3BSHCwTkzganmreQycbV5MkKET0osUfDvgsS7
9TNZ+34RtqQpk9d8PS8pUw7t9CoSoVr+rJRr+UYyaxTm2itFEC329vv0zklQ
v2m5jwjTtRE2XzS/lvwHNhbTaQ==
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1: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
PwHyY/Rn
            "]], 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwl1HlM0wcUB3DAA4/KVVoqtIW2QLlatNLfD8TjK4cgEwMd4GxEi0wmioF5
IAjCgg4jIFjwiAScoFyKpDKKm0KH4gHiwTUMQ0GZMq6JIDpWr3W//vHy8kle
Xl7y8h5vW7xsu5GBgYFMF/9ns8vPR/wGpHiZya8ZXOaOYcXv6+vGpbgzn1Nz
wtwd5MqJ240fpHirYXGEY2IYQiyLohGIL2d8KGsSwyc2f/ocl4CkiR64KF+M
j7/YVCdKCPjQ6LMjt4qxxP1+0nAAgXNZdPdTTmL0tRXLp7cQCPRmtKr/FuFL
7unQwgMEvLmsTk2NCEVJdZF/KAkcXMYOUu0SwYEtyHKqImD2PeOfBHcRzo5p
kq2bCDR7ei9WTblBO3TUTdVDIC/ruGq32g1+JmmlI+MEEmNojVUH3HAoqqTv
rhGJxAfXVn3r5YbzzyefBLBI5DfkSYu1rqjJjj8TJyLRQpwsCbvhikvbrK2l
PiRY3ncyslJcIY/pyVicT2KP/x558SEXdBi+q/uqlIR9XerabWtdELZ1J+e0
ikSt2EtpYuKCF2lEw0wDCba6YnlptzP2KzYp994jsSWgxYdT6AzL2V1Fc9tJ
pL0qrErf4gxN7IX+qz0kDuTZxrfynJGgvB+xv49EkH9EgfZPJ4hTAueE9pPQ
zl3NpJc5ocGXM+o3QEKW8PlTT5cQ7YTeLb5TuUEFQiS/Z1NeYzVkq5EJUZuh
9/XRXtVSCyHS+mwoL9U8XFPW4YhnBnpXKm92spSOeDS1mLLddnV0TogjZFdZ
lM94Vk1/MXXEdyusKJvSin/c+9gBCT+ZUw5LUbMvf7JHiZEZ5bYNVVe4jfaQ
qUwo+/CLV+Wn2iOzchHlhncnHs9ZYQ9ijEZZ0npEkfxBgB1Jel8qSpocvy4A
K0RvfkJchuKgAIF79D7rq6B3ewmg7dfbwirsYsC/fDhmmlKOyIzzThfyoZDr
53m0SfFgaogHd65+Xn9RWGRMOQ8FHXprDAJf927nIWufBWVpt3d6sAMPDGM6
5SsV7mY3X9pBekxvhxRBicdFOwxr9S7aYCWpjLbD0s2WlC35C5ttBHY4HMKg
XMsPqCsv5WLnrUHaLt0+4+6Ku2P5XDzJDNr/TLfv29HMNy8vcHCneL2g6Imu
XvvJmCXkgDAeYVZ0kFie/cpmVjUbLs22IZ9bScgZD13LJWyc73jzqKSJBPNs
HWl4wwaFks0FSjWJHcyi1Zb+NmANRRU/rCQRfvyw70C7NRasyzNuiyVR76me
3PCehVsT1dmHNpJgnHA6yU5mwZw3OBDtq+sf+DN5bRYLM0/Fs9N09/FDVPhT
7mkr7BMUzLQxSBztM8n4eokVsqZNGoM/6v5B/YBTeCcTZEhp6KwXBFZM3WsX
pDJxkAiuH28mMJp7L/k3ERMRFaZj88t0953TL3D6i4GW0pEJ+REC46O0x5GV
DMzIJ2QzTAKOkt7dOcOWuD7v6lHbWikGj9Gt60hLmFSLc9vDpWBP3ejqPkXH
W78dMQuNpOjZ2Vn42oiOuK5Is/Z6D5hOR8QbplsgcaNpDnefB1qOrwtdtMAC
Fh2pve+9PGDoeQkWF80BlM98M88Dv04lrTQLNodBWbbuHy7DZKM6wHiOOf4D
NyssxQ==
            "]], 0.3499999981077877], 
          
          ArrowBox[{{21.872145287848127`, 15.60133880778762}, {
           8.318152461230397, 14.183035279806928`}}, 0.3499999981077877], 
          ArrowBox[
           BezierCurveBox[CompressedData["
1:eJwl039Q03UYB/AN0IgfIkRssEH7xcaPbRywHdMJvlF+VSBGaEhNUG4I6R3z
KA4FQoJQk+NghkSJPzgYMBMpRhLqhAihkx+BpEeAFNFC5Eh2M8hCwu/nj+ee
e73/eO655+7hHsxKUFvRaLTX1+tF33zl10cR03LMlvJaZoIDMFpM3PFDafaI
cwA+SCI26m8H+S1IYfEhXlEMPl74XoqEp9OU92ddu+B+ToryW8Qrcelvtqql
0BcR94wtLbUGSlEfTtxlnaBlPZOgYPUh5cVfSsVPjBLI2onjkiu6pCckWL5I
3CMpeatuuwQWC/E2eu7Mq2tiiA1kXvvY4ezTRjFqp8h+4qYUm9UCMWKOzlCu
z3u7ShMqhjRrljIrPlo4+58/4h6YKGt5yuvv3PRHY/MjyvZ/S2Pu5vljo85C
OV4dPW2l90PT4jLlOwqlJifTD9I/nlHe7hBAn/fxQ/XpVcrXp3la1ZwvZibW
KEvb3Pgjjb5wnqTPv7Cu1M4QccgXgk+tKXslP4/oEPqCabKhfE5i/tnf5APz
Xxsob6Kb0i82+MAw9xLlBM3z1fv3REjT2FLu32kuf+OsCB7zxOEM02vGBBHG
9rxMuXN+vDXQRYTP2ogDjYPhDSNCJFnbUW6q7B5lVgrBiyTmqNvTynYLYc4l
rlY0W9achOi7QOzkUPtJ9rA3KiaJE/Pa2VdWBQheJL67q/mq1y0BDtLtKe/g
1YZp8wXguBHffFoxvGGbABli4qAfS1KP/ctHWASx/nzu0kInH5dVxDzNkY9T
j/NRkUtcszP1lbEtfDhWEbswEuuj/+Hh/RXivaVHlIUiHnoZDpSH9qUOmE1c
hCqIIyWJqnQddz0nNtJiFsfVXOTkE8vHlIVx3lxsvUR8tTFgc/csB8xeYu88
/mVZPQebHhOf38UIakrjgOPiSNmVZ9/D4nNgqiL+hhdt0NV5QXwg86OhKTk8
JlwHzwq8UHE0X3l4XI78b1vulX3lCde+KC5rVI5hg2t/5VZPtB3oD3jYJwfj
fpS+bogNTTj9kKFz/d4ekcdvZ7ARm750p1Yvx6kiJ8WcLRtRP30e/0W1HC32
ut/Z11hQFS7T9EVyDHTYFqjeZUGb7TgxkCHH1KkQG70jC7Wh0yFZfnIc22/d
1/2eB7qK2WWdT2Ro3Ggudv7OHZbI3gctN2TILLJW1vDcsaVk3CP2jAw3hkIW
kmqYqArbt0ebIsOlxfLq3Z5MWH0YcbJIIQPzN9vQEy0MFIu+bHV3k4Gna5j8
M5YB5l7VSPJKMIyh6pyTK27oop1Z/49gLDRG26V87Yb/AfVcC6s=
            "]], 0.3499999981077877]}, {
          Directive[
           Hue[0.6, 0.2, 0.8], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[0.7]]]], {
           StyleBox[
            DiskBox[{0., 26.947767031633163`}, 0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.47\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.47", "Tooltip"]& ], TraditionalForm], {0., 
            26.947767031633163`}, BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{-10.023388740354221`, 9.928124695864849}, 
             0.3499999981077877], {{{
               RGBColor[
               0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
               EdgeForm[
                RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}}, 
            StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"CN2\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "CN2", "Tooltip"]& ], 
             TraditionalForm], {-10.023388740354221`, 9.928124695864849}, 
            BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{1.9766112738014954`, 12.764731751826236`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.14\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.14", "Tooltip"]& ], TraditionalForm], {
            1.9766112738014954`, 12.764731751826236`}, BaseStyle -> 
            "Graphics"]}, {
           StyleBox[
            
            DiskBox[{4.976611282142699, 22.692856447691085`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.31\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.31", "Tooltip"]& ], TraditionalForm], {
            4.976611282142699, 22.692856447691085`}, BaseStyle -> 
            "Graphics"]}, {
           StyleBox[
            
            DiskBox[{-10.452502483666251`, 4.254910583942078}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.4\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.4", "Tooltip"]& ], 
             TraditionalForm], {-10.452502483666251`, 4.254910583942078}, 
            BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{-0.6999619592251634, 25.529463503652472`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.41\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.41", "Tooltip"]& ], 
             TraditionalForm], {-0.6999619592251634, 25.529463503652472`}, 
            BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{3.8020208131569007`, 24.11115997567178}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.46\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.46", "Tooltip"]& ], TraditionalForm], {
            3.8020208131569007`, 24.11115997567178}, BaseStyle -> 
            "Graphics"]}, {
           StyleBox[
            DiskBox[{20.87214526890523, 0.}, 0.3499999981077877], {{{
               RGBColor[
               0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
               EdgeForm[
                RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}}, 
            StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"P1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "P1", "Tooltip"]& ], TraditionalForm], {
            20.87214526890523, 0.}, BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{-5.023388728867076, 11.346428223845543`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
               EdgeForm[
                RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}}, 
            StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"P4\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "P4", "Tooltip"]& ], 
             TraditionalForm], {-5.023388728867076, 11.346428223845543`}, 
            BaseStyle -> "Graphics"]}, {
           StyleBox[
            DiskBox[{0.020215738997535482`, 0.}, 0.3499999981077877], {{{
               RGBColor[
               0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
               EdgeForm[
                RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}}, 
            StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"CN1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "CN1", "Tooltip"]& ], TraditionalForm], {
            0.020215738997535482`, 0.}, BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{1.8721452760063357`, 1.4183035279806928`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
               EdgeForm[
                RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}}, 
            StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"CN3\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "CN3", "Tooltip"]& ], TraditionalForm], {
            1.8721452760063357`, 1.4183035279806928`}, BaseStyle -> 
            "Graphics"]}, {
           StyleBox[
            
            DiskBox[{-4.023388728955297, 11.346428223845543`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.13\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.13", "Tooltip"]& ], 
             TraditionalForm], {-4.023388728955297, 11.346428223845543`}, 
            BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{9.799730809238497, 1.4183035279806928`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
               EdgeForm[
                RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}}, 
            StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"P2\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "P2", "Tooltip"]& ], TraditionalForm], {
            9.799730809238497, 1.4183035279806928`}, BaseStyle -> 
            "Graphics"]}, {
           StyleBox[
            
            DiskBox[{20.60643485769208, 21.27455291971039}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.23\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.23", "Tooltip"]& ], TraditionalForm], {
            20.60643485769208, 21.27455291971039}, BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{7.987628074394308, 15.60133880778762}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.27\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.27", "Tooltip"]& ], TraditionalForm], {
            7.987628074394308, 15.60133880778762}, BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{-9.69231754560036, 2.8366070559613856`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
               EdgeForm[
                RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}}, 
            StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"CN4\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "CN4", "Tooltip"]& ], 
             TraditionalForm], {-9.69231754560036, 2.8366070559613856`}, 
            BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{-8.023388734653452, 17.019642335768314`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.34\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.34", "Tooltip"]& ], 
             TraditionalForm], {-8.023388734653452, 17.019642335768314`}, 
            BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{-1.0233887251723104`, 24.11115997567178}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.37\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.37", "Tooltip"]& ], 
             TraditionalForm], {-1.0233887251723104`, 24.11115997567178}, 
            BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{-4.023388730357965, 9.928124695864849}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.11\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.11", "Tooltip"]& ], 
             TraditionalForm], {-4.023388730357965, 9.928124695864849}, 
            BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{-4.023388733505499, 14.183035279806928`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.29\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.29", "Tooltip"]& ], 
             TraditionalForm], {-4.023388733505499, 14.183035279806928`}, 
            BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{19.87214526805201, 4.254910583942078}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.3\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.3", "Tooltip"]& ], TraditionalForm], {
            19.87214526805201, 4.254910583942078}, BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{27.872145302235367`, 19.856249391729698`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.22\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.22", "Tooltip"]& ], TraditionalForm], {
            27.872145302235367`, 19.856249391729698`}, BaseStyle -> 
            "Graphics"]}, {
           StyleBox[
            
            DiskBox[{10.872145280785219`, 8.509821167884157}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.8\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.8", "Tooltip"]& ], TraditionalForm], {
            10.872145280785219`, 8.509821167884157}, BaseStyle -> 
            "Graphics"]}, {
           StyleBox[
            
            DiskBox[{8.318152461230397, 14.183035279806928`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.16\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.16", "Tooltip"]& ], TraditionalForm], {
            8.318152461230397, 14.183035279806928`}, BaseStyle -> 
            "Graphics"]}, {
           StyleBox[
            
            DiskBox[{-10.300867150799945`, 15.60133880778762}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.26\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.26", "Tooltip"]& ], 
             TraditionalForm], {-10.300867150799945`, 15.60133880778762}, 
            BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{-5.023388734467687, 18.437945863749007`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.35\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.35", "Tooltip"]& ], 
             TraditionalForm], {-5.023388734467687, 18.437945863749007`}, 
            BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{13.872145275081152`, 1.4183035279806928`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.1\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.1", "Tooltip"]& ], TraditionalForm], {
            13.872145275081152`, 1.4183035279806928`}, BaseStyle -> 
            "Graphics"]}, {
           StyleBox[
            
            DiskBox[{-2.02338873141332, 12.764731751826236`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.15\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.15", "Tooltip"]& ], 
             TraditionalForm], {-2.02338873141332, 12.764731751826236`}, 
            BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{-6.0233887365492365`, 12.764731751826236`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
               EdgeForm[
                RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}}, 
            StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"P5\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "P5", "Tooltip"]& ], 
             TraditionalForm], {-6.0233887365492365`, 12.764731751826236`}, 
            BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{19.8721452691517, 2.8366070559613856`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.2\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.2", "Tooltip"]& ], TraditionalForm], {
            19.8721452691517, 2.8366070559613856`}, BaseStyle -> 
            "Graphics"]}, {
           StyleBox[
            DiskBox[{23.743377201935573`, 0.}, 0.3499999981077877], {{{
               RGBColor[
               0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
               EdgeForm[
                RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}}, 
            StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"P3\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "P3", "Tooltip"]& ], TraditionalForm], {
            23.743377201935573`, 0.}, BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{21.733622882811005`, 18.437945863749007`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.20\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.20", "Tooltip"]& ], TraditionalForm], {
            21.733622882811005`, 18.437945863749007`}, BaseStyle -> 
            "Graphics"]}, {
           StyleBox[
            
            DiskBox[{10.87214528290059, 7.091517639903464}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.7\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.7", "Tooltip"]& ], TraditionalForm], {
            10.87214528290059, 7.091517639903464}, BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{9.872145280865709, 5.673214111922771}, 
             0.3499999981077877], {{{
               RGBColor[
               0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
               EdgeForm[
                RGBColor[0.7450980392156863, 0.5411764705882353, 0.]]}}}, 
            StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"CN5\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "CN5", "Tooltip"]& ], TraditionalForm], {
            9.872145280865709, 5.673214111922771}, BaseStyle -> "Graphics"]}, {
           StyleBox[
            
            DiskBox[{11.139497054712592`, 11.346428223845543`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.10\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.10", "Tooltip"]& ], TraditionalForm], {
            11.139497054712592`, 11.346428223845543`}, BaseStyle -> 
            "Graphics"]}, {
           StyleBox[
            
            DiskBox[{21.733622882777468`, 17.019642335768314`}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.19\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.19", "Tooltip"]& ], TraditionalForm], {
            21.733622882777468`, 17.019642335768314`}, BaseStyle -> 
            "Graphics"]}, {
           StyleBox[
            
            DiskBox[{19.872145267902624`, 5.673214111922771}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.5\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.5", "Tooltip"]& ], TraditionalForm], {
            19.872145267902624`, 5.673214111922771}, BaseStyle -> 
            "Graphics"]}, {
           StyleBox[
            
            DiskBox[{11.872145282637575`, 9.928124695864849}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.9\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.9", "Tooltip"]& ], TraditionalForm], {
            11.872145282637575`, 9.928124695864849}, BaseStyle -> 
            "Graphics"]}, {
           StyleBox[
            
            DiskBox[{21.872145287848127`, 15.60133880778762}, 
             0.3499999981077877], {{{
               RGBColor[
               0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
               EdgeForm[
                RGBColor[
                0.7411764705882353, 0.7764705882352941, 
                 0.8784313725490196]]}}}, StripOnInput -> False], 
           InsetBox[
            FormBox[
             TagBox[
              TooltipBox["\"   \"", "\"1.18\"", LabelStyle -> "TextStyling"], 
              Annotation[#, "1.18", "Tooltip"]& ], TraditionalForm], {
            21.872145287848127`, 15.60133880778762}, BaseStyle -> 
            "Graphics"]}}}], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}], 
   TemplateBox[{
     TemplateBox[{20}, "Spacer1"], 
     TemplateBox[{
       TemplateBox[{0.005}, "Spacer1"], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.6457516339869281, 0.5071895424836601, 0.1803921568627451], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.9686274509803922`", ",", "0.7607843137254902`", ",", 
               "0.27058823529411763`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9686274509803922, 0.7607843137254902, 0.27058823529411763`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[
        0.9686274509803922, 0.7607843137254902, 0.27058823529411763`], 
        Editable -> False, Selectable -> False], 
       StyleBox["\"axioms\"", FontFamily -> "Source Sans Pro", 
        GrayLevel[0.3], FontSize -> 12, StripOnInput -> False]}, 
      "RowWithSeparator"], 
     TemplateBox[{
       TemplateBox[{0.005}, "Spacer1"], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.5647058823529412, 0.5830065359477125, 0.6379084967320262], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.8470588235294118`", ",", "0.8745098039215686`", ",", 
               "0.9568627450980393`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8470588235294118, 0.8745098039215686, 0.9568627450980393]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.8470588235294118, 0.8745098039215686, 0.9568627450980393], 
        Editable -> False, Selectable -> False], 
       StyleBox["\"2D geometry\"", FontFamily -> "Source Sans Pro", 
        GrayLevel[0.3], FontSize -> 12, StripOnInput -> False]}, 
      "RowWithSeparator"], 
     TemplateBox[{
       TemplateBox[{0.005}, "Spacer1"], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.9764705882352941, 0.6392156862745098, 0.9372549019607843], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.6509803921568628, 0.4261437908496732, 0.6248366013071895], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.9764705882352941`", ",", "0.6392156862745098`", ",", 
               "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9764705882352941, 0.6392156862745098, 0.9372549019607843]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.9764705882352941, 0.6392156862745098, 0.9372549019607843], 
        Editable -> False, Selectable -> False], 
       StyleBox["\"numbers\"", FontFamily -> "Source Sans Pro", 
        GrayLevel[0.3], FontSize -> 12, StripOnInput -> False]}, 
      "RowWithSeparator"], 
     TemplateBox[{
       TemplateBox[{0.005}, "Spacer1"], 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{{
             GrayLevel[0], 
             RectangleBox[{0, 0}]}, {
             GrayLevel[0], 
             RectangleBox[{1, -1}]}, {
             RGBColor[
             0.6705882352941176, 0.8745098039215686, 0.8313725490196079], 
             RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
           "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, FrameStyle -> 
           RGBColor[
            0.44705882352941173`, 0.5830065359477125, 0.5542483660130719], 
           FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
           Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}]], 
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.6705882352941176`", ",", "0.8745098039215686`", ",", 
               "0.8313725490196079`"}], "]"}], NumberMarks -> False]], 
         Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
         DefaultBaseStyle -> {}, ButtonFunction :> 
         With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6705882352941176, 0.8745098039215686, 0.8313725490196079]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]], 
         BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
         "Preemptive"], 
        RGBColor[0.6705882352941176, 0.8745098039215686, 0.8313725490196079], 
        Editable -> False, Selectable -> False], 
       StyleBox["\"3D geometry\"", FontFamily -> "Source Sans Pro", 
        GrayLevel[0.3], FontSize -> 12, StripOnInput -> False]}, 
      "RowWithSeparator"]}, "RowWithSeparator"]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2}], "]"}]& )]], "Output",
 CellMargins:>
  Dynamic[{{
    0.085 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
    0.036663481677018626` FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
     0.019553876594202897` 
     FrontEnd`AbsoluteCurrentValue[{
       WindowSize, 
        2}]}}],ExpressionUUID->"ff1514d5-fe17-42ab-9566-09ce299a90ac"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b1a9f128-6b36-49be-9bfa-d2905405833a"],

Cell["\:8c22\:8c22\:ff01", "Title",
 CellChangeTimes->{{3.8300081374220133`*^9, 3.830008165165242*^9}, {
  3.830279070909748*^9, 
  3.830279071632707*^9}},ExpressionUUID->"0eccf2c5-40e9-4529-aef8-\
38c32c07ea4e"],

Cell[BoxData[""], "Input",
 ShowCellBracket->False,
 CellChangeTimes->{{3.8300082395045533`*^9, 3.8300082472371387`*^9}, {
   3.8300084361635804`*^9, 3.8300084373844886`*^9}, 
   3.8300190971058836`*^9},ExpressionUUID->"60bf00cf-b0d7-4b10-9d4d-\
d657444240b9"],

Cell["\<\
Wolfram|Alpha \:5f00\:53d1\:ff1a \:5f20\:6653\:51e1
xiaofanz@wolfram.com\
\>", "Text",
 CellChangeTimes->{{3.830008175565856*^9, 3.830008227792648*^9}, {
  3.830272474391006*^9, 
  3.830272479396557*^9}},ExpressionUUID->"6b55ff74-03cf-4d39-9f0b-\
a4899689403a"]
}, Open  ]]
},
WindowSize->{949, 407},
WindowMargins->{{-960, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (April 24, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e128442b-4148-4690-8d68-50ab2d090ba4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6bc47d14-5ee7-4781-896b-86b6ea6fe52d",
   CellTags->"SlideShowHeader"],
  Cell[1352, 46, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"f5522fee-0d1c-4829-ad1b-2686924772fb",
   CellTags->"SlideShowHeader"],
  Cell[3916, 110, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ca2b41e0-c425-46b4-b45c-5e6a1b3bde34",
   CellTags->"SlideShowHeader"],
  Cell[185063, 3669, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ef6d565e-11bc-4e43-9b85-058ac249ad89",
   CellTags->"SlideShowHeader"],
  Cell[335621, 6779, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ecb21d8b-7024-4f1e-b72a-4a983870487d",
   CellTags->"SlideShowHeader"],
  Cell[454608, 9205, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"612b46ca-bb89-4914-bf81-a9af232ec60d",
   CellTags->"SlideShowHeader"],
  Cell[627455, 12674, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"8e04a919-8efa-44a1-a322-3bde9fd3ff2a",
   CellTags->"SlideShowHeader"],
  Cell[851580, 17118, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4b24fc4d-c72a-44e3-ad71-a20cc0b8a8b7",
   CellTags->"SlideShowHeader"],
  Cell[857725, 17308, 223, 5, 74, "SlideShowNavigationBar",ExpressionUUID->"8a5ce841-a395-4b45-a907-8d19b3db1c84",
   CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
  Cell[866867, 17525, 225, 5, 74, "SlideShowNavigationBar",ExpressionUUID->"ab627d15-d3c5-4b89-9c2c-25f6fb2a4328",
   CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
  Cell[1004129, 20325, 155, 4, 74, "SlideShowNavigationBar",ExpressionUUID->"074850b0-fb93-4b8e-b9bf-ab883ea3602d",
   CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
  Cell[1033691, 20973, 271, 7, 54, "SlideShowNavigationBar",ExpressionUUID->"e1940bf3-8cb0-4104-a958-6dad2612d590",
   CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
  Cell[1057741, 21476, 271, 7, 54, "SlideShowNavigationBar",ExpressionUUID->"24be5164-8a97-4be5-990d-b122c4d6dff5",
   CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
  Cell[1070430, 21702, 271, 7, 54, "SlideShowNavigationBar",ExpressionUUID->"fe76e7d5-8c75-4aed-a1c1-1e6c7cdd780e",
   CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
  Cell[1083993, 22060, 271, 7, 54, "SlideShowNavigationBar",ExpressionUUID->"f28e6b95-8122-404d-9f06-d2fe231cb2e7",
   CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
  Cell[1105902, 22675, 238, 5, 54, "SlideShowNavigationBar",ExpressionUUID->"86993c5b-1dc6-45ae-b6a8-ad0601caf639",
   CellTags->"SlideShowHeader"],
  Cell[1837028, 36174, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b1a9f128-6b36-49be-9bfa-d2905405833a",
   CellTags->"SlideShowHeader"]},
 "2020928172014.0081744"->{
  Cell[857725, 17308, 223, 5, 74, "SlideShowNavigationBar",ExpressionUUID->"8a5ce841-a395-4b45-a907-8d19b3db1c84",
   CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
  Cell[857973, 17317, 1024, 18, 81, "Section",ExpressionUUID->"8f435092-f1a4-4814-97c1-a76dc3f5ca14",
   CellTags->"2020928172014.0081744"],
  Cell[859022, 17339, 597, 12, 66, "Subsection",ExpressionUUID->"81da86ba-5cbb-466d-b7a7-dee0bc1e9648",
   CellTags->"2020928172014.0081744"],
  Cell[859622, 17353, 927, 16, 30, "Text",ExpressionUUID->"a897c1af-bd2c-4285-bfa0-66ddd9afab01",
   CellTags->"2020928172014.0081744"],
  Cell[860574, 17373, 608, 12, 38, "Input",ExpressionUUID->"20090602-7437-4fcd-aaba-f1a0b988c0b2",
   CellTags->"2020928172014.0081744"],
  Cell[861185, 17387, 609, 11, 38, "Output",ExpressionUUID->"bc30fc2d-72db-4955-8198-fc103c0997de",
   CellTags->"2020928172014.0081744"],
  Cell[861809, 17401, 837, 19, 30, "Text",ExpressionUUID->"01b8911a-b462-4443-ba12-708ef613a1db",
   CellTags->"2020928172014.0081744"],
  Cell[862671, 17424, 737, 15, 38, "Input",ExpressionUUID->"8c468b11-f689-44b8-86fa-d36d0cd9a2ea",
   CellTags->"2020928172014.0081744"],
  Cell[863411, 17441, 3383, 76, 80, "Output",ExpressionUUID->"3956ea48-b6ce-425d-9963-e2b669c3862d",
   CellTags->"2020928172014.0081744"],
  Cell[866867, 17525, 225, 5, 74, "SlideShowNavigationBar",ExpressionUUID->"ab627d15-d3c5-4b89-9c2c-25f6fb2a4328",
   CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
  Cell[867117, 17534, 559, 11, 42, "Subsubsection",ExpressionUUID->"03429a65-def9-4648-b1d9-0d5af131da02",
   CellTags->"2020928172014.0081744"],
  Cell[867679, 17547, 809, 19, 30, "Text",ExpressionUUID->"4e781cd4-0d52-45e2-8d34-b97d4987aa3b",
   CellTags->"2020928172014.0081744"],
  Cell[868513, 17570, 700, 14, 38, "Input",ExpressionUUID->"40b48c17-f9ee-4c18-84da-654e02c815f9",
   CellTags->"2020928172014.0081744"],
  Cell[869216, 17586, 5454, 109, 140, "Output",ExpressionUUID->"fd315080-7a92-40de-87b7-ee941b21b43e",
   CellTags->"2020928172014.0081744"],
  Cell[874685, 17698, 803, 19, 30, "Text",ExpressionUUID->"725febc4-7b28-4294-8920-3c68a44853a6",
   CellTags->"2020928172014.0081744"],
  Cell[875513, 17721, 598, 12, 38, "Input",ExpressionUUID->"9163d795-035f-49af-b825-24702f385294",
   CellTags->"2020928172014.0081744"],
  Cell[876114, 17735, 1172, 22, 48, "Output",ExpressionUUID->"ed8ab860-077b-4bb9-a931-13db05abafdf",
   CellTags->"2020928172014.0081744"],
  Cell[878454, 17791, 720, 13, 29, "Text",ExpressionUUID->"ca5b1f80-2d45-4915-aa03-f32a3e1476c9",
   CellTags->"2020928172014.0081744"],
  Cell[879199, 17808, 739, 16, 38, "Input",ExpressionUUID->"fbdd6b4a-ad6e-4dfc-b88d-9e9377d52703",
   CellTags->"2020928172014.0081744"],
  Cell[879941, 17826, 1584, 31, 51, "Output",ExpressionUUID->"9836a922-7583-43ad-adfe-57bb1458f128",
   CellTags->"2020928172014.0081744"],
  Cell[881540, 17860, 770, 14, 30, "Text",ExpressionUUID->"beb75a0b-be89-4d1b-8a64-10787655c6a8",
   CellTags->"2020928172014.0081744"],
  Cell[882335, 17878, 696, 14, 38, "Input",ExpressionUUID->"6e88ae40-7a9a-4e95-bcb2-2f56d50d01eb",
   CellTags->"2020928172014.0081744"],
  Cell[883034, 17894, 2006, 52, 62, "Output",ExpressionUUID->"6a75c4aa-b3d2-4fe5-ac22-517542736613",
   CellTags->"2020928172014.0081744"],
  Cell[885077, 17951, 860, 15, 38, "Input",ExpressionUUID->"5cbbb703-0486-4dd6-9fe4-db2c7282fb5b",
   CellTags->"2020928172014.0081744"],
  Cell[885940, 17968, 118128, 2350, 530, "Output",ExpressionUUID->"071ba790-a067-4170-9610-9b58262ea99c",
   CellTags->"2020928172014.0081744"],
  Cell[1004129, 20325, 155, 4, 74, "SlideShowNavigationBar",ExpressionUUID->"074850b0-fb93-4b8e-b9bf-ab883ea3602d",
   CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
  Cell[1004309, 20333, 602, 12, 42, "Subsubsection",ExpressionUUID->"00cff323-67d7-4fcf-8e42-5fe4765de140",
   CellTags->"2020928172014.0081744"],
  Cell[1004914, 20347, 881, 20, 30, "Text",ExpressionUUID->"2f19e776-0147-4bde-976e-89c75b03e7fd",
   CellTags->"2020928172014.0081744"],
  Cell[1005820, 20371, 573, 10, 38, "Input",ExpressionUUID->"b98e577e-c2d0-4613-b9be-80d9b6820335",
   CellTags->"2020928172014.0081744"],
  Cell[1006396, 20383, 5599, 118, 200, "Output",ExpressionUUID->"7dac023f-2f31-4f67-b8cd-c919eca23d03",
   CellTags->"2020928172014.0081744"],
  Cell[1012032, 20506, 615, 12, 38, "Input",ExpressionUUID->"35085f19-a95b-4b2a-a57e-ce17af8a93ca",
   CellTags->"2020928172014.0081744"],
  Cell[1012650, 20520, 5644, 119, 200, "Output",ExpressionUUID->"215649d9-e6cc-4f8b-8816-e4c67dbf534d",
   CellTags->"2020928172014.0081744"],
  Cell[1018309, 20642, 720, 14, 30, "Text",ExpressionUUID->"2ea3b4fe-648e-43ed-90aa-c03a04602f36",
   CellTags->"2020928172014.0081744"],
  Cell[1019054, 20660, 740, 15, 38, "Input",ExpressionUUID->"65ec6522-fbd9-4d20-9512-f165a8c6b08d",
   CellTags->"2020928172014.0081744"],
  Cell[1019797, 20677, 13833, 289, 350, "Output",ExpressionUUID->"25c63f21-8951-4ff7-b74e-51de12133736",
   CellTags->"2020928172014.0081744"],
  Cell[1033691, 20973, 271, 7, 54, "SlideShowNavigationBar",ExpressionUUID->"e1940bf3-8cb0-4104-a958-6dad2612d590",
   CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
  Cell[1033987, 20984, 642, 14, 81, "Section",ExpressionUUID->"4175662b-c594-487c-9806-a308284cbda7",
   CellTags->"2020928172014.0081744"],
  Cell[1034632, 21000, 644, 14, 75, "Text",ExpressionUUID->"e03fb292-7d87-458b-b260-8b688b045bb5",
   CellTags->"2020928172014.0081744"],
  Cell[1035279, 21016, 1043, 20, 30, "Text",ExpressionUUID->"f08ba415-839b-4570-b81e-9ad70d487300",
   CellTags->"2020928172014.0081744"],
  Cell[1036347, 21040, 615, 12, 42, "Subsubsection",ExpressionUUID->"ca0e7e69-8fae-469e-873e-c0f591514f1e",
   CellTags->"2020928172014.0081744"],
  Cell[1036987, 21056, 527, 11, 38, "Input",ExpressionUUID->"972cdd70-2feb-4e8d-9849-c20b40354388",
   CellTags->"2020928172014.0081744"],
  Cell[1037517, 21069, 20151, 399, 93, "Output",ExpressionUUID->"63643801-a369-4a81-a41c-705190282577",
   CellTags->"2020928172014.0081744"],
  Cell[1057741, 21476, 271, 7, 54, "SlideShowNavigationBar",ExpressionUUID->"24be5164-8a97-4be5-990d-b122c4d6dff5",
   CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
  Cell[1058037, 21487, 645, 12, 42, "Subsubsection",ExpressionUUID->"5577563c-6d40-4de6-bb12-b2a9fe534048",
   CellTags->"2020928172014.0081744"],
  Cell[1058685, 21501, 641, 15, 38, "Input",ExpressionUUID->"01c22778-da99-404e-8c7a-b09782d7c217",
   CellTags->"2020928172014.0081744"],
  Cell[1059351, 21520, 781, 17, 38, "Input",ExpressionUUID->"1df0d68f-47da-43a9-9f4d-134a1897dd96",
   CellTags->"2020928172014.0081744"],
  Cell[1060135, 21539, 10234, 156, 556, "Output",ExpressionUUID->"caea7046-c0a3-4c09-9f3e-26c6331f63b0",
   CellTags->"2020928172014.0081744"],
  Cell[1070430, 21702, 271, 7, 54, "SlideShowNavigationBar",ExpressionUUID->"fe76e7d5-8c75-4aed-a1c1-1e6c7cdd780e",
   CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
  Cell[1070726, 21713, 685, 12, 42, "Subsubsection",ExpressionUUID->"299bfd08-9923-40a2-b4aa-4c250c973d32",
   CellTags->"2020928172014.0081744"],
  Cell[1071436, 21729, 770, 18, 38, "Input",ExpressionUUID->"257892d5-9928-4c80-bdd3-036046c08b0d",
   CellTags->"2020928172014.0081744"],
  Cell[1072209, 21749, 888, 18, 58, "Output",ExpressionUUID->"dc9accfd-e9bb-4e2c-b6e4-afe1358fc57e",
   CellTags->"2020928172014.0081744"],
  Cell[1073146, 21773, 707, 13, 42, "Subsubsection",ExpressionUUID->"e7dfbe57-6144-4f5c-8f0c-cbdae5728229",
   CellTags->"2020928172014.0081744"],
  Cell[1073878, 21790, 788, 18, 38, "Input",ExpressionUUID->"26de1fb3-a4c8-4a80-b129-506373b8e9a4",
   CellTags->"2020928172014.0081744"],
  Cell[1074669, 21810, 988, 23, 38, "Output",ExpressionUUID->"4d015011-8312-42c4-8b05-a8bb07a9d1ac",
   CellTags->"2020928172014.0081744"],
  Cell[1075706, 21839, 570, 11, 42, "Subsubsection",ExpressionUUID->"4882bc8b-ad5d-4738-b9eb-750081806b30",
   CellTags->"2020928172014.0081744"],
  Cell[1076301, 21854, 732, 17, 38, "Input",ExpressionUUID->"e43fb863-e463-48f4-aeb3-a2bdbb876a7d",
   CellTags->"2020928172014.0081744"],
  Cell[1077036, 21873, 1842, 43, 58, "Output",ExpressionUUID->"d5116fc6-aad2-47f8-8793-58dd4cad4a82",
   CellTags->"2020928172014.0081744"],
  Cell[1078927, 21922, 604, 12, 42, "Subsubsection",ExpressionUUID->"0ddf99b6-38a2-4760-9e5e-00daab90e051",
   CellTags->"2020928172014.0081744"],
  Cell[1079556, 21938, 807, 20, 38, "Input",ExpressionUUID->"77a174fa-cb50-4f42-a1c0-07a477bc79ec",
   CellTags->"2020928172014.0081744"],
  Cell[1080366, 21960, 3566, 93, 96, "Output",ExpressionUUID->"a4a53790-f386-4002-a80a-a9f212cbfdfd",
   CellTags->"2020928172014.0081744"],
  Cell[1083993, 22060, 271, 7, 54, "SlideShowNavigationBar",ExpressionUUID->"f28e6b95-8122-404d-9f06-d2fe231cb2e7",
   CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
  Cell[1084289, 22071, 613, 12, 42, "Subsubsection",ExpressionUUID->"fd2ea037-fe45-4c6d-a449-8877c3c39e6e",
   CellTags->"2020928172014.0081744"],
  Cell[1084905, 22085, 1220, 26, 81, "Output",ExpressionUUID->"61a6f5de-d799-4add-bff1-5f2278b936ae",
   CellTags->"2020928172014.0081744"],
  Cell[1086128, 22113, 552, 11, 30, "Text",ExpressionUUID->"f7accd10-a1f9-4cd6-aea4-c92ceafe66d9",
   CellTags->"2020928172014.0081744"],
  Cell[1086705, 22128, 1519, 38, 58, "Input",ExpressionUUID->"1d4114eb-869d-47b1-90c9-1dc27f341715",
   CellTags->"2020928172014.0081744"],
  Cell[1088227, 22168, 15052, 433, 246, "Output",ExpressionUUID->"13eb376d-d41d-49be-9c34-c79e9140d50f",
   CellTags->"2020928172014.0081744"],
  Cell[1103294, 22604, 553, 11, 30, "Text",ExpressionUUID->"f507fd2a-1203-408c-869a-4f36649b935f",
   CellTags->"2020928172014.0081744"],
  Cell[1103872, 22619, 635, 14, 38, "Input",ExpressionUUID->"ac7074b3-a2f1-4df1-be2c-ff8b47ba854f",
   CellTags->"2020928172014.0081744"],
  Cell[1104510, 22635, 1331, 33, 58, "Output",ExpressionUUID->"7cc948d7-5aba-498f-8dd7-1af8f0900b7d",
   CellTags->"2020928172014.0081744"],
  Cell[1106671, 22697, 940, 22, 75, "Text",ExpressionUUID->"a0cbb0e0-5a20-47f4-bca2-a86f3a300b17",
   CellTags->"2020928172014.0081744"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 1838275, 36212},
 {"2020928172014.0081744", 1840998, 36247}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6bc47d14-5ee7-4781-896b-86b6ea6fe52d",
 CellTags->"SlideShowHeader"],
Cell[705, 26, 306, 7, 102, "Title",ExpressionUUID->"97251482-0371-4406-9e1d-8fb2a7c0d817"],
Cell[1014, 35, 301, 6, 64, "Text",ExpressionUUID->"fe5a8ee3-d413-46cf-a8d8-f596426e64e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1352, 46, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"f5522fee-0d1c-4829-ad1b-2686924772fb",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1499, 52, 333, 5, 67, "Section",ExpressionUUID->"01f3a72b-49ee-4fec-aed0-6b232e463aa2"],
Cell[1835, 59, 2032, 45, 220, "Text",ExpressionUUID->"7b064130-5a2d-469d-ac6b-76d716fe3ba2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3916, 110, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ca2b41e0-c425-46b4-b45c-5e6a1b3bde34",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[4063, 116, 329, 5, 67, "Section",ExpressionUUID->"cfa23d12-4e96-424c-bd1d-392d3b4ca03b"],
Cell[CellGroupData[{
Cell[4417, 125, 465, 8, 45, "Subsubsection",ExpressionUUID->"94dc52dd-9510-4a4f-b45f-326c8f6806ea"],
Cell[4885, 135, 7123, 121, 257, "Input",ExpressionUUID->"1473f5c8-e699-4851-bcec-4f026b5519ff"],
Cell[CellGroupData[{
Cell[12033, 260, 2968, 70, 257, "Input",ExpressionUUID->"01ae3313-e219-49ce-a0b0-e7dc6c203ee3"],
Cell[15004, 332, 167130, 3247, 525, "Output",ExpressionUUID->"bccfc5bf-2067-47db-834e-cb6c00b573e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182171, 3584, 221, 3, 28, "Input",ExpressionUUID->"e2e3e090-69c7-49b3-b3ee-40fe82d95225"],
Cell[182395, 3589, 1394, 39, 52, "Output",ExpressionUUID->"580e3d12-11ec-4e29-bc61-56863c91be8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183826, 3633, 851, 22, 48, "Input",ExpressionUUID->"74bbdc7b-c23e-4427-984d-381c6298471a"],
Cell[184680, 3657, 310, 4, 32, "Output",ExpressionUUID->"ab19191b-8936-464b-8571-0b3538820f2b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[185063, 3669, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ef6d565e-11bc-4e43-9b85-058ac249ad89",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[185210, 3675, 258, 4, 67, "Section",ExpressionUUID->"09d5df52-d002-4f93-8c49-65a53ff83c92"],
Cell[CellGroupData[{
Cell[185493, 3683, 330, 7, 45, "Subsubsection",ExpressionUUID->"af9bf27a-03ac-42b3-a8ed-072e8410359f"],
Cell[CellGroupData[{
Cell[185848, 3694, 6401, 113, 205, "Input",ExpressionUUID->"399c3dd7-5030-47c4-b8ba-4931b1472400"],
Cell[192252, 3809, 138851, 2822, 475, "Output",ExpressionUUID->"1bab9e38-2ff0-4057-b866-1ceb8754cf1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331140, 6636, 261, 4, 28, "Input",ExpressionUUID->"e709dfde-e5ae-4513-ad1f-71b54086147b"],
Cell[331404, 6642, 2654, 90, 52, "Output",ExpressionUUID->"4fcb010c-a51e-43b1-a666-0794d84e1695"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334095, 6737, 704, 15, 48, "Input",ExpressionUUID->"eec2a386-6365-451d-9a3f-5ca5787e9155"],
Cell[334802, 6754, 746, 17, 32, "Output",ExpressionUUID->"9f7749e8-ecc1-43eb-8248-78e613ced041"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[335621, 6779, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ecb21d8b-7024-4f1e-b72a-4a983870487d",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[335768, 6785, 243, 4, 67, "Section",ExpressionUUID->"72b10aba-99e3-4f37-8913-792763810890"],
Cell[CellGroupData[{
Cell[336036, 6793, 227, 4, 45, "Subsubsection",ExpressionUUID->"01f8f6ee-9d18-4122-8c17-56f484bd9c06"],
Cell[CellGroupData[{
Cell[336288, 6801, 1060, 26, 143, "Input",ExpressionUUID->"9bf591e9-c14d-4a56-8306-ceeea61c520e"],
Cell[337351, 6829, 115753, 2323, 475, "Output",ExpressionUUID->"8901db00-2fa4-459a-9066-eca8d3d4f398"]
}, Open  ]],
Cell[CellGroupData[{
Cell[453141, 9157, 328, 6, 28, "Input",ExpressionUUID->"63db797b-7ead-4aeb-a7f9-e15deb1fb915"],
Cell[453472, 9165, 1063, 32, 32, "Output",ExpressionUUID->"f9697951-f87e-48d3-a1a0-4803c2a975b3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[454608, 9205, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"612b46ca-bb89-4914-bf81-a9af232ec60d",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[454755, 9211, 302, 5, 67, "Section",ExpressionUUID->"3bb73649-e4e0-4cff-b298-e682d01bbeb6"],
Cell[CellGroupData[{
Cell[455082, 9220, 339, 5, 45, "Subsubsection",ExpressionUUID->"202e4b17-5839-4bca-8952-f7b3847acdf5"],
Cell[CellGroupData[{
Cell[455446, 9229, 1656, 40, 105, "Input",ExpressionUUID->"84a52003-98da-43ed-afb9-4f674a4f846c"],
Cell[457105, 9271, 165097, 3232, 475, "Output",ExpressionUUID->"fb90af2d-e1d1-4e92-8c83-52daf704e612"]
}, Open  ]],
Cell[CellGroupData[{
Cell[622239, 12508, 278, 5, 28, "Input",ExpressionUUID->"34e9c9d8-a5e7-4735-af28-1dcdb973c391"],
Cell[622520, 12515, 3690, 117, 90, "Output",ExpressionUUID->"a6809279-0fa4-4721-b367-c573e22b8d48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[626247, 12637, 470, 10, 28, "Input",ExpressionUUID->"d68fbd39-b198-4db7-94cd-a8bc602c7c88"],
Cell[626720, 12649, 662, 17, 32, "Output",ExpressionUUID->"a9a0276c-64b2-4179-b08c-28517f67a145"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[627455, 12674, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"8e04a919-8efa-44a1-a322-3bde9fd3ff2a",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[627602, 12680, 191, 3, 67, "Section",ExpressionUUID->"6072b634-9255-4cbf-b19d-e31acd959d48"],
Cell[627796, 12685, 30899, 511, 301, "Input",ExpressionUUID->"65af7047-9540-439a-a820-fdd208e63372"],
Cell[CellGroupData[{
Cell[658720, 13200, 2419, 61, 219, "Input",ExpressionUUID->"f638053b-f64a-46ba-9d49-e793ac21b569"],
Cell[661142, 13263, 187738, 3772, 475, "Output",ExpressionUUID->"f5c13a4b-de3f-486c-993b-08b7f07d0608"]
}, Open  ]],
Cell[CellGroupData[{
Cell[848917, 17040, 216, 3, 28, "Input",ExpressionUUID->"fe929204-c1e3-4d4d-99d2-885729c9ca50"],
Cell[849136, 17045, 1647, 46, 91, "Output",ExpressionUUID->"f19cb5c5-073c-479b-96b9-1cd917921675"]
}, Open  ]],
Cell[CellGroupData[{
Cell[850820, 17096, 465, 10, 28, "Input",ExpressionUUID->"3150d87f-0156-47b0-8036-f7244ae10ea1"],
Cell[851288, 17108, 231, 3, 32, "Output",ExpressionUUID->"7c22dfb4-72ab-4e15-afe5-08c1dbe8d963"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[851580, 17118, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4b24fc4d-c72a-44e3-ad71-a20cc0b8a8b7",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[851727, 17124, 202, 3, 67, "Section",ExpressionUUID->"8df39070-61d7-4ba0-a5fe-e5828ab358fd"],
Cell[851932, 17129, 502, 10, 38, "Text",ExpressionUUID->"d5c56d3f-a9bc-4e97-8b06-3c8766016eb7"],
Cell[CellGroupData[{
Cell[852459, 17143, 517, 15, 28, "Input",ExpressionUUID->"2fc7a7a3-4649-47e9-9ba9-f37ea29fee7c"],
Cell[852979, 17160, 203, 3, 32, "Output",ExpressionUUID->"8852307f-4da9-4acb-87cd-38eadc21d5ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[853219, 17168, 755, 22, 28, "Input",ExpressionUUID->"f1f20cb5-e449-4ad0-ab68-d4b5839be5c2",
 CellID->1224787729],
Cell[853977, 17192, 206, 3, 32, "Output",ExpressionUUID->"1495476c-0fc3-44d6-8217-3bfbd3d0520e"]
}, Open  ]],
Cell[854198, 17198, 495, 13, 64, "Text",ExpressionUUID->"a3d8f385-0a34-40e6-836f-05fb53fc4ec3"],
Cell[CellGroupData[{
Cell[854718, 17215, 797, 20, 28, "Input",ExpressionUUID->"78c7d770-b2c2-4cc1-934b-fbd7dee6b58b",
 CellID->38960964],
Cell[855518, 17237, 693, 17, 32, "Output",ExpressionUUID->"d36f8e13-b26e-4a9d-b9f8-bdd2fa60b452"]
}, Open  ]],
Cell[856226, 17257, 501, 13, 64, "Text",ExpressionUUID->"73db771b-74d1-4516-9a20-23ebcc8a83b2"],
Cell[CellGroupData[{
Cell[856752, 17274, 502, 14, 28, "Input",ExpressionUUID->"56b4f589-cb24-4939-bb39-e5990781240f"],
Cell[857257, 17290, 407, 11, 32, "Output",ExpressionUUID->"f0e91b80-893a-460c-b88c-5c94c5b1ebae"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[857725, 17308, 223, 5, 74, "SlideShowNavigationBar",ExpressionUUID->"8a5ce841-a395-4b45-a907-8d19b3db1c84",
 CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
Cell[CellGroupData[{
Cell[857973, 17317, 1024, 18, 81, "Section",ExpressionUUID->"8f435092-f1a4-4814-97c1-a76dc3f5ca14",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[859022, 17339, 597, 12, 66, "Subsection",ExpressionUUID->"81da86ba-5cbb-466d-b7a7-dee0bc1e9648",
 CellTags->"2020928172014.0081744"],
Cell[859622, 17353, 927, 16, 30, "Text",ExpressionUUID->"a897c1af-bd2c-4285-bfa0-66ddd9afab01",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[860574, 17373, 608, 12, 38, "Input",ExpressionUUID->"20090602-7437-4fcd-aaba-f1a0b988c0b2",
 CellTags->"2020928172014.0081744"],
Cell[861185, 17387, 609, 11, 38, "Output",ExpressionUUID->"bc30fc2d-72db-4955-8198-fc103c0997de",
 CellTags->"2020928172014.0081744"]
}, Open  ]],
Cell[861809, 17401, 837, 19, 30, "Text",ExpressionUUID->"01b8911a-b462-4443-ba12-708ef613a1db",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[862671, 17424, 737, 15, 38, "Input",ExpressionUUID->"8c468b11-f689-44b8-86fa-d36d0cd9a2ea",
 CellTags->"2020928172014.0081744"],
Cell[863411, 17441, 3383, 76, 80, "Output",ExpressionUUID->"3956ea48-b6ce-425d-9963-e2b669c3862d",
 CellTags->"2020928172014.0081744"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[866867, 17525, 225, 5, 74, "SlideShowNavigationBar",ExpressionUUID->"ab627d15-d3c5-4b89-9c2c-25f6fb2a4328",
 CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
Cell[CellGroupData[{
Cell[867117, 17534, 559, 11, 42, "Subsubsection",ExpressionUUID->"03429a65-def9-4648-b1d9-0d5af131da02",
 CellTags->"2020928172014.0081744"],
Cell[867679, 17547, 809, 19, 30, "Text",ExpressionUUID->"4e781cd4-0d52-45e2-8d34-b97d4987aa3b",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[868513, 17570, 700, 14, 38, "Input",ExpressionUUID->"40b48c17-f9ee-4c18-84da-654e02c815f9",
 CellTags->"2020928172014.0081744"],
Cell[869216, 17586, 5454, 109, 140, "Output",ExpressionUUID->"fd315080-7a92-40de-87b7-ee941b21b43e",
 CellTags->"2020928172014.0081744"]
}, Open  ]],
Cell[874685, 17698, 803, 19, 30, "Text",ExpressionUUID->"725febc4-7b28-4294-8920-3c68a44853a6",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[875513, 17721, 598, 12, 38, "Input",ExpressionUUID->"9163d795-035f-49af-b825-24702f385294",
 CellTags->"2020928172014.0081744"],
Cell[876114, 17735, 1172, 22, 48, "Output",ExpressionUUID->"ed8ab860-077b-4bb9-a931-13db05abafdf",
 CellTags->"2020928172014.0081744"]
}, Open  ]],
Cell[CellGroupData[{
Cell[877323, 17762, 626, 13, 38, "Input",ExpressionUUID->"697fe191-a5db-402e-a681-b073d06553d0"],
Cell[877952, 17777, 487, 11, 64, "Output",ExpressionUUID->"1db289b7-b0c3-4623-8ae5-6c8ec8d6ef65"]
}, Closed]],
Cell[878454, 17791, 720, 13, 29, "Text",ExpressionUUID->"ca5b1f80-2d45-4915-aa03-f32a3e1476c9",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[879199, 17808, 739, 16, 38, "Input",ExpressionUUID->"fbdd6b4a-ad6e-4dfc-b88d-9e9377d52703",
 CellTags->"2020928172014.0081744"],
Cell[879941, 17826, 1584, 31, 51, "Output",ExpressionUUID->"9836a922-7583-43ad-adfe-57bb1458f128",
 CellTags->"2020928172014.0081744"]
}, Open  ]],
Cell[881540, 17860, 770, 14, 30, "Text",ExpressionUUID->"beb75a0b-be89-4d1b-8a64-10787655c6a8",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[882335, 17878, 696, 14, 38, "Input",ExpressionUUID->"6e88ae40-7a9a-4e95-bcb2-2f56d50d01eb",
 CellTags->"2020928172014.0081744"],
Cell[883034, 17894, 2006, 52, 62, "Output",ExpressionUUID->"6a75c4aa-b3d2-4fe5-ac22-517542736613",
 CellTags->"2020928172014.0081744"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885077, 17951, 860, 15, 38, "Input",ExpressionUUID->"5cbbb703-0486-4dd6-9fe4-db2c7282fb5b",
 CellTags->"2020928172014.0081744"],
Cell[885940, 17968, 118128, 2350, 530, "Output",ExpressionUUID->"071ba790-a067-4170-9610-9b58262ea99c",
 CellTags->"2020928172014.0081744"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1004129, 20325, 155, 4, 74, "SlideShowNavigationBar",ExpressionUUID->"074850b0-fb93-4b8e-b9bf-ab883ea3602d",
 CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
Cell[CellGroupData[{
Cell[1004309, 20333, 602, 12, 42, "Subsubsection",ExpressionUUID->"00cff323-67d7-4fcf-8e42-5fe4765de140",
 CellTags->"2020928172014.0081744"],
Cell[1004914, 20347, 881, 20, 30, "Text",ExpressionUUID->"2f19e776-0147-4bde-976e-89c75b03e7fd",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[1005820, 20371, 573, 10, 38, "Input",ExpressionUUID->"b98e577e-c2d0-4613-b9be-80d9b6820335",
 CellTags->"2020928172014.0081744"],
Cell[1006396, 20383, 5599, 118, 200, "Output",ExpressionUUID->"7dac023f-2f31-4f67-b8cd-c919eca23d03",
 CellTags->"2020928172014.0081744"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1012032, 20506, 615, 12, 38, "Input",ExpressionUUID->"35085f19-a95b-4b2a-a57e-ce17af8a93ca",
 CellTags->"2020928172014.0081744"],
Cell[1012650, 20520, 5644, 119, 200, "Output",ExpressionUUID->"215649d9-e6cc-4f8b-8816-e4c67dbf534d",
 CellTags->"2020928172014.0081744"]
}, Open  ]],
Cell[1018309, 20642, 720, 14, 30, "Text",ExpressionUUID->"2ea3b4fe-648e-43ed-90aa-c03a04602f36",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[1019054, 20660, 740, 15, 38, "Input",ExpressionUUID->"65ec6522-fbd9-4d20-9512-f165a8c6b08d",
 CellTags->"2020928172014.0081744"],
Cell[1019797, 20677, 13833, 289, 350, "Output",ExpressionUUID->"25c63f21-8951-4ff7-b74e-51de12133736",
 CellTags->"2020928172014.0081744"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1033691, 20973, 271, 7, 54, "SlideShowNavigationBar",ExpressionUUID->"e1940bf3-8cb0-4104-a958-6dad2612d590",
 CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
Cell[CellGroupData[{
Cell[1033987, 20984, 642, 14, 81, "Section",ExpressionUUID->"4175662b-c594-487c-9806-a308284cbda7",
 CellTags->"2020928172014.0081744"],
Cell[1034632, 21000, 644, 14, 75, "Text",ExpressionUUID->"e03fb292-7d87-458b-b260-8b688b045bb5",
 CellTags->"2020928172014.0081744"],
Cell[1035279, 21016, 1043, 20, 30, "Text",ExpressionUUID->"f08ba415-839b-4570-b81e-9ad70d487300",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[1036347, 21040, 615, 12, 42, "Subsubsection",ExpressionUUID->"ca0e7e69-8fae-469e-873e-c0f591514f1e",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[1036987, 21056, 527, 11, 38, "Input",ExpressionUUID->"972cdd70-2feb-4e8d-9849-c20b40354388",
 CellTags->"2020928172014.0081744"],
Cell[1037517, 21069, 20151, 399, 93, "Output",ExpressionUUID->"63643801-a369-4a81-a41c-705190282577",
 CellTags->"2020928172014.0081744"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1057741, 21476, 271, 7, 54, "SlideShowNavigationBar",ExpressionUUID->"24be5164-8a97-4be5-990d-b122c4d6dff5",
 CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
Cell[CellGroupData[{
Cell[1058037, 21487, 645, 12, 42, "Subsubsection",ExpressionUUID->"5577563c-6d40-4de6-bb12-b2a9fe534048",
 CellTags->"2020928172014.0081744"],
Cell[1058685, 21501, 641, 15, 38, "Input",ExpressionUUID->"01c22778-da99-404e-8c7a-b09782d7c217",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[1059351, 21520, 781, 17, 38, "Input",ExpressionUUID->"1df0d68f-47da-43a9-9f4d-134a1897dd96",
 CellTags->"2020928172014.0081744"],
Cell[1060135, 21539, 10234, 156, 556, "Output",ExpressionUUID->"caea7046-c0a3-4c09-9f3e-26c6331f63b0",
 CellTags->"2020928172014.0081744"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1070430, 21702, 271, 7, 54, "SlideShowNavigationBar",ExpressionUUID->"fe76e7d5-8c75-4aed-a1c1-1e6c7cdd780e",
 CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
Cell[CellGroupData[{
Cell[1070726, 21713, 685, 12, 42, "Subsubsection",ExpressionUUID->"299bfd08-9923-40a2-b4aa-4c250c973d32",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[1071436, 21729, 770, 18, 38, "Input",ExpressionUUID->"257892d5-9928-4c80-bdd3-036046c08b0d",
 CellTags->"2020928172014.0081744"],
Cell[1072209, 21749, 888, 18, 58, "Output",ExpressionUUID->"dc9accfd-e9bb-4e2c-b6e4-afe1358fc57e",
 CellTags->"2020928172014.0081744"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1073146, 21773, 707, 13, 42, "Subsubsection",ExpressionUUID->"e7dfbe57-6144-4f5c-8f0c-cbdae5728229",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[1073878, 21790, 788, 18, 38, "Input",ExpressionUUID->"26de1fb3-a4c8-4a80-b129-506373b8e9a4",
 CellTags->"2020928172014.0081744"],
Cell[1074669, 21810, 988, 23, 38, "Output",ExpressionUUID->"4d015011-8312-42c4-8b05-a8bb07a9d1ac",
 CellTags->"2020928172014.0081744"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1075706, 21839, 570, 11, 42, "Subsubsection",ExpressionUUID->"4882bc8b-ad5d-4738-b9eb-750081806b30",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[1076301, 21854, 732, 17, 38, "Input",ExpressionUUID->"e43fb863-e463-48f4-aeb3-a2bdbb876a7d",
 CellTags->"2020928172014.0081744"],
Cell[1077036, 21873, 1842, 43, 58, "Output",ExpressionUUID->"d5116fc6-aad2-47f8-8793-58dd4cad4a82",
 CellTags->"2020928172014.0081744"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1078927, 21922, 604, 12, 42, "Subsubsection",ExpressionUUID->"0ddf99b6-38a2-4760-9e5e-00daab90e051",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[1079556, 21938, 807, 20, 38, "Input",ExpressionUUID->"77a174fa-cb50-4f42-a1c0-07a477bc79ec",
 CellTags->"2020928172014.0081744"],
Cell[1080366, 21960, 3566, 93, 96, "Output",ExpressionUUID->"a4a53790-f386-4002-a80a-a9f212cbfdfd",
 CellTags->"2020928172014.0081744"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1083993, 22060, 271, 7, 54, "SlideShowNavigationBar",ExpressionUUID->"f28e6b95-8122-404d-9f06-d2fe231cb2e7",
 CellTags->{"SlideShowHeader", "2020928172014.0081744"}],
Cell[CellGroupData[{
Cell[1084289, 22071, 613, 12, 42, "Subsubsection",ExpressionUUID->"fd2ea037-fe45-4c6d-a449-8877c3c39e6e",
 CellTags->"2020928172014.0081744"],
Cell[1084905, 22085, 1220, 26, 81, "Output",ExpressionUUID->"61a6f5de-d799-4add-bff1-5f2278b936ae",
 CellTags->"2020928172014.0081744"],
Cell[1086128, 22113, 552, 11, 30, "Text",ExpressionUUID->"f7accd10-a1f9-4cd6-aea4-c92ceafe66d9",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[1086705, 22128, 1519, 38, 58, "Input",ExpressionUUID->"1d4114eb-869d-47b1-90c9-1dc27f341715",
 CellTags->"2020928172014.0081744"],
Cell[1088227, 22168, 15052, 433, 246, "Output",ExpressionUUID->"13eb376d-d41d-49be-9c34-c79e9140d50f",
 CellTags->"2020928172014.0081744"]
}, Open  ]],
Cell[1103294, 22604, 553, 11, 30, "Text",ExpressionUUID->"f507fd2a-1203-408c-869a-4f36649b935f",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[1103872, 22619, 635, 14, 38, "Input",ExpressionUUID->"ac7074b3-a2f1-4df1-be2c-ff8b47ba854f",
 CellTags->"2020928172014.0081744"],
Cell[1104510, 22635, 1331, 33, 58, "Output",ExpressionUUID->"7cc948d7-5aba-498f-8dd7-1af8f0900b7d",
 CellTags->"2020928172014.0081744"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1105902, 22675, 238, 5, 54, "SlideShowNavigationBar",ExpressionUUID->"86993c5b-1dc6-45ae-b6a8-ad0601caf639",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1106165, 22684, 503, 11, 81, "Section",ExpressionUUID->"cd7fa2ce-3778-4725-96de-502a41f380e7"],
Cell[1106671, 22697, 940, 22, 75, "Text",ExpressionUUID->"a0cbb0e0-5a20-47f4-bca2-a86f3a300b17",
 CellTags->"2020928172014.0081744"],
Cell[CellGroupData[{
Cell[1107636, 22723, 674, 14, 38, "Input",ExpressionUUID->"04c97257-9d7f-4c92-8f17-cc7e6afd1653"],
Cell[1108313, 22739, 450086, 7751, 454, 189795, 3482, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"036bec46-3d6b-4852-8c2e-bff24b0916b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1558436, 30495, 520, 10, 42, "Subsubsection",ExpressionUUID->"7d211b27-0a1c-4bfc-b930-9ce46579d87d"],
Cell[1558959, 30507, 586, 11, 28, "Text",ExpressionUUID->"14d9ceaa-4590-47e7-bc72-c2959db8cc74"],
Cell[1559548, 30520, 493, 10, 30, "Text",ExpressionUUID->"290b1dd2-23d7-43a9-b2f3-8df871c6ff03"],
Cell[1560044, 30532, 52096, 1371, 290, "Output",ExpressionUUID->"0740f24c-732d-4245-a3ca-572eeef58edd"],
Cell[1612143, 31905, 476, 9, 30, "Text",ExpressionUUID->"43750ed7-769b-4293-a510-11624b711c58"],
Cell[1612622, 31916, 14888, 319, 205, "Output",ExpressionUUID->"11364f32-908e-47fc-be70-07f2277dc9e8"],
Cell[1627513, 32237, 453, 9, 30, "Text",ExpressionUUID->"7bca4e3e-24ff-43ed-aa0c-a06bd26c5fcd"],
Cell[1627969, 32248, 208998, 3919, 234, "Output",ExpressionUUID->"ff1514d5-fe17-42ab-9566-09ce299a90ac"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1837028, 36174, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b1a9f128-6b36-49be-9bfa-d2905405833a",
 CellTags->"SlideShowHeader"],
Cell[1837153, 36178, 212, 4, 98, "Title",ExpressionUUID->"0eccf2c5-40e9-4529-aef8-38c32c07ea4e"],
Cell[1837368, 36184, 260, 5, 28, "Input",ExpressionUUID->"60bf00cf-b0d7-4b10-9d4d-d657444240b9"],
Cell[1837631, 36191, 271, 7, 58, "Text",ExpressionUUID->"6b55ff74-03cf-4d39-9f0b-a4899689403a"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

